{"version":3,"file":"main.d4e511b56653e6341a16.js","mappings":"gBAAIA,E,6lBCWiBC,EAAAA,SAAAA,I,uBACnB,WAAYC,GAAc,6BACxB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,KACPC,UAAW,MALW,CAOzB,C,gDAED,SACED,EACAC,GAGAC,KAAKC,SAAS,CAAEH,MAAAA,EAAOC,UAAAA,GAGxB,G,oBAED,WACE,IAAQG,EAAaF,KAAKJ,MAAlBM,SACR,EAA6BF,KAAKH,MAA1BC,EAAR,EAAQA,MAAR,EAAeC,UAEf,OAAKD,EAKH,2BACE,0BAAI,wBACHA,EAAQ,yBAAIA,EAAMK,YAAkB,MANhCD,CASV,K,EAlCkBP,CAAsBS,EAAAA,e,WCX3C,EAAe,IAA0B,4C,WCSzC,EAPW,SAACR,GACV,OACE,uBAAKS,UAAU,QACZT,EAAMM,SAGZ,E,0GC+DD,EAxDgB,SAACI,GACf,IAAIC,EAAED,EAAIE,KACFC,EAAYH,EAAZG,QACFC,GAAUC,EAAAA,EAAAA,MAQhBC,IAAAA,OAAaC,KACb,IAAMC,EAAcF,IAAML,EAAEQ,MAAMD,aAAaE,OAAO,cACtD,OACE,gBAAC,EAAD,KACE,uBAAKX,UAAU,UAAUY,QAXhB,WACXX,EAAIY,SAASX,EAAE,OAChB,GAUK,uBAAKF,UAAU,SACb,0BAAME,EAAEY,IAAIC,OACZ,wBAAMf,UAAU,WAAU,IAAEE,EAAEc,QAAQC,MACtC,4BAAM,IAAEf,EAAEgB,SAASC,KAAK,IAAEjB,EAAEgB,SAAS1B,QAEvC,uBAAKQ,UAAU,SACb,4BAAM,KAASE,EAAEkB,OAAOC,IAAI,IAAEnB,EAAEY,IAAIQ,MACpC,4BAAOpB,EAAEY,IAAIS,YACb,4BAAM,IAAErB,EAAEc,QAAQQ,cAEpB,sBAAIxB,UAAU,eACZ,0BACE,gBAAC,IAAD,CAAIyB,KAAMC,EAAAA,OAEZ,0BAAI,eACYjB,IAGlB,0BAAI,eACJ,0BACGP,EAAEyB,WAAWC,KAAI,SAACD,EAAoBE,GAArB,OAChB,sBAAIC,IAAKD,GAAQF,EADD,KAIpB,uBAAK3B,UAAU,QACb,2BACE,yBAAG,uBACD,yBACGE,EAAEY,IAAIC,MAAM,OAAKb,EAAEgB,SAASC,KAAK,IAAEjB,EAAEgB,SAAS1B,SAIrD,2BACIY,GAAW,0BAAQJ,UAAU,UAAUY,QA1CnC,WACdP,EAAQ0B,KAAR,eAAqB7B,EAAE8B,KAExB,GAuCqE,mBAMvE,ECgFD,EArIkB,SAACC,GACjB,IAAI/B,EAAE+B,EAAQ9B,KACR+B,EAAYhC,EAAEc,QAAQmB,KACpBC,EAAWH,EAAXG,QAQR,EAAiClC,EAAEmC,QAA5BC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,gBAWdhC,IAAAA,OAAaC,KACb,IAAMgC,EAAUjC,IAAML,EAAEQ,MAAM+B,aAAa9B,OAAO,cAC5C+B,EAAUnC,IAAML,EAAEQ,MAAMD,aAAaE,OAAO,cAClD,OACE,gBAAC,EAAD,KACE,uBAAKX,UAAU,cACb,uBAAKA,UAAU,UACb,uBAAKA,UAAU,YACb,uBAAKA,UAAU,eACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,mBAAmB2C,IAAKT,KAEzC,uBAAKlC,UAAU,YACb,uBAAKA,UAAU,SACb,2BAAME,EAAEY,IAAIC,QAEd,gBAAC,KAAD,CAAM6B,GAAG,KAAM1C,EAAEc,QAAQC,MACzB,wBAAMjB,UAAU,mBAAmBE,EAAEgB,SAASC,KAAK,IAAEjB,EAAEgB,SAAS1B,MAAM,IAAEU,EAAEgB,SAAS2B,SACnF,4BAAM,IAAQ3C,EAAEkB,OAAOC,IAAI,MAAInB,EAAEkB,OAAOI,aACxC,uBAAKxB,UAAU,eACb,uBAAKA,UAAU,YAAW,kBAC1B,2BAAMwC,MAIZ,uBAAKxC,UAAU,QAAQY,QA3CnB,WACTqB,EAAQa,OACTb,EAAQpB,SAAS,KAAK,QAEtBoB,EAAQc,gBAEX,GAqCkD,OAG7C,uBAAK/C,UAAU,qBACb,uBAAKA,UAAU,eACb,qBAAGA,UAAU,SAAQ,eACrB,uBAAKA,UAAU,YACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,WACb,yBAAG,YACH,4BAAOE,EAAEc,QAAQQ,eAGrB,uBAAKxB,UAAU,WACb,uBAAKA,UAAU,WACb,yBAAG,YACH,4BAAOE,EAAEkB,OAAO4B,MAAM,eAK9B,uBAAKhD,UAAU,yBACb,qBAAGA,UAAU,SAAQ,mBACrB,uBAAKA,UAAU,YACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,WACb,yBAAG,kBACH,4BACG0C,KAIP,uBAAK1C,UAAU,WACb,uBAAKA,UAAU,WACb,yBAAG,kBACH,4BACGwC,OAMX,uBAAKxC,UAAU,iBACb,qBAAGA,UAAU,YACX,0BAAI,mBAEN,0BAEIE,EAAE+C,eAAerB,KAAI,SAACsB,GAAD,OACnB,sBAAIpB,IAAKoB,EAAcC,IAAKD,EAAcE,MADvB,MAM3B,uBAAKpD,UAAU,iBACb,qBAAGA,UAAU,YACX,0BAAI,yBAEN,uBAAKA,UAAU,YACb,sBAAIA,UAAU,mBAEVE,EAAEmD,OAAOzB,KAAI,SAAC0B,GAAD,OACX,sBAAIxB,IAAKwB,EAAKH,IAAKG,EAAKF,MADb,OAOnBhB,GAAW,uBAAKpC,UAAU,iBAC1B,qBAAGA,UAAU,YACX,0BAAI,kBAELiC,EAAQpC,WAETyC,GAASC,KAAqBH,GAC9B,uBAAKpC,UAAU,aACb,uBAAKA,UAAU,aACb,0BAAQA,UAAU,WAAWsB,KAAK,SAASV,QAhH5B,WACxB2B,EACDgB,OAAOrC,SAASsC,QAAQjB,GAGvBD,GACDiB,OAAOE,KAAP,iBAAsBnB,EAAtB,yCAGH,GAuGwF,aAO1F,EClGD,EAjDiB,CACf,sBACA,WACA,aACA,mBACA,mBACA,aACA,YACA,wBACA,iBACA,kBACA,iBACA,iBACA,mBACA,qBACA,qBACA,qBACA,oBACA,oBACA,mBACA,wBACA,0BACA,sBACA,qBACA,WACA,aACA,WACA,yBACA,qBACA,UACA,cACA,SACA,sBACA,kBACA,QACA,SACA,oBACA,wBACA,oBACA,mBACA,0BACA,oBAGoBV,KAAI,SAAC8B,EAAS7B,GAAV,MAAqB,CAC7CsB,GAAItB,EACJZ,KAAMyC,EAFkB,IC7CbC,EAAkBC,qC,mBCMzBC,EAAWC,IAAAA,OAAa,CAC5BC,iBAAiB,IAONC,EAAS,mCAAG,WAAOC,GAAP,gGAEEH,IAAAA,IAAA,UAAoBH,EAApB,wBAAqDM,IAFvD,cAEfC,EAFe,yBAGdA,GAHc,yDAKd,MALc,yDAAH,sDASTC,EAAgB,mCAAG,WAAOF,GAAP,gGAELJ,EAASO,IAAT,UAAuBT,EAAvB,0BAA0DM,IAFrD,cAEtBC,EAFsB,yBAGrBA,GAHqB,yDAKrB,MALqB,yDAAH,sDAShBG,EAAY,mCAAE,WAAMJ,GAAN,gGAEFJ,EAASO,IAAT,UAAuBT,EAAvB,6BAA6DM,IAF3D,cAEjBC,EAFiB,yBAGhBA,GAHgB,wHAAF,sDAUZI,EAAe,mCAAG,WAAOL,GAAP,gGAEAJ,EAASO,IAAT,UAAuBT,EAAvB,iCAAiEM,IAFjE,cAErBM,EAFqB,yBAGpBA,GAHoB,yDAKpB,KAAML,UALc,yDAAH,sDAWfM,EAAe,mCAAG,WAAOjF,GAAP,gFACrB4D,EAAO5D,EAAP4D,GADqB,kBAGNU,EAASY,IAAT,UAAgBd,EAAhB,4BAAqDR,IAH/C,cAGrBuB,EAHqB,yBAIpBA,GAJoB,yDAMpB,KAAMR,UANc,yDAAH,sDASfS,EAAgB,mCAAG,WAAOpF,GAAP,gFACtB4D,EAAO5D,EAAP4D,GADsB,kBAGPU,EAASe,KAAT,UAAiBjB,EAAjB,6BAAuDR,IAHhD,cAGtBuB,EAHsB,yBAIrBA,GAJqB,yDAMrB,KAAMR,UANe,yDAAH,sDAShBW,EAAmB,mCAAE,WAAMZ,GAAN,gGAERH,IAAAA,IAAA,UAAoBH,EAApB,mCAAgEM,IAFxD,cAExBC,EAFwB,yBAGvBA,GAHuB,wHAAF,sDASnBY,EAAa,mCAAG,WAAOC,EAAkBd,GAAzB,yFAEnBe,EAAgBC,KAAKC,UAAUH,GAFZ,SAGFjB,IAAAA,IAAA,UAAoBH,EAApB,+BAA4DM,EAA5D,mBAA2Ee,IAHzE,cAGnBd,EAHmB,yBAIlBA,GAJkB,yDAMlB,MANkB,yDAAH,wDASbiB,EAAU,mCAAG,WAAOC,GAAP,gGAECtB,IAAAA,IAAA,UAAkBH,EAAlB,uBAAkDyB,IAFnD,cAEhBlB,EAFgB,yBAGfA,GAHe,yDAKf,KAAMA,UALS,yDAAH,sD,sBCxEjBmB,G,kBAAU,SAACC,GACf,IAAK,IAAIC,EAAED,EAAME,OAAO,EAAED,EAAE,EAAEA,IAAI,CAChC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAUL,EAAE,IAChCM,EAAOP,EAAMC,GACjBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,CACZ,CACF,GA4MD,EA1Ma,WACX,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAsBF,EAAAA,EAAAA,UAAS,QAA/B,eAAOG,EAAP,KAAYC,EAAZ,KACM7F,GAAUC,EAAAA,EAAAA,MAChB,EAAqB6F,EAAAA,SAAe,IAApC,eAAOC,EAAP,KAAYC,EAAZ,KACA,EAAmCF,EAAAA,SAAe,IAAlD,eAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAoBJ,EAAAA,SAAe,IAAnC,eAAOrF,EAAP,KAAW0F,EAAX,KACA,EAAqBL,EAAAA,SAAe,GAApC,eAAOlC,EAAP,KAAYwC,EAAZ,KACA,EAAqCN,EAAAA,UAAe,GAApD,eAAOO,EAAP,KAAoBC,EAApB,KACA,EAAyCR,EAAAA,SAAe,IAAxD,eAAOS,EAAP,KAAsBC,EAAtB,KACA,GAAsCf,EAAAA,EAAAA,UAAS,GAA/C,eAAOgB,EAAP,KACA,IADA,MACkChB,EAAAA,EAAAA,UAAS,KAA3C,iBAAQ5E,GAAR,MAAkB6F,GAAlB,MACA,IAAkCjB,EAAAA,EAAAA,UAAS,IAA3C,iBAAQkB,GAAR,MAAkBC,GAAlB,MASMC,IAAeC,EAAAA,EAAAA,QAAO,MAQtBC,GAAmB,CACvBC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aALgB9B,KAAK+B,MAAMlE,OAAOmE,OAAOC,MAAM,KAM/CC,eAAgB,EAChBC,UAAU,EACVC,cAAe,KAGXC,IAAgBZ,EAAAA,EAAAA,QAAO,MASvBa,GAAatC,KAAK+B,MAAMlE,OAAOmE,OAAOC,MAAM,KAC5CM,GAAoB,CACxBZ,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAcQ,GACdJ,eAAgB,EAChBC,UAAU,EACVC,cAAe,KAEXI,GAAS,mCAAC,WAAMjE,GAAN,yFACID,EAAUC,GADd,UAEM,IADdkE,EADQ,QAEPC,KAAK5C,OAFE,uBAGZmB,GAAgB,GAHJ,0BAMXwB,IACKE,EAAUF,EAAIC,KACpB/C,EAAQgD,GACRhC,EAAQ,GAAD,eAAKD,IAAL,OAAaiC,KACpBrC,EAAcqC,EAAQ,IACtBnC,EAAQ,SAXI,2CAAD,sDAcToC,GAAmB,mCAAC,WAAMxB,GAAN,yFACNjC,EAAoBiC,GADd,QAClBqB,EADkB,UAGhBE,EAAQF,EAAIC,KAClB/C,EAAQgD,GACRxB,EAAkBwB,IALI,2CAAD,sDAQzBlC,EAAAA,WAAgB,WACdmC,GAAoBxB,GACpBoB,GAAUjE,EACX,GAAC,CAAC6C,EAAY7C,IACfkC,EAAAA,WAAgB,WACd,IAAIoC,EAAanC,EACdmC,IACDA,EAAanC,EAAKoC,QAAO,SAAAC,GAAI,OAAIA,EAAK3H,IAAIC,MAAM2H,cAAcC,SAASrC,EAAYoC,cAAtD,KAE/BlC,EAAO+B,EACR,GAAC,CAAC3B,EAAeR,IAClB,IAIMvF,GAAS,SAACC,EAAQ8H,GACtB1C,EAAQ0C,GACR5C,EAAclF,EACf,EASD,OACE,gBAAC,EAAD,KACE,uBAAKd,UAAU,cACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,aACb,uBAAKA,UAAU,aACb,gBAAC,GAAD,CAAWoI,KAAMA,EAAMS,YAtBb,SAACC,GACrBvC,EAAeuC,EAChB,EAoBgEC,OAhG1C,SAAC3F,GACtB6D,GAAY7D,EACb,KAgGS,uBAAKpD,UAAU,eACb,gBAAC,GAAD,CAAW+I,OAtGA,SAAC3F,GACtB2D,GAAY3D,EACb,KAsGS,uBAAKpD,UAAU,aAAaY,QAnBnB,WACjBP,EAAQ0B,KAAK,CACXiH,SAAS,UACTxJ,MAAO,CAACwH,SAAUA,GAASiC,cAAe/H,KAG7C,GAcW,4BAAM,WACN,gBAAC,IAAD,CAAIO,KAAMyH,EAAAA,QAGd,gBAAC,GAAD,OAEF,uBAAKlJ,UAAU,UACY,IAAxB4G,EAAepB,QAChB,uBAAKxF,UAAU,sBACb,gBAAC,KAAD,UAAYoH,GAAZ,CAA8B+B,IAAKjC,KAChCN,EAAehF,KAAI,SAACwH,GAAD,OAClB,gBAAC,EAAD,CAAStH,IAAKsH,EAAQtI,IAAIC,MAAOZ,KAAMiJ,EAASvI,SAAUA,IADxC,KAKtB,uBAAKb,UAAU,gBACb,0BAAQA,UAAU,gBAAgBY,QA9G1B,WAClBsG,GAAamC,QAAQC,WACtB,GA6Ga,gBAAC,IAAD,CAAI7H,KAAM8H,EAAAA,OAEZ,0BAAQvJ,UAAU,gBAAgBY,QApH9B,WACdsG,GAAamC,QAAQG,WACtB,GAmHa,gBAAC,IAAD,CAAI/H,KAAMgI,EAAAA,UAMjB7C,EAAepB,QAAQwC,IACxB,uBAAKhI,UAAU,8BACZ4G,EAAehF,KAAI,SAACwH,GAAD,OAClB,uBAAKpJ,UAAU,gBAAgB8B,IAAKsH,EAAQpH,KAC1C,uBAAKhC,UAAU,gBACb,uBAAK2C,IAAKyG,EAAQpI,QAAQmB,KAAMuH,IAAI,SACpC,0BAAKN,EAAQpI,QAAQC,OAJP,KAUrB2F,EAAepB,OAAOwC,IACvB,uBAAKhI,UAAU,sBACb,gBAAC,KAAD,UAAYiI,GAAZ,CAA+BkB,IAAKpB,KACjCnB,EAAehF,KAAI,SAACwH,GAAD,OAClB,uBAAKpJ,UAAU,gBAAgB8B,IAAKsH,EAAQpH,KAC1C,uBAAKhC,UAAU,gBACb,uBAAK2C,IAAKyG,EAAQpI,QAAQmB,KAAMuH,IAAI,SACpC,0BAAKN,EAAQpI,QAAQC,OAJP,KAStB,uBAAKjB,UAAU,aACb,0BAAQA,UAAU,aAAaY,QA7HpB,WACnBmH,GAAcsB,QAAQC,WACvB,GA4HW,gBAAC,IAAD,CAAI7H,KAAM8H,EAAAA,OAEZ,0BAAQvJ,UAAU,aAAaY,QApIxB,WACfmH,GAAcsB,QAAQG,WACvB,GAmIW,gBAAC,IAAD,CAAI/H,KAAMgI,EAAAA,SAKhB,uBAAKzJ,UAAU,QACb,uBAAKA,UAAkB,SAAPiG,GAAqB1C,OAAOmE,OAAOC,MAAM,IAA3B,OAAsC,QAClE,gBAAC,IAAD,CACEgC,WAAYvD,EAAKZ,OACjBoE,QAASlD,EACTmD,KAAM,kBAAIpD,EAAQL,EAAKZ,OAAjB,EACNsE,OAAQ,0BAAI,eAEVhJ,EAAIc,KAAI,SAACwH,GAAD,OACR,gBAAC,EAAD,CAAStH,IAAKsH,EAAQpH,IAAK7B,KAAMiJ,EAASvI,SAAUA,IAD5C,MAIV6F,GAAgB,sBAAI1G,UAAU,iBAAgB,+BAElD,uBAAKA,UAAWiG,GACbF,GAAc,gBAAC,EAAD,CAAYjE,IAAKiE,EAAW/D,IAAK7B,KAAM4F,EAAYlF,SAAUA,GAAUkC,eAAgB,KAAMD,QAAQ,OAM/H,E,UC5NYiH,EAAS,mCAAG,WAAQxK,GAAR,gFACfyK,EAASzK,EAATyK,KADe,kBAGElG,IAAAA,KAAA,UAAcH,EAAd,eAA6CqG,GAH/C,cAGf9F,EAHe,yBAIdA,GAJc,yDAMd,MANc,yDAAH,sDCJT+F,EAAS,SAACD,GAOrB,MANwB,CACtB,QAAQ,cAAc,OAAO,SAEEE,QAAO,SAACC,EAAIC,GAC3C,OAAOD,GAAOH,EAAKI,EACpB,IAAC,GACeJ,EAAM,IAExB,E,skBCHD,IAwFA,GAxFkB,WAChB,OAAkClE,EAAAA,EAAAA,UAAS,CAACpB,OAAO,GAAG2F,MAAM,KAA5D,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAoCzE,EAAAA,EAAAA,WAAS,GAA7C,eAAQ0E,EAAR,KAAmBC,EAAnB,KACA,GAA8B3E,EAAAA,EAAAA,UAAS,CAACxD,MAAM,GAAGoI,YAAY,GAAGzJ,KAAK,GAAG0J,MAAM,KAA9E,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAwB,sBAAnBxI,EAA+C,0BAAzCV,EAAuE,8BACpFmJ,EAAQ,mCAAE,WAAOC,GAAP,4EACdA,EAAEC,iBACIjB,EAAOY,EACbH,GAAa,IACVR,EAASD,GAJE,gCAKWD,EAAU,CAACC,KAAAA,IALtB,OAKN9F,EALM,OAOVqG,EADCrG,EACa,CAACQ,OAAO,aAAc2F,MAAM,SAE5B,CAAC3F,OAAO,SAAU2F,MAAM,QAT5B,OAYda,YAAW,WACTX,EAAc,CAAC7F,OAAO,GAAG2F,MAAM,KAC/BI,GAAa,EACd,GAAE,KAfW,2CAAF,sDAiBRU,EAAa,SAACH,GAClBH,GAAY,SAAAO,GACV,gBACKA,GADL,cAEGJ,EAAEK,OAAOpK,KAAM+J,EAAEK,OAAOjI,OAE5B,GACF,EAYD,OACE,gBAAC,EAAD,KACE,uBAAKpD,UAAU,oBACb,uBAAKA,UAAU,sBACb,uBAAKA,UAAU,WAAU,uBAGzB,uBAAKA,UAAU,WAAU,4IAGzB,uBAAKA,UAAU,QACb,uBAAKA,UAAU,SAAQ,mCAGvB,uBAAKY,QAzBQ,WACrB,IAAM0K,EAAM,OAAOR,EACnBvH,OAAOrC,SAASsC,QAAQ8H,EACzB,EAsBuCtL,UAAU,SACtC,gBAAC,IAAD,CAAIyB,KAAM8J,EAAAA,MACV,4BAAM,IAAET,EAAK,MAEf,uBAAKlK,QAzBS,WACtB,IAAM0K,EAAM,UAAUhJ,EACtBiB,OAAOrC,SAASsC,QAAQ8H,EACzB,EAsBwCtL,UAAU,SACvC,gBAAC,IAAD,CAAIyB,KAAM+J,EAAAA,MACV,4BAAM,8BAER,uBAAK5K,QAzBO,WACpB2C,OAAOrC,SAASsC,QAAQ5B,EACzB,EAuBsC5B,UAAU,SACrC,gBAAC,IAAD,CAAIyB,KAAMgK,EAAAA,MACV,4BAAM,mCAIZ,uBAAKzL,UAAU,kBACb,2BACE,wBAAM+K,SAAUA,EAAUW,OAAO,KAC/B,yBAAOpK,KAAK,QAAQL,KAAK,QAASmC,MAAOwH,EAAStI,MAAOqJ,UAAQ,EAACC,SAAUT,EAAcU,YAAY,UACtG,yBAAOvK,KAAK,OAAOL,KAAK,OAAOmC,MAAOwH,EAAS3J,KAAM0K,UAAQ,EAACC,SAAUT,EAAcU,YAAY,cAClG,yBAAOvK,KAAK,OAAOL,KAAK,cAAc0K,UAAQ,EAACvI,MAAOwH,EAASF,YAAakB,SAAUT,EAAeU,YAAY,iBACjH,4BAAU5K,KAAK,QAAQ2K,SAAUT,EAAcQ,UAAQ,EAACE,YAAY,UAAU1I,GAAG,GAAG2I,KAAM,GAAIC,KAAM,IACpG,uBAAK/L,UAAU,YACb,0BAAQsB,KAAK,SAAStB,UAAWwK,EAAU,aAAa,WAAYA,EAAU,UAAU,eAAe,KACvG,wBAAMxK,UAAW,gBAAgBsK,EAAWD,OAASC,EAAW5F,aAQ/E,EC3FKb,GAAWC,IAAAA,OAAa,CAC5BC,iBAAiB,IAGNiI,GAAW,mCAAG,6GAELlI,IAAAA,IAAA,UAA4BH,EAA5B,qBAFK,cAEjBwE,EAFiB,yBAGhBA,GAHgB,gCAKvB,KALuB,yDAAH,qDAQX8D,GAAa,mCAAG,WAAOC,GAAP,gGAEPrI,GAASe,KAAT,UAAiBjB,EAAjB,uBAAwD,CAACuI,QAAAA,IAFlD,cAEnB/D,EAFmB,yBAGlBA,GAHkB,yDAKlB,KAAMjE,UALY,yDAAH,sDCgB1B,GAzB6B,WAC3B,OAAiC4B,EAAAA,EAAAA,UAAS,IAA1C,eAAQqG,EAAR,KAAkBC,EAAlB,KACMC,EAAa,mCAAG,oGACFL,KADE,OAEJ,OADV7D,EADc,QAEbzD,QACL0H,EAAYjE,EAAIC,MAHE,2CAAH,qDASnB,OAHAjC,EAAAA,WAAgB,WACdkG,GACD,GAAC,IAEA,gBAAC,EAAD,KACE,uBAAKrM,UAAU,YACb,uBAAKA,UAAU,WACXmM,GACAA,EAASvK,KAAI,SAAEsK,GAAF,OACX,gBAAC,GAAD,CAASpK,IAAKoK,EAAQ5K,KAAM4K,QAAUA,GAD3B,MAQxB,ECPD,GAdiB,WACf,OAA4BI,EAAAA,EAAAA,YAAWC,IAA/B/M,EAAR,EAAQA,MACFa,GADN,EAAemM,UACElM,EAAAA,EAAAA,OACjB,GAAId,EAAMiN,MAASjN,EAAM4C,QAIzB,OACE,gBAAC,EAAD,KACE,gBAAC,GAAD,OALF/B,EAAQ0B,KAAK,SAQhB,ECFD,GAjBe,SAAC2K,GAad,MAZwB,CACtB,YAAa,oBAAqB,iBAAkB,eAAgB,sBAAuB,eAAgB,gBAAiB,iBAAkB,mBAC9I,kBAAmB,oBAAoB,aAAc,eAAgB,qBAF/C,CAGrB,aAAa,iBAAiB,UAEAxC,QAAO,SAACC,EAAIC,GAC3C,GAAc,mBAAVA,GAAwC,WAAVA,GAAgC,eAAVA,EACtD,OAAOD,KAAUuC,EAAKtC,GAExB,IAAMuC,EAAYvC,EAAMwC,MAAM,KAC9B,OAAOzC,KAAUuC,EAAKC,EAAU,IAAIA,EAAU,GAC/C,IAAC,GACeD,EAAM,IAExB,E,mCCoGD,GA/GwB,SAACnN,GACvB,IAAQsN,EAAetN,EAAfsN,WACR,GAA4B/G,EAAAA,EAAAA,UAAS,CAAC,gBAAiB,UAAW,cAAc,kBAAkB,cAAc,YAAY,mBAAmB,kBAAkB,iBAAiB,iBAAiB,gBAAgB,WAAW,aAAa,YAAY,cAAc,aAArQ,eAAOgH,EAAP,KACMC,GADN,KACuB,SAAC3C,EAAchH,GACnB,GAAdA,EAAMoC,OAITqH,EAAWzC,EAAMhH,GAHfyJ,EAAWzC,EAAM,KAIpB,GAID,OACE,gBAAC,EAAD,KACE,uBAAKpK,UAAU,QACb,uBAAKA,UAAU,aAAY,eAC3B,uBAAKA,UAAU,OACb,yBAAOgN,QAAQ,SAAQ,YAErB,wBAAMhN,UAAU,kBAAiB,MAEnC,0BACEA,UAAU,QACV2L,UAAQ,EACR1K,KAAK,QACLkC,GAAG,QACHyI,SAAU,SAACZ,GAAD,OAAK6B,EAAW,YAAY7B,EAAEK,OAAOjI,MAArC,GAEV,0BAAQA,MAAM,IAAG,UACjB,0BAAQA,MAAM,4BAA2B,4BACzC,0BAAQA,MAAM,WAAU,WACxB,0BAAQA,MAAM,sCAAqC,sCACnD,0BAAQA,MAAM,eAAc,eAC5B,0BAAQA,MAAM,4BAA2B,4BACzC,0BAAQA,MAAM,WAAU,WACxB,0BAAQA,MAAM,kBAAiB,kBAC/B,0BAAQA,MAAM,kBAAiB,kBAC/B,0BAAQA,MAAM,mBAAkB,mBAChC,0BAAQA,MAAM,sBAAqB,sBACnC,0BAAQA,MAAM,6BAA4B,6BAC1C,0BAAQA,MAAM,mBAAkB,mBAChC,0BAAQA,MAAM,sBAAqB,sBACnC,0BAAQA,MAAM,oBAAmB,oBACjC,0BAAQA,MAAM,mBAAkB,mBAChC,0BAAQA,MAAM,sBAAqB,sBACnC,0BAAQA,MAAM,cAAa,gBAG/B,uBAAKpD,UAAU,OACb,yBAAOgN,QAAQ,iBAAgB,gBAE7B,wBAAMhN,UAAU,kBAAiB,MAEnC,yBACEsB,KAAK,OACLL,KAAK,gBACL2K,SAAU,SAACZ,GAAD,OAAK6B,EAAW,oBAAoB7B,EAAEK,OAAOjI,MAA7C,EACVuI,UAAQ,EACRxI,GAAG,mBAGP,uBAAKnD,UAAU,OACb,yBAAOgN,QAAQ,cAAa,aAE1B,wBAAMhN,UAAU,kBAAiB,MAEnC,yBACEsB,KAAK,OACLL,KAAK,aACL2K,SAAU,SAACZ,GAAD,OAAK6B,EAAW,iBAAiB7B,EAAEK,OAAOjI,MAA1C,EACVuI,UAAQ,EACRxI,GAAG,gBAGP,uBAAKnD,UAAU,OACb,yBAAOgN,QAAQ,SAAQ,aAErB,wBAAMhN,UAAU,kBAAiB,MAEnC,gBAAC,GAAAiN,YAAD,CAAajN,UAAU,QACrBkN,SAAU,SAAClC,GAAD,OAAK+B,EAAiB,aAAa/B,EAAnC,EACVmC,SAAU,SAACnC,GAAD,OAAK+B,EAAiB,aAAa/B,EAAnC,EACVoC,UAAU,EACVC,QAASP,EACTQ,eAAgB,CAAC,eAGrB,uBAAKtN,UAAU,OACb,yBAAOgN,QAAQ,WAAU,WAEvB,wBAAMhN,UAAU,kBAAiB,MAEnC,0BACEA,UAAU,QACV2L,UAAQ,EACR1K,KAAK,UACLkC,GAAG,UACHyI,SAAU,SAACZ,GAAD,OAAK6B,EAAW,WAAW7B,EAAEK,OAAOjI,MAApC,GAEV,0BAAQA,MAAM,aAAY,aAC1B,0BAAQA,MAAM,YAAW,YACzB,0BAAQA,MAAM,aAAY,aAC1B,0BAAQA,MAAM,cAAa,iBAMtC,ECrCD,GAvE+B,SAAC7D,GAE9B,IAAQsN,EAAetN,EAAfsN,WASR,OACE,gBAAC,EAAD,KACE,uBAAK7M,UAAU,QACb,uBAAKA,UAAU,aAAY,mBAC3B,uBAAKA,UAAU,OACb,yBAAOgN,QAAQ,eAAc,eAE3B,wBAAMhN,UAAU,kBAAiB,MAEnC,yBACEsB,KAAK,OACLL,KAAK,cACL2K,SAAU,SAACZ,GAAD,OAAK6B,EAAW,eAAe7B,EAAEK,OAAOjI,MAAxC,EACVuI,UAAQ,EACRxI,GAAG,iBAGP,uBAAKnD,UAAU,OACb,yBAAOgN,QAAQ,eAAc,oBAE3B,wBAAMhN,UAAU,kBAAiB,MAEnC,0BACEA,UAAU,QACV2L,UAAQ,EACR1K,KAAK,cACLkC,GAAG,cACHyI,SAAU,SAACZ,GAAD,OAAK6B,EAAW,sBAAsB7B,EAAEK,OAAOjI,MAA/C,GAEV,0BAAQA,MAAM,IAAG,UACjB,0BAAQA,MAAM,YAAW,YACzB,0BAAQA,MAAM,YAAW,YACzB,0BAAQA,MAAM,cAAa,cAC3B,0BAAQA,MAAM,uBAAsB,uBACpC,0BAAQA,MAAM,cAAa,cAC3B,0BAAQA,MAAM,wBAAuB,0BAGzC,uBAAKpD,UAAU,OACb,yBAAOgN,QAAQ,eAAc,OAE3B,wBAAMhN,UAAU,kBAAiB,MAEnC,yBACEsB,KAAK,OACLiM,OAAO,mBACPvN,UAAU,QACViB,KAAK,cACL2K,SAAU,SAACZ,GAAD,OAxDHwC,EAwDgBxC,EAAEK,OAAOoC,MAAM,QAnD9CZ,EAAW,OAJPW,GACgB,MAFN,IAACA,CAwDG,EACV7B,UAAQ,EACRxI,GAAG,iBAEP,uBAAKnD,UAAU,cACb,wBAAMA,UAAU,YAAW,yBAAG,6BAKvC,ECOD,GA5EgC,SAACT,GAE/B,IAAQsN,EAAetN,EAAfsN,WAER,OACE,gBAAC,EAAD,KACE,uBAAK7M,UAAU,QACb,uBAAKA,UAAU,aAAY,4BAC3B,uBAAKA,UAAU,OACb,yBAAOgN,QAAQ,QAAO,OAEpB,wBAAMhN,UAAU,kBAAiB,MAEnC,yBACEsB,KAAK,OACLL,KAAK,OACL2K,SAAU,SAACZ,GAAD,OAAK6B,EAAW,gBAAgB7B,EAAEK,OAAOjI,MAAzC,EACVuI,UAAQ,EACRxI,GAAG,UAGP,uBAAKnD,UAAU,OACb,yBAAOgN,QAAQ,SAAQ,QAErB,wBAAMhN,UAAU,kBAAiB,MAEnC,yBACEsB,KAAK,OACLL,KAAK,QACL2K,SAAU,SAACZ,GAAD,OAAK6B,EAAW,iBAAiB7B,EAAEK,OAAOjI,MAA1C,EACVuI,UAAQ,EACRxI,GAAG,WAGP,uBAAKnD,UAAU,OACb,yBAAOgN,QAAQ,WAAU,UAEvB,wBAAMhN,UAAU,kBAAiB,MAEnC,yBACEsB,KAAK,OACLL,KAAK,UACL2K,SAAU,SAACZ,GAAD,OAAK6B,EAAW,mBAAmB7B,EAAEK,OAAOjI,MAA5C,EACVuI,UAAQ,EACRxI,GAAG,aAGP,uBAAKnD,UAAU,OACb,yBAAOgN,QAAQ,UAAS,SAEtB,wBAAMhN,UAAU,kBAAiB,MAEnC,0BACEA,UAAU,QACV2L,UAAQ,EACR1K,KAAK,SACLkC,GAAG,SACHyI,SAAU,SAACZ,GAAD,OAAK6B,EAAW,kBAAkB7B,EAAEK,OAAOjI,MAA3C,GAEV,0BAAQA,MAAM,IAAG,UACjB,0BAAQA,MAAM,iBAAgB,iBAC9B,0BAAQA,MAAM,UAAS,UACvB,0BAAQA,MAAM,QAAO,QACrB,0BAAQA,MAAM,iBAAgB,iBAC9B,0BAAQA,MAAM,gBAAe,gBAC7B,0BAAQA,MAAM,aAAY,aAC1B,0BAAQA,MAAM,qBAAoB,qBAClC,0BAAQA,MAAM,eAAc,eAC5B,0BAAQA,MAAM,WAAU,cAMnC,EC9CD,GA7BkB,SAAC7D,GAEjB,IAAQsN,EAAetN,EAAfsN,WAER,OACE,gBAAC,EAAD,KACE,uBAAK7M,UAAU,QACb,uBAAKA,UAAU,aAAY,SAC3B,uBAAKA,UAAU,OACb,yBAAOgN,QAAQ,kBAAiB,uBAE9B,wBAAMhN,UAAU,kBAAiB,MAEnC,yBACEA,UAAU,QACV0N,KAAK,IAAIC,MAAOC,cAAchB,MAAM,KAAK,GACzCiB,IAAK,IAAIF,KAAK,cAAcC,cAAchB,MAAM,KAAK,GACrDtL,KAAK,OACLqK,UAAQ,EACR1K,KAAK,iBACL2K,SAAU,SAACZ,GAAD,OAAK6B,EAAW,oBAAoB7B,EAAEK,OAAOjI,MAA7C,EACVD,GAAG,qBAMd,ECoDD,GA9E+B,SAAC5D,GAE9B,OAA0CuG,EAAAA,EAAAA,UAAS,IAAnD,eAAO5C,EAAP,KAAsB4K,EAAtB,KACA,GAA4ChI,EAAAA,EAAAA,UAAS,IAArD,eAAO7C,EAAP,KAAuB8K,EAAvB,KACA,GAA8CjI,EAAAA,EAAAA,WAAS,GAAvD,eAAOkI,EAAP,KAAwBC,EAAxB,KAEQpB,EAAetN,EAAfsN,WAEFqB,EAAsB,SAAClD,GAC3B8C,EAAiB9C,EAAEK,OAAOjI,MAC3B,EAgCD,OACE,gBAAC,EAAD,KACE,uBAAKpD,UAAU,QACb,uBAAKA,UAAU,aAAY,kCAEzB,wBAAMA,UAAU,kBAAiB,MAEnC,0BAEIiD,EAAerB,KAAI,SAACsB,GAAD,OACjB,sBAAIpB,IAAKoB,EAAcC,IAAKD,EAAcE,MACxC,wBAAOxC,QAAS,kBAzCDuC,EAyCyBD,EAAcC,QAxClE4K,GAAkB,SAACI,GACjB,IAAMC,EAAkBnL,EAAeuF,QAAO,SAACtF,GAAD,OAAiBA,EAAcC,IAAIA,CAAnC,IAC9C,OAA8B,IAA3BiL,EAAkB5I,QACnBqH,EAAW,iBAAiB,MACrBuB,IAETvB,EAAW,iBAAiBuB,GACrBA,EACR,IATyB,IAACjL,CAyCC,EAA2CnD,UAAU,kBAAkB,KAFxE,KAOvB,uBAAKA,UAAU,OACb,yBACEsB,KAAK,OACLL,KAAK,qBACL2K,SAAUsC,EACVG,OAAQH,EACR/K,GAAG,UACH0I,YAAY,wBACZzI,MAAOF,IAET,0BAAQ5B,KAAK,SAAUV,QA5CN,WACvB,IAAIsC,EAAcoL,OAKhB,OAJAL,GAAmB,QACnB/C,YAAW,WACT+C,GAAmB,EACpB,GAAE,KAGLF,GAAkB,SAACI,GACjB,IAAMI,EAAkB,kBACnBtL,GADmB,CACJ,CAACE,GAAGF,EAAeuC,OAAOpC,MAAMF,KAGpD,OADA2J,EAAW,iBAAiB0B,GACrBA,CACR,IAAET,EAAiB,GAErB,EA4ByD9N,UAAU,UAAU,SAExE,uBAAKA,UAAU,YACb,wBAAMA,UAAU,kBAAkBgO,GAlEhB,eAuE3B,ECAD,GA5EuB,SAACzO,GAEtB,OAA2BuG,EAAAA,EAAAA,UAAS,IAApC,eAAOzC,EAAP,KAAemL,EAAf,KACA,GAAsB1I,EAAAA,EAAAA,UAAS,IAA/B,eAAOxC,EAAP,KAAamL,EAAb,KACA,GAA8C3I,EAAAA,EAAAA,WAAS,GAAvD,eAAOkI,EAAP,KAAwBC,EAAxB,KAEOpB,EAActN,EAAdsN,WAqCP,OACE,gBAAC,EAAD,KACE,uBAAK7M,UAAU,QACb,uBAAKA,UAAU,aAAY,aAEzB,wBAAMA,UAAU,kBAAiB,MAEnC,0BAEIqD,EAAOzB,KAAI,SAAC0B,GAAD,OACT,sBAAIxB,IAAKwB,EAAKH,IAAKG,EAAKF,MACtB,wBAAMxC,QAAS,kBA1CTuC,EA0CwBG,EAAKH,QAzC/CqL,GAAU,SAACE,GACT,IAAMC,EAAUtL,EAAOmF,QAAO,SAAClF,GAAD,OAAQA,EAAKH,IAAIA,CAAjB,IAC9B,OAAsB,IAAnBwL,EAAUnJ,QACXqH,EAAW,SAAS,MACb8B,IAET9B,EAAW,SAAS8B,GACbA,EACR,IATgB,IAACxL,CA0CS,EAAyBnD,UAAU,kBAAkB,KAF7D,KAOf,uBAAKA,UAAU,eACb,4BAAU+L,KAAM,EAAGD,KAAM,GAAI7K,KAAK,YAAa2K,SApDpC,SAACZ,GAClByD,EAAQzD,EAAEK,OAAOjI,MAClB,EAkD4ED,GAAG,UACtE0I,YAAY,uEAEd,0BAAQvK,KAAK,SAAUV,QAvCf,WACd,IAAI0C,EAAKgL,OAKP,OAJAL,GAAmB,QACnB/C,YAAW,WACT+C,GAAmB,EACpB,GAAE,KAGLO,GAAU,SAACI,GACT,IAAMC,EAAU,kBACXxL,GADW,CACJ,CAACF,GAAGE,EAAOmC,OAAOpC,MAAME,KAGpC,OADAuJ,EAAW,SAASgC,GACbA,CACR,IAAEJ,EAAQ,GAGZ,EAsBgDzO,UAAU,UAAU,SAE/D,uBAAKA,UAAU,QAGf,uBAAKA,UAAU,YACb,wBAAMA,UAAU,kBAAkBgO,GAhEhB,eAqE3B,EChBD,GA1DuB,SAACzO,GAEtB,IAAQsN,EAAetN,EAAfsN,WAER,OACE,gBAAC,EAAD,KACE,uBAAK7M,UAAU,QACb,uBAAKA,UAAU,aAAY,kBAC3B,uBAAKA,UAAU,OACb,yBAAOgN,QAAQ,UAAS,SAEtB,wBAAMhN,UAAU,kBAAiB,MAEnC,yBACEsB,KAAK,SACLL,KAAK,SACL2K,SAAU,SAACZ,GAAD,OAAK6B,EAAW,aAAa7B,EAAEK,OAAOjI,MAAtC,EACVuI,UAAQ,EACRxI,GAAG,YAGP,uBAAKnD,UAAU,OACb,yBAAOgN,QAAQ,SAAQ,YAErB,wBAAMhN,UAAU,kBAAiB,MAEnC,yBACEsB,KAAK,SACLL,KAAK,QACL2K,SAAU,SAACZ,GAAD,OAAK6B,EAAW,eAAe7B,EAAEK,OAAOjI,MAAxC,EACVuI,UAAQ,EACRxI,GAAG,WAGP,uBAAKnD,UAAU,OACb,yBAAOgN,QAAQ,cAAa,cAE1B,wBAAMhN,UAAU,kBAAiB,MAEnC,0BACEA,UAAU,QACV2L,UAAQ,EACR1K,KAAK,aACLkC,GAAG,UACHyI,SAAU,SAACZ,GAAD,OAAK6B,EAAW,qBAAqB7B,EAAEK,OAAOjI,MAA9C,GAEV,0BAAQA,MAAM,IAAG,UACjB,0BAAQA,MAAM,UAAS,UACvB,0BAAQA,MAAM,WAAU,WACxB,0BAAQA,MAAM,WAAU,WACxB,0BAAQA,MAAM,aAAY,gBAMrC,E,ykBCxDD,IAqDA,GArDuB,SAAC7D,GAEtB,IAAQsN,EAAetN,EAAfsN,WACR,EAAmC1G,EAAAA,SAAe,CAChD7D,OAAM,EACNwM,SAAQ,IAFV,eAAOC,EAAP,KAAmBC,EAAnB,KAIMC,EAAc,SAACC,GACnB,MAAwBA,EAAM7D,OAAtBlI,EAAR,EAAQA,GAAIgM,EAAZ,EAAYA,QACZH,GAAe,SAACI,GAAD,UAAC,MACXA,GADU,cAEZjM,EAAKgM,GAFO,GAIhB,EAGD,OACE,gBAAC,EAAD,KACE,uBAAKnP,UAAU,QACb,uBAAKA,UAAU,aAAY,2BAC3B,uBAAKA,UAAU,cACb,yBAAOgN,QAAQ,SAAQ,YACvB,yBAAO1L,KAAK,WAAWL,KAAK,MAAMkC,GAAG,QAAQgM,QAASJ,EAAYzM,MAAO1B,QAASqO,IAClF,yBAAOjC,QAAQ,WAAU,sBACzB,yBAAO1L,KAAK,WAAWL,KAAK,MAAMkC,GAAG,UAAUgM,QAASJ,EAAYD,QAASlO,QAASqO,KAEtFF,EAAYzM,OACd,uBAAKtC,UAAU,OACb,yBAAOgN,QAAQ,OAAM,YACrB,yBACE1L,KAAK,OACLL,KAAK,iBACL2K,SAAU,SAACZ,GAAD,OAAK6B,EAAW,gBAAgB7B,EAAEK,OAAOjI,MAAzC,EACVD,GAAG,MACH0I,YAAY,uBAGfkD,EAAYD,SACb,uBAAK9O,UAAU,OACb,yBAAOgN,QAAQ,OAAM,oBACrB,yBACE1L,KAAK,OACLL,KAAK,iBACL2K,SAAU,SAACZ,GAAD,OAAK6B,EAAW,0BAA0B7B,EAAEK,OAAOjI,MAAnD,EACVD,GAAG,MACH0I,YAAY,sBAMvB,ECtDKhI,GAAWC,IAAAA,OAAa,CAC5BC,iBAAiB,IAONsL,GAAO,mCAAG,WAAO9P,GAAP,kFACbmN,EAAkBnN,EAAlBmN,KAAMR,EAAY3M,EAAZ2M,QADO,kBAGDrI,GAASe,KAAT,UAAiBjB,EAAjB,qBAAsD,CAAC+I,KAAAA,EAAKR,QAAAA,IAH3D,cAGb/D,EAHa,yBAIZA,GAJY,yDAMZ,KAAMjE,UANM,yDAAH,sD,ykBCWpB,IAAMoL,GAAuB,CAC3BxO,IAAK,CACHC,MAAO,GACPQ,WAAY,GACZD,KAAM,YACN4B,cAAc,IAEhBlC,QAAS,CACPC,KAAM,GACNO,YAAa,GACbW,KAAM,IAERjB,SAAU,CACRC,KAAM,GACN0B,QAAS,GACT0M,OAAQ,GACR/P,MAAM,IAERkB,MAAO,CACL+B,YAAY,MAEdrB,OAAQ,CACNC,IAAK,KACL2B,MAAO,KACPxB,YAAa,UAEfyB,eAAe,KACftB,WAAW,KACX0B,OAAO,KACPhB,QAAQ,CACNC,MAAM,GACNC,gBAAgB,IAElBmC,OAAO,WA4JT,GAzJa,WAEX,OAA4B4H,EAAAA,EAAAA,YAAWC,IACjClM,GADN,EAAQb,MAAR,EAAegN,UACClM,EAAAA,EAAAA,OAChB,GAAuDkP,EAAAA,EAAAA,GAAW,IAAlE,eAEMtD,GAFN,gBACgBuD,EAAAA,EAAAA,MACSjQ,OACnBkQ,EAAW,CACfC,WnBjE0B/L,kBmBkE1BgM,QnBjEuBhM,SmBkEvB2L,OnB/DsB3L,amBgEtBiM,YnBlEyBjM,uBmBmEzBkM,gBnBlEkBlM,4CmBsEpB,GAA8BkC,EAAAA,EAAAA,UAAS,aAAvC,eAAOiK,EAAP,KAAgBC,EAAhB,KACA,GAA2ClK,EAAAA,EAAAA,UAAS,MAApD,eAAOmK,EAAP,KAAuBC,EAAvB,KACA,GAAuBpK,EAAAA,EAAAA,UAASwJ,IAAhC,eAAO5C,EAAP,KAAYyD,EAAZ,KACA,GAAuCrK,EAAAA,EAAAA,UAAS,MAAhD,eAAOsK,EAAP,KAAqBC,EAArB,KACA,GAAuBvK,EAAAA,EAAAA,YAAvB,eAAYwK,GAAZ,WACA,GAAsCxK,EAAAA,EAAAA,UAAS,UAA/C,eAAQwE,EAAR,KAAoBC,EAApB,KAEMgG,EAAU,mCAAC,WAAM/C,GAAN,gFACf8C,EAAQ9C,GACFgD,EAAG,IAAIC,KAAJ,CAAkBf,GAFZ,kBAICc,EAAGE,WAAWlD,GAJf,OAITrF,EAJS,OAKb0E,EAAW,eAAe1E,EAAIjH,UALjB,gDAQbqC,OAAOoN,MAAM,+CACb9D,EAAW,eAAe,WATb,yDAAD,sDAYVA,EAAa,SAACzC,EAAehH,GACpB,SAAVgH,EAIH+F,GAAQ,SAACS,GACP,MAA4BxG,EAAMwC,MAAM,KAAxC,eAAOiE,EAAP,KAAgBC,EAAhB,KACA,OACE,SACKF,GADL,GADc,mBAAZC,GAA4C,WAAZA,GAClC,UAEGA,EAAUzN,GAGC,eAAZyN,GACF,UAEGA,EAAUzN,EAAMxB,KAAI,SAACD,GAAD,OAAwBA,EAAW2M,MAAnC,MAGzB,UAEGuC,EAFH,SAGOD,EAASC,IAHhB,cAIKC,EAAW1N,KAGjB,IAxBCmN,EAAWnN,EAyBd,EA2BK2H,EAAQ,mCAAC,WAAMmE,GAAN,0EACbA,EAAMjE,iBACNV,EAAc,kBACTN,GAASyC,GAHD,gCAIO2C,GAAQ,CAAC3C,KAAAA,EAAKR,QAAAA,IAJrB,OAKI,MADT/D,EAJK,QAKJzD,QACL6F,EAAc,UACdhH,OAAOrC,SAASsC,QAAQ2E,EAAIC,KAAKkD,MAEjC+E,EAAgBlI,EAAIC,KAAK2I,SAThB,uBAYXV,EAAgB,oCAZL,QAcb9F,EAAc,UACdW,YAAW,WACTmF,EAAgB,GACjB,GAAE,KAjBU,4CAAD,sDAmBd,GAAInE,EAIJ,OACE,gBAAC,EAAD,KACG+D,GAAkB,gBAAC,EAAD,CAAYnO,IAAKmO,EAAenP,IAAIC,MAAOZ,KAAM8P,EAAgBpP,SAAU,KAAMkC,eA3CjF,WACrBmN,EAAmB,MACnBF,EAAW,YACZ,EAwCuIlN,QAAQ,IAC5I,wBAAM9C,UAAW+P,EAAShF,SAAUA,GAClC,uBAAK/K,UAAU,gBACb,uBAAKA,UAAU,YACb,uBAAKA,UAAU,UACb,uBAAKA,UAAU,aAAY,iBAG/B,uBAAKA,UAAU,YACb,gBAAC,GAAD,CAAiB6M,WAAYA,IAC7B,gBAAC,GAAD,CAAuBA,WAAYA,KAErC,uBAAK7M,UAAU,YACb,gBAAC,GAAD,CAAwB6M,WAAYA,IACpC,gBAAC,GAAD,CAAUA,WAAYA,KAExB,uBAAK7M,UAAU,YACb,gBAAC,GAAD,CAAuB6M,WAAYA,IACnC,gBAAC,GAAD,CAAeA,WAAYA,KAE7B,uBAAK7M,UAAU,YACb,gBAAC,GAAD,CAAe6M,WAAYA,IAC3B,gBAAC,GAAD,CAAeA,WAAYA,MAG/B,uBAAK7M,UAAU,YACb,uBAAKA,UAAU,YACb,qBAAGA,UAAU,gBAAgBoQ,IAE/B,uBAAKpQ,UAAU,YACb,0BAAQsB,KAAK,SAASV,QApEN,SAACoK,GAEzB,IAAIgG,EADJhG,EAAEC,kBAEE+F,EAAQ/G,GAASyC,KACnBsD,EAAW,aAbK,SAACgB,GACnBd,EAAmBc,EACpB,CAYGC,CAAYD,KAEZX,EAAgB,oCAChBnF,YAAW,WACTmF,EAAgB,GACjB,GAAE,KAEN,EAwD2DrQ,UAAU,YAAY,WACxE,0BAAQsB,KAAK,SAAStB,UAAU,YAAasK,OApCrDjK,EAAQ0B,KAAK,YA0ChB,EChNK8B,GAAWC,IAAAA,OAAa,CAC5BC,iBAAiB,IAUNmN,GAAM,mCAAG,WAAQ3R,GAAR,gFACZyK,EAASzK,EAATyK,KADY,kBAGKnG,GAASe,KAAT,UAAiBjB,EAAjB,mBAAoDqG,GAHzD,cAGZ9F,EAHY,yBAIXA,GAJW,yDAMX,KAAMA,UANK,yDAAH,sDAgBNiN,GAAK,mCAAG,WAAQ5R,GAAR,gFACXyK,EAASzK,EAATyK,KADW,kBAGMnG,GAASe,KAAT,UAAiBjB,EAAjB,kBAAmDqG,GAHzD,cAGX9F,EAHW,yBAIVA,GAJU,yDAMV,KAAMA,UANI,yDAAH,sDASLkN,GAAM,mCAAG,6GAEKvN,GAASe,KAAT,UAAiBjB,EAAjB,oBAFL,cAEZO,EAFY,yBAGXA,GAHW,yDAKX,KAAMA,UALK,yDAAH,qDC4CnB,OA5EA,WAEE,OAA4BoI,EAAAA,EAAAA,YAAWC,IAA/B/M,EAAR,EAAQA,MACR,GADA,EAAegN,UACa1G,EAAAA,EAAAA,UAAS,KAArC,eAAOuL,EAAP,KAAiBC,EAAjB,KACA,GAA0BxL,EAAAA,EAAAA,UAAS,IAAnC,eAAOxD,EAAP,KAAciP,EAAd,KACA,GAAgCzL,EAAAA,EAAAA,UAAS,IAAzC,eAAO0L,EAAP,KAAiBC,EAAjB,KACA,GAA0B3L,EAAAA,EAAAA,UAAS,IAAnC,eAAOrG,EAAP,KAAciS,EAAd,KACA,GAAgC5L,EAAAA,EAAAA,WAAS,GAAzC,eAAQ6L,EAAR,KAAiBC,EAAjB,KAEMC,GAAUvR,EAAAA,EAAAA,MAEVwR,EAAgB,SAACpN,GACrBkN,EAAWlN,EACZ,EAEKqN,EAAY,mCAAG,WAAO7C,GAAP,gFACnBA,EAAMjE,eAAeiE,GACrB4C,GAAc,GACR9H,EAAK,CACTqH,SAAUA,EACV/O,MAAOA,EACPkP,SAAUA,GANO,SAQDN,GAAO,CAAElH,KAAAA,IARR,OASD,OADZ7B,EARa,QASZzD,QACLnB,OAAOoN,MAAM,qBACbkB,EAAQ9P,KAAK,aAEb2P,EAASvJ,EAAIC,KAAK2I,SAEpBe,GAAc,GAfK,2CAAH,sDAiBlB,GAAGtS,EAAMiN,KACPoF,EAAQ9P,KAAK,gBADf,CAIA,IAAGvC,EAAM4C,QAIT,OACE,uBAAKpC,UAAU,kBACb,wBAAM+K,SAAUgH,EAAcC,OAAO,QACnC,0BAAI,WACJ,6BAAO,YACP,yBACE1Q,KAAK,OACLuK,YAAY,WACZzI,MAAOiO,EACPzF,SAAU,SAACZ,GAAD,OAAOsG,EAAQtG,EAAEK,OAAOjI,MAAxB,IAEZ,6BAAO,SACP,yBACE9B,KAAK,QACLuK,YAAY,QACZzI,MAAOd,EACPqJ,UAAQ,EACRC,SAAU,SAACZ,GAAD,OAAOuG,EAASvG,EAAEK,OAAOjI,MAAzB,IAEZ,6BAAO,YACP,yBACE9B,KAAK,WACLuK,YAAY,WACZzI,MAAOoO,EACP5F,SAAU,SAACZ,GAAD,OAAOyG,EAAYzG,EAAEK,OAAOjI,MAA5B,IAEX3D,GAAS,uBAAKO,UAAU,SAASP,GAClC,uBAAKO,UAAU,OACb,0BAAQsB,KAAK,SAAStB,UAAW2R,EAAQ,aAAa,IAAKA,EAAQ,aAAa,WAGlF,yBAAG,2BAAyB,IAAI,gBAAC,KAAD,CAAM/O,GAAG,SAAS5C,UAAU,QAAO,YAlCvE6R,EAAQ9P,KAAK,aAFd,CAwCF,ECGD,OA7EA,WACE,OAA4BuK,EAAAA,EAAAA,YAAWC,IAA/B/M,EAAR,EAAQA,MAAOgN,EAAf,EAAeA,SACf,GAAgC1G,EAAAA,EAAAA,WAAS,GAAzC,eAAQ6L,EAAR,KAAiBC,EAAjB,KACA,GAA0B9L,EAAAA,EAAAA,UAAS,IAAnC,eAAOxD,EAAP,KAAciP,EAAd,KACA,GAAgCzL,EAAAA,EAAAA,UAAS,IAAzC,eAAO0L,EAAP,KAAiBC,EAAjB,KACA,GAA0B3L,EAAAA,EAAAA,UAAS,IAAnC,eAAOrG,EAAP,KAAciS,EAAd,KACA,GAAuDlC,EAAAA,EAAAA,GAAW,IAAlE,eAAoByC,GAApB,WAEMJ,GAFN,MAEgBvR,EAAAA,EAAAA,OACVwR,EAAgB,SAACpN,GACrBkN,EAAWlN,EACZ,EAEKqN,EAAY,mCAAG,WAAO7C,GAAP,gFACnBA,EAAMjE,iBACN6G,GAAc,GACR9H,EAAK,CACT1H,MAAMA,EACNkP,SAASA,GALQ,SAODL,GAAM,CAACnH,KAAAA,IAPN,OASH,OAFV7B,EAPa,QASZzD,QACFyD,EAAIC,KAAKhG,QACVoK,EAAS,CAAElL,KAAM,QAAS4Q,SAAS,IAEnC1F,EAAS,CAAElL,KAAM,OAAQ4Q,SAAS,IAEjC/J,EAAIC,KAAKhG,SACV6P,EAAc,WAAU,GAE1BA,EAAc,UAAU9J,EAAIC,KAAK+J,OACjCN,EAAQ9P,KAAK,aAEb2P,EAASvJ,EAAIC,KAAK2I,SAEpBe,GAAc,GAvBK,2CAAH,sDAyBlB,GAAGtS,EAAMiN,KACPoF,EAAQ9P,KAAK,gBADf,CAIA,IAAGvC,EAAM4C,QAIT,OACE,uBAAKpC,UAAU,kBACb,wBAAM+K,SAAUgH,EAAcC,OAAO,QACnC,0BAAI,SACJ,6BAAO,SACP,yBACE1Q,KAAK,QACLuK,YAAY,QACZzI,MAAOd,EACPqJ,UAAQ,EACRC,SAAU,SAACZ,GAAD,OAAOuG,EAASvG,EAAEK,OAAOjI,MAAzB,IAEZ,6BAAO,YACP,yBACE9B,KAAK,WACLuK,YAAY,WACZzI,MAAOoO,EACP7F,UAAQ,EACRC,SAAU,SAACZ,GAAD,OAAOyG,EAAYzG,EAAEK,OAAOjI,MAA5B,IAGX3D,GAAS,uBAAKO,UAAU,SAASP,GAClC,uBAAKO,UAAU,OACb,0BAAQsB,KAAK,SAAStB,UAAW2R,EAAQ,aAAa,IAAKA,EAAQ,aAAa,UAGlF,yBAAG,wBAAsB,IAAI,gBAAC,KAAD,CAAM/O,GAAG,UAAU5C,UAAU,QAAO,cA7BrE6R,EAAQ9P,KAAK,aAFd,CAmCF,ECtDD,OAtBA,WACE,IAAQyK,GAAaF,EAAAA,EAAAA,YAAWC,IAAxBC,SACR,GAAuDgD,EAAAA,EAAAA,GAAW,IAAlE,eAAmC4C,GAAnC,gBACM/R,GAAUC,EAAAA,EAAAA,MAEV+R,EAAY,mCAAG,8FACbjB,KADa,OAEnB5E,EAAS,CAAElL,KAAM,OAAQ4Q,SAAS,IAClC1F,EAAS,CAAElL,KAAM,QAAS4Q,SAAS,IACnCE,EAAiB,WACjBA,EAAiB,WACjB/R,EAAQ0B,KAAK,UANM,2CAAH,qDASlB,OACE,uBAAK/B,UAAU,mBACb,yBAAG,qCACH,0BAAQY,QAASyR,EAAcrS,UAAU,gBAAe,UAG7D,ECJD,GAhBgB,WAEd,IAAQR,GAAU8M,EAAAA,EAAAA,YAAWC,IAArB/M,MACFa,GAAUC,EAAAA,EAAAA,MAChB,GAAId,EAAMiN,KAIV,OACE,gBAAC,EAAD,KACE,uBAAKzM,UAAU,eACb,gBAAC,GAAD,QANJK,EAAQ0B,KAAK,SAUhB,EC0BD,GAvCoB,SAACxC,GAEnB,IAAQ+S,EAAY/S,EAAZ+S,QAER,EAAwBnM,EAAAA,SAAsB,IAA9C,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBP,EAAAA,EAAAA,UAAS,QAA/B,eAAOG,EAAP,KACA,GADA,KACmCE,EAAAA,UAAe,IAAlD,eAAOoM,EAAP,KAAmBC,EAAnB,KACA,EAAqBrM,EAAAA,SAAe,GAApC,eAAOlC,EAAP,KAAYwC,EAAZ,KACMgM,EAAgB,mCAAG,WAAOxO,GAAP,uFACLE,EAAiBF,GADZ,UAEF,KADfkE,EADiB,QAEhBC,KAAK5C,OAFW,uBAGrBgN,GAAe,GAHM,0BAMpBrK,IACDmK,EAAQnK,EAAIC,KAAK,IACjB/B,EAAQ,GAAD,eAAKD,IAAL,OAAa+B,EAAIC,SARH,2CAAH,sDActB,OAHAjC,EAAAA,WAAgB,WACdsM,EAAiBxO,EAClB,GAAE,CAACA,IAEF,uBAAKjE,UAAkB,SAAPiG,GAAqB1C,OAAOmE,OAAOC,MAAM,IAA3B,OAAsC,QAClE,gBAAC,IAAD,CACEkC,KAAM,kBAAIpD,EAAQL,EAAKZ,OAAjB,EACNoE,QAAS2I,EACT5I,WAAYvD,EAAKZ,OACjBsE,OAAQ,0BAAI,iBAEV1D,EAAKxE,KAAI,SAACwH,GAAD,OACT,gBAAC,EAAD,CAAStH,IAAKsH,EAAQpH,IAAK7B,KAAMiJ,EAASvI,SAAU,kBAAIyR,EAAQlJ,EAAZ,GAD3C,MAIXmJ,GAAe,sBAAIvS,UAAU,iBAAgB,8BAGpD,ECID,GAxCqB,SAACT,GAEpB,IAAQ+S,EAAY/S,EAAZ+S,QAER,EAAwBnM,EAAAA,SAAsB,IAA9C,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBP,EAAAA,EAAAA,UAAS,QAA/B,eAAOG,EAAP,KACA,GADA,KACmCE,EAAAA,UAAe,IAAlD,eAAOoM,EAAP,KAAmBC,EAAnB,KACA,EAAqBrM,EAAAA,SAAe,GAApC,eAAOlC,EAAP,KAAYwC,EAAZ,KAEMiM,EAAiB,mCAAG,WAAOzO,GAAP,uFACNK,EAAgBL,GADV,UAEH,KADfkE,EADkB,QAEjBC,KAAK5C,OAFY,uBAGtBgN,GAAe,GAHO,0BAMrBrK,IACDmK,EAAQnK,EAAIC,KAAK,IACjB/B,EAAQ,GAAD,eAAKD,IAAL,OAAa+B,EAAIC,SARF,2CAAH,sDAcvB,OAHAjC,EAAAA,WAAgB,WACduM,EAAkBzO,EACnB,GAAE,CAACA,IAEF,uBAAKjE,UAAkB,SAAPiG,GAAqB1C,OAAOmE,OAAOC,MAAM,IAA3B,OAAsC,QAClE,gBAAC,IAAD,CACEkC,KAAM,kBAAIpD,EAAQL,EAAKZ,OAAjB,EACNoE,QAAS2I,EACT5I,WAAYvD,EAAKZ,OACjBsE,OAAQ,0BAAI,iBAEV1D,EAAKxE,KAAI,SAACwH,GAAD,OACT,gBAAC,EAAD,CAAStH,IAAKsH,EAAQpH,IAAK7B,KAAMiJ,EAASvI,SAAU,kBAAIyR,EAAQlJ,EAAZ,GAD3C,MAIXmJ,GAAe,sBAAIvS,UAAU,iBAAgB,8BAGpD,ECZD,GA9BiB,WAEf,OAAiC8F,EAAAA,EAAAA,UAAS,IAA1C,eAAQqG,EAAR,KAAkBC,EAAlB,KACA,GAAgCtG,EAAAA,EAAAA,WAAS,GAAzC,eAAQ6M,EAAR,KAAiBC,EAAjB,KACMC,EAAgB,SAACC,GACrBF,EAAWE,EACZ,EACKzG,EAAa,mCAAG,oGACFL,KADE,OAEJ,OADV7D,EADc,QAEbzD,QACL0H,EAAYjE,EAAIC,MAHE,2CAAH,qDAUnB,OAJAjC,EAAAA,WAAgB,WACdkG,GACD,GAAC,IAGA,uBAAKrM,UAAU,YACb,uBAAKA,UAAU,WACXmM,GACEA,EAASvK,KAAI,SAAEsK,GAAF,OACX,gBAAC,GAAD,CAAiBpK,IAAKoK,EAAQ5K,KAAM4K,QAAUA,EAAUyG,QAASA,EAASE,cAAeA,GAD9E,KAOxB,ECqFD,GA3Gc,WAEZ,OAA4BvG,EAAAA,EAAAA,YAAWC,IAA/B/M,EAAR,EAAQA,MACR,GADA,EAAegN,UACoCgD,EAAAA,EAAAA,MAAnD,eAAQuD,EAAR,KAAkBC,EAAlB,KACM3S,GADN,MACgBC,EAAAA,EAAAA,OAChB,GAAuBwF,EAAAA,EAAAA,UAAS,IAAhC,eAAQmN,EAAR,KAAaC,EAAb,KACA,GAAkCpN,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAQqN,EAAR,UACAhN,EAAAA,WAAgB,WACX4M,EAAUrO,OACXwO,EAAOH,EAAUrO,SAGnBwO,EAAO,WACPF,EAAa,SAAS,WACvB,GAAE,IACH,IAAMnS,EAAS,SAACC,GACdkF,EAAclF,EACf,EACKsS,EAAa,mCAAG,WAAQtS,GAAR,8EACdqC,EAAKrC,EAAIkB,IADK,SAEF2C,EAAiB,CAACxB,GAAAA,IAFhB,yCAIlBI,OAAOrC,SAASmS,SAJE,8DAAH,sDASbC,EAAY,mCAAG,WAAOxS,GAAP,8EACbqC,EAAKrC,EAAIkB,IADI,SAEDwC,EAAgB,CAACrB,GAAAA,IAFhB,yCAIjBI,OAAOrC,SAASmS,SAJC,8DAAH,sDAWlB,OAHI7T,EAAM4C,SACR/B,EAAQ0B,KAAK,UAGb,uBAAK/B,UAAU,kBACb,uBAAKA,UAAU,aACb,0BAAI,iBACJ,0BACE,sBACEA,UAAiB,YAANiT,GAAmB,SAC9BrS,QAAS,kBAAIsS,GAAO,WAGlB,OAFArS,EAAS,MACTmS,EAAa,SAAS,WACf,SACR,GAJQ,GAKV,WACD,sBACEhT,UAAiB,aAANiT,GAAoB,SAC/BrS,QAAS,kBAAIsS,GAAO,WAGlB,OAFArS,EAAS,MACTmS,EAAa,SAAS,YACf,UACR,GAJQ,GAKV,YACD,sBACEhT,UAAiB,aAANiT,GAAoB,SAC/BrS,QAAS,kBAAIsS,GAAO,WAGlB,OAFArS,EAAS,MACTmS,EAAa,SAAS,YACf,UACR,GAJQ,GAKV,cAIL,uBAAKhT,UAAU,QACN,YAANiT,GAAmB,gBAAC,GAAD,CAAaX,QAASzR,IACnC,aAANoS,GAAoB,gBAAC,GAAD,CAAcX,QAASzR,IACrC,aAANoS,GAAoB,gBAAC,GAAD,MACpBlN,GACD,uBAAK/F,UAAU,QACb,uBAAKA,UAAU,UACb,gBAAC,EAAD,CAAY8B,IAAKiE,EAAW/D,IAAK7B,KAAM4F,EAAYlF,SAAUA,EAAUkC,eAAgB,KAAMD,QAAQ,EAAOV,SAAS,GACnH,uBAAKpC,UAAU,YACb,sBAAIA,UAAU,UAAS,iBAAemT,GAAoBpN,EAAWrB,QACrE,uBAAK1E,UAAU,UACb,uBAAKA,UAAU,oBACS,YAArB+F,EAAWrB,QACV,0BACE1E,UAAU,aACVY,QAAS,kBAAI0S,EAAavN,EAAjB,GACR,UAGL,0BACE/F,UAAU,aACVY,QAAS,kBAAIwS,EAAcrN,EAAlB,GACR,kBAYtB,ECxDD,GAtDW,WACT,MAAqBI,EAAAA,SAAe,IAApC,eAAOC,EAAP,KAAYC,EAAZ,KACA,EAAkCF,EAAAA,SAAe,MAAjD,eAAOJ,EAAP,KAAkBC,EAAlB,KACA,EAAsBG,EAAAA,SAAe,QAArC,eAAOF,EAAP,KAAYC,EAAZ,KACA,EAAqBC,EAAAA,SAAe,GAApC,eAAOlC,EAAP,KAAYwC,EAAZ,KACA,EAAmCN,EAAAA,UAAe,GAAlD,eAAOoM,EAAP,KAAmBC,EAAnB,KACM3R,EAAS,SAACC,EAAS8H,GACvB1C,EAAQ0C,GACR5C,EAAclF,EACf,EAiBD,OAhBAqF,EAAAA,WAAgB,WACd,IAAM+B,EAAS,mCAAC,WAAMjE,GAAN,uFACII,EAAaJ,GADjB,UAEM,IADdkE,EADQ,QAEPC,KAAK5C,OAFE,uBAGZgN,GAAe,GAHH,0BAMXrK,GACD9B,EAAQ,GAAD,eAAKD,IAAL,OAAa+B,EAAIC,QAPZ,2CAAD,sDAWfF,EAAUjE,EAEX,GAAC,IAGA,2BACE,uBAAKjE,UAAU,cACb,uBAAKA,UAAU,OAAM,8BAGrB,uBAAKA,UAAU,QACb,uBAAKA,UAAkB,SAAPiG,GAAqB1C,OAAOmE,OAAOC,MAAM,IAA3B,OAAsC,QAClE,gBAAC,IAAD,CACEiC,QAAS2I,EACT1I,KAAM,kBAAIpD,EAAQL,EAAKZ,OAAjB,EACNmE,WAAYvD,EAAKZ,OACjBsE,OAAQ,0BAAI,kBAEV1D,EAAKxE,KAAI,SAACwH,GAAD,OACT,gBAAC,EAAD,CAAStH,IAAKsH,EAAQpH,IAAK7B,KAAMiJ,EAASvI,SAAUA,GAD3C,MAKf,uBAAKb,UAAWiG,GACbF,GAAc,gBAAC,EAAD,CAAYjE,IAAKiE,EAAW/D,IAAK7B,KAAM4F,EAAYlF,SAAUA,EAAUkC,eAAgB,KAAMD,QAAQ,QAIxHyP,GAAe,0BAAI,oBAG1B,EChDYgB,GAAW,SAAChU,GAEvB,IAO+BiU,EAPvBC,EAA8DlU,EAA9DkU,OAAQxS,EAAsD1B,EAAtD0B,KAAMyS,EAAgDnU,EAAhDmU,SAAUC,EAAsCpU,EAAtCoU,YAAaC,EAAyBrU,EAAzBqU,qBAG7C,GAAkC9N,EAAAA,EAAAA,UAAS,YAA3C,eAAQ+N,EAAR,KAAkBC,EAAlB,KACA,GAA6ChO,EAAAA,EAAAA,UAAS4N,GAAtD,eAAQK,EAAR,KAAwBC,EAAxB,KAMMC,GAHyBT,EAGYvS,GAF9BiT,OAAO,GAAGC,cAAcX,EAAIY,MAAM,GAYzCC,EAAiB,SAACrJ,GACtB,MAAwBA,EAAEK,OAAlBlI,EAAR,EAAQA,GAAIgM,EAAZ,EAAYA,QAENmF,EAAoBP,EAAevL,QAAO,SAAC+L,GAAD,OAAkBA,GAAepR,CAAjC,IAE7CgM,GAASmF,EAAkBvS,KAAKoB,GACnC6Q,GAAkB,SAACQ,GAGjB,OAFAb,EAAY1S,EAAKqT,GACjBV,EAAqB3S,EAAKqT,GACnBA,CACR,GACF,EAED,OACE,uBAAKtU,UAAU,gBACb,uBAAKA,UAAU,QACb,gBAAC,IAAD,CAAIA,UAAW6T,EAAUpS,KAAMgT,EAAAA,GAAQ7T,QAxBrB,WACtBkT,GAAY,SAACY,GACX,MAAc,eAAXb,EACM,WAEF,YACR,GACF,IAkBK,yBAAO7T,UAAU,OAAM,IAAEiU,EAAa,MAExC,uBAAKjU,UAAsB,eAAX6T,EAAwB,cAAc,eAElDJ,EAAO7R,KAAI,SAACwB,GAAD,OACT,uBAAKpD,UAAU,OAAO8B,IAAKsB,GACzB,yBAAO9B,KAAK,WAAWL,KAAMmC,EAAOD,GAAIC,EAAOwI,SAAUyI,EAAgBlF,QAASuE,GAAYA,EAASiB,MAAK,SAACvL,GAAD,OAAYA,IAAUhG,CAAtB,MAC5G,yBAAO4J,QAAS5J,GAAQA,GAHjB,KAUpB,EC7DYwR,IAA+CC,E,SAAAA,KAC1D,SAACrV,GAAD,OAAsBA,EAAMuF,MAA5B,IACA,SAACvF,GAAD,OAASA,CAAT,I,YCYWsV,GAA8B,CACzCpQ,OAFsBqQ,aAAaC,QAAQ,UAAU/P,KAAKgQ,MAAMF,aAAaC,QAAQ,WARtD,CAC/BhO,SAAU,GACV9F,SAAU,GACVE,OAAQ,IACRO,WAAY,GACZkB,QAAS,GACTqS,OAAQ,KAMJC,IAAcC,EAAAA,GAAAA,IAAY,CAC9BnU,KAAM,SACNoU,aAAcP,GACdQ,SAAU,CACRC,aAAc,SAAC/V,EAAOkM,GACpBlM,EAAMkF,OAASgH,EAAOwG,QAAQxN,OAC9BqQ,aAAaS,QAAQ,SAASvQ,KAAKC,UAAUwG,EAAOwG,QAAQxN,QAC7D,KAIG+Q,GAAYN,GAAZM,QAEOF,GAAiBJ,GAAYO,QAA7BH,aAEf,M,ykBCtBA,IAAOI,GAA0B,CAC/B3O,SAAS,GACT9F,SAAS,GACTE,OAAO,IACPO,WAAW,GACXkB,QAAQ,GACRqS,OAAO,IAsKT,GAnKmB,WAEjB,IAAM1I,GAAWoJ,EAAAA,EAAAA,MAEX1U,IADUZ,EAAAA,EAAAA,OACCmP,EAAAA,EAAAA,OACXoG,GAAcC,EAAAA,EAAAA,KAAY,SAACtW,GAC/B,OAAOoV,GAAapV,EACrB,IACD,GAA+BsG,EAAAA,EAAAA,WAAS,WAEtC,GAAG5E,EAAS1B,MAAM,CAChB,MAAoC0B,EAAS1B,MAArCwH,EAAR,EAAQA,SAAUiC,EAAlB,EAAkBA,cAClB,GAAGjC,GAAYiC,EAGb,OAFA0M,GAAc3O,SAAUA,EACxB2O,GAAczU,SAAW+H,EAClB0M,EAEV,CACD,OAAOE,EAAanR,MACrB,IAXD,eAAQK,EAAR,KAAiBgR,EAAjB,KAYA,GAAmCjQ,EAAAA,EAAAA,WAAS,kBAAI+P,EAAanR,OAAO/C,UAAxB,IAA5C,eAAOA,EAAP,KAAmBqU,EAAnB,KACA,GAA4BlQ,EAAAA,EAAAA,WAAS,kBAAI+P,EAAanR,OAAOwQ,MAAxB,IAArC,eAAOA,EAAP,KAAee,EAAf,KACA,GAA8BnQ,EAAAA,EAAAA,WAAS,kBAAI+P,EAAanR,OAAO7B,OAAxB,IAAvC,eAAOA,EAAP,KAAgBqT,EAAhB,KAEA,EAAqB/P,EAAAA,SAAe,IAApC,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAAuCP,EAAAA,EAAAA,WAAS,GAAhD,eAAOY,EAAP,KAAoBC,EAApB,KACA,GAA0Bb,EAAAA,EAAAA,UAAS,GAAnC,eAAQ7B,EAAR,KAAcwC,EAAd,KAIMyB,EAAS,mCAAC,WAAMjE,GAAN,yFACID,EAAUC,GADd,UAEM,IADdkE,EADQ,QAEPC,KAAK5C,OAFE,uBAGZmB,GAAgB,GAHJ,0BAMXwB,IACKE,EAAUF,EAAIC,KACpB/B,EAAQ,GAAD,eAAKD,IAAL,OAAaiC,MARR,2CAAD,sDAeflC,EAAAA,WAAgB,WACd+B,EAAUjE,EACX,GAAC,CAACA,IACH,IAAM0P,EAAc,SAACvJ,EAAahH,GACrB,eAARgH,EAIQ,WAARA,EAIH8L,EAAW9S,GAHT6S,EAAU7S,GAJV4S,EAAa5S,EAQhB,EACKwQ,EAAuB,SAAExJ,EAAahH,GACvB,iBAATA,IACRA,EAAOA,EAAMkL,QAGfyH,GAAU,SAACI,GACT,IAAMC,EAAgB,SACjBrR,GADc,cAEhBqF,EAAOhH,IAGV,OADAoJ,EAAS+I,GAAa,CAAC7Q,OAAO0R,KAC9B,SACKD,GADL,cAEG/L,EAAQhH,GAEZ,GACF,EACK2H,EAAQ,mCAAG,WAAOC,GAAP,8EACfA,EAAEC,iBADa,SAEUnG,EAAcC,EAAOd,GAF/B,WAEToS,EAFS,SAI4B,IAAzBA,EAAWjO,KAAK5C,OAJnB,uBAKbmB,GAAgB,GAChBN,EAAQ,IANK,iCASfA,EAAQgQ,EAAWjO,MATJ,+DAAH,sDAgBd,OACE,uBAAKpI,UAAU,WACb,gBAAC,GAAD,MACA,uBAAKA,UAAU,aACb,0BAAI,2CAEN,uBAAKA,UAAU,UACb,uBAAKA,UAAU,gBACb,wBAAM+K,SAAUA,GACd,uBAAK/K,UAAU,gBACb,6BAAO,eACP,yBACEsB,KAAK,OACLuK,YAAY,wBACZD,SAAU,SAACZ,GAAD,OAAK4I,EAAqB,WAAW5I,EAAEK,OAAOjI,MAA9C,EACVA,MAAO2B,EAAOiC,YAGlB,uBAAKhH,UAAU,gBACb,6BAAO,cACP,yBACEsB,KAAK,OACLuK,YAAY,cACZD,SAAU,SAACZ,GAAD,OAAK4I,EAAqB,WAAW5I,EAAEK,OAAOjI,MAA9C,EACVA,MAAO2B,EAAO7D,YAGlB,uBAAKlB,UAAU,gBACb,6BAAO,oBACP,yBAAOsB,KAAK,QAAQsK,SAAU,SAACZ,GAC7B,IAAM3J,EAjFI,SAACA,GAEvB,OAAe,KADA,IAAIA,EAEpB,CA8EyBiV,CAAgBtL,EAAEK,OAAOjI,OACrCwQ,EAAqB,SAASvS,EAE/B,EAAE+B,MAAO,IAAI2B,EAAO3D,OAAO,MAC5B,yBAAOpB,UAAU,gCACf,4BAAM,MACN,4BAAM,MACN,4BAAM,OACN,4BAAM,OACN,4BAAM,SAGV,gBAACuT,GAAD,CAAUE,OA3GA,CAAC,gBAAiB,UAAW,cAAc,kBAAkB,cAAc,YAAY,mBAAmB,kBAAkB,iBAAiB,iBAAiB,gBAAgB,WAAW,aAAa,YAAY,cAAc,YA2G3MxS,KAAM,aAAc2S,qBAAsBA,EAAsBF,SAAU/R,EAAYgS,YAAaA,IAClI,gBAACJ,GAAD,CAAUE,OA3GJ,CAAC,WAAW,WAAW,aAAa,sBAAsB,aAAa,wBA2GlDxS,KAAM,SAAU2S,qBAAsBA,EAAsBF,SAAUwB,EAAQvB,YAAaA,IACtH,gBAACJ,GAAD,CAAUE,OA3GF,CAAC,gBAAgB,SAAS,OAAO,gBAAgB,eAAe,YAAY,cAAc,UAAU,qBA2G/ExS,KAAM,UAAW2S,qBAAsBA,EAAqBF,SAAU7Q,EAAS8Q,YAAaA,IACzH,uBAAK3T,UAAU,WACb,yBAAOsB,KAAK,SAAU8B,MAAM,QAAQxC,QAlD9B,WAChBmU,aAAawB,WAAW,UACxBR,EAAUJ,GACX,IAgDW,yBAAOrU,KAAK,SAAU8B,MAAM,cAIlC,uBAAKpD,UAAU,iBACb,gBAAC,IAAD,CACE2J,WAAYvD,EAAKZ,OACjBoE,QAASlD,EACTmD,KAAM,kBAAIpD,EAAQL,EAAKZ,OAAjB,EACNsE,OAAQ,0BAAI,eAGV1D,EAAKxE,KAAI,SAACwH,GAAD,OACP,gBAAC,EAAD,CAAStH,IAAKsH,EAAQpH,IAAK7B,KAAMiJ,EAASvI,SAAU,KAAOT,SAAS,GAD7D,MAKXsG,GAAgB,sBAAI1G,UAAU,iBAAgB,mBAKzD,EChLYwW,GAAc,WAEzB,IAAQpR,GAAUqR,EAAAA,EAAAA,MAAVrR,MACF/E,GAAUC,EAAAA,EAAAA,MAChB,GAA4BwF,EAAAA,EAAAA,UAAS,IAArC,eAAQrG,EAAR,KAAeiS,EAAf,KACA,GAAwB5L,EAAAA,EAAAA,UAAS,MAAjC,eAAQhF,EAAR,KAAa0F,EAAb,KACA,GAA+BV,EAAAA,EAAAA,WAAS,GAAxC,eAAQ6M,EAAR,KAAiBC,EAAjB,KAEM8D,EAAM,mCAAG,WAAOtR,GAAP,uFACKD,EAAWC,GADhB,UACP+C,EADO,8BAGXuJ,EAAS,wBAHE,6BAME,KAAZvJ,EAAIzD,OANM,uBAOXgN,EAASvJ,EAAIC,KAAK2I,SAPP,0BAUb6B,GAAW,GACXpM,EAAO2B,EAAIC,MAXE,4CAAH,sDAoBZ,OAHAjC,EAAAA,WAAgB,WACduQ,EAAOtR,EACR,GAAC,CAACA,IAED,uBAAKpF,UAAU,eACb,uBAAKA,UAAU,eACb,uBAAKA,UAAU,YAAYY,QAVlB,WACbP,EAAQ0B,KAAK,UAEd,GAOiD,gBAAC,IAAD,CAAIN,KAAMkV,EAAAA,MAAmB,SACzE,uBAAK3W,UAAU,cAEjB,uBAAKA,UAAU,OACXc,GAAO,gBAAC,EAAD,CAAYgB,IAAKhB,EAAIkB,IAAK7B,KAAMW,EAAKD,SAAU,KAAMkC,eAAgB,KAAMD,QAAQ,IAC5F,uBAAK9C,UAAU,YAAYP,GAC1BkT,GAAW,2BAAK,eAIxB,E,ykBCjDM,IAAM0C,GAAe,CAC1BjT,SAAS,EACTqK,MAAM,GAGKgJ,GAAU,SAACjW,EAAYkM,GAClC,OAAQA,EAAOpK,MACf,IAAK,OACH,gBACK9B,GADL,IAEEiN,KAAMf,EAAOwG,UAEjB,IAAK,QACH,gBACK1S,GADL,IAEE4C,QAASsJ,EAAOwG,UAEpB,QACE,OAAO1S,EAEV,ECbY+M,IAAcqK,EAAAA,EAAAA,eAAc,MAyCzC,GAxCiB,WACf,OAAuDpH,EAAAA,EAAAA,GAAW,IAAlE,eAAQqH,EAAR,eACGA,EAAWC,UACTD,EAAWzU,QACZiT,GAAajT,SAAQ,EAErBiT,GAAa5I,MAAK,GAGtB,OAA0BsK,EAAAA,EAAAA,YAAWtB,GAASJ,IAA9C,eAAO7V,EAAP,KAAcgN,EAAd,KACA,OACE,gBAAC,KAAD,KACE,2BACE,gBAACD,GAAYyK,SAAb,CAAsB5T,MAAO,CAAE5D,MAAAA,EAAOgN,SAAAA,IACpC,gBAAC,EAAD,KACE,gBAAC,GAAD,MACA,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAOyK,OAAK,EAACC,KAAK,KAAK,gBAAC,EAAD,OACvB,gBAAC,KAAD,CAAQA,KAAK,SAAS,gBAAC,EAAD,OACtB,gBAAC,KAAD,CAAQA,KAAK,aAAY,gBAAC,GAAD,OACzB,gBAAC,KAAD,CAAQA,KAAK,cAAa,gBAAC,GAAD,OAC1B,gBAAC,KAAD,CAAOA,KAAK,aAAa,gBAAC,GAAD,OACzB,gBAAC,KAAD,CAAOA,KAAK,UAAU,gBAAC,GAAD,OACtB,gBAAC,KAAD,CAAOA,KAAK,WAAW,gBAAC,GAAD,OACvB,gBAAC,KAAD,CAAOA,KAAK,WAAW,gBAAC,GAAD,OACvB,gBAAC,KAAD,CAAOA,KAAK,YAAY,gBAAC,GAAD,OACxB,gBAAC,KAAD,CAAOA,KAAK,cAAa,gBAAC,GAAD,OACzB,gBAAC,KAAD,CAAOA,KAAK,kBAAiB,gBAAC,GAAD,OAC7B,gBAAC,KAAD,CAAOA,KAAK,YAAY,gBAAC,GAAD,OACxB,gBAAC,KAAD,CAAOA,KAAK,WAAW,gBAAC,GAAD,OACvB,gBAAC,KAAD,CAAOA,KAAK,WAAW,gBAAC,GAAD,OACvB,gBAAC,KAAD,CAAOA,KAAK,eAAe,gBAACV,GAAD,WAOxC,ECqED,GA7Ge,WACb,OAA4BlK,EAAAA,EAAAA,YAAWC,IAA/B/M,EAAR,EAAQA,MACR,GADA,EAAegN,UACwB1G,EAAAA,EAAAA,UAAS,SAAhD,eAAOqR,EAAP,KAAoBC,EAApB,KACMC,EAAmB,WACvBD,GAAgB,SAACE,GACf,MAAsB,SAAfH,EAAsB,OAAO,MACrC,GACF,EACKI,EAAa,WACjB,OAAG/X,EAAMiN,KAEL,gCACE,0BAAK,gBAAC,KAAD,CAAS7J,GAAG,aAAY,eAC7B,0BAAK,gBAAC,KAAD,CAASA,GAAG,cAAa,eAC9B,sBAAI5C,UAAU,eACZ,sBAAIY,QAASyW,GAAoB,WACjC,0BACE,uBAAKrX,UAAW,cAAcmX,GAC5B,gBAAC,KAAD,CAASvU,GAAG,YAAW,WACvB,gBAAC,KAAD,CAASA,GAAG,kBAAiB,aAC7B,gBAAC,KAAD,CAASA,GAAG,WAAU,cAO/BpD,EAAM4C,QAEL,gCACE,0BAAK,gBAAC,KAAD,CAASQ,GAAG,aAAY,eAC7B,0BACE,0BAAI,gBAAC,KAAD,CAASA,GAAG,cAAa,cAC7B,0BAAI,gBAAC,KAAD,CAASA,GAAG,WAAU,aAO9B,gCACE,0BAAK,gBAAC,KAAD,CAASA,GAAG,cAAa,eAC9B,0BACE,0BAAI,gBAAC,KAAD,CAASA,GAAG,WAAU,WAC1B,0BAAI,gBAAC,KAAD,CAASA,GAAG,UAAS,WAKlC,EAED,GAA4BkD,EAAAA,EAAAA,UAAS,aAArC,eAAO0R,EAAP,KAAeC,EAAf,KAQA,OACE,uBAAKzX,UAAU,UACb,uBAAKA,UAAU,QACb,uBAAKA,UAAU,UACb,gBAAC,EAAD,KACE,uBAAKA,UAAU,MAAM2C,IAAK+U,IAC1B,0BACE,gBAAC,KAAD,CAAST,OAAK,EAACrU,GAAG,KAChB,wBAAM5C,UAAU,cAAa,SAC7B,wBAAMA,UAAU,gBAAe,cAKvC,uBAAKA,UAAU,aACb,2BACE,0BACE,0BAAK,gBAAC,KAAD,CAASiX,OAAK,EAACrU,GAAG,KAAK,SAC5B,gBAAC2U,EAAD,UAKR,uBAAKvX,UAAU,WACb,uBAAKA,UAAU,aACb,uBAAKA,UAAU,UACb,uBAAKA,UAAU,MAAM2C,IAAK+U,IAC1B,sBAAI1X,UAAU,UACZ,wBAAMA,UAAU,cAAa,SAC7B,wBAAMA,UAAU,gBAAe,WAEjC,0BAAQA,UAAU,UAAUY,QAtCxB,WAEV6W,EADW,YAAVD,EACU,YAEA,UAEd,GAiCW,6BACA,6BACA,+BAGJ,uBAAKxX,UAAW,WAAWwX,GACzB,sBAAI5W,QAAS,kBAAK6W,EAAW,YAAhB,GACX,0BACE,0BAAK,gBAAC,KAAD,CAASR,OAAK,EAACrU,GAAG,KAAK,SAC5B,gBAAC2U,EAAD,WAQf,EC/CD,GAtDmC,SAAChY,GAElC,IAAQ6I,EAA6B7I,EAA7B6I,KAAKS,EAAwBtJ,EAAxBsJ,YAAaE,EAAWxJ,EAAXwJ,OAC1B,EAAoC5C,EAAAA,SAAe,IAAnD,eAAOwR,EAAP,KAAmBC,EAAnB,KACA,EAAyCzR,EAAAA,SAAe,IAAxD,eAAqB0R,GAArB,WACA,EAAoC1R,EAAAA,SAAe,IAAnD,eACA,GADA,UAC4BA,EAAAA,UAAe,IAA3C,eAAO2R,EAAP,KAAeC,EAAf,KAyBA,OACE,gCACE,wBAAMhN,SAnBW,SAACmE,GACpBA,EAAMjE,iBAEN,IAAM+M,EAAe5P,EAAKI,QAAO,SAACyP,GAAD,OAC/BA,EAAMhX,KAAKyH,cAAcC,SAASgP,EAAWjP,cADd,IAGjCmP,EAAiBG,EAClB,GAaK,uBAAKhY,UAAU,eACb,yBAAOmD,GAAG,SAAS7B,KAAK,SAASuK,YAAY,kBAAkBD,SA5BlD,SAACsD,GACpB0I,GAAc,SAACM,GAEb,OADAnP,EAAOmG,EAAM7D,OAAOjI,OACb8L,EAAM7D,OAAOjI,KACrB,IACD2U,GAAU,EACX,EAsB8F3U,MAAOuU,KAE/FA,EAAWnS,OAAS,GAAKsS,GACxB,uBAAK9X,UAAU,oBACZ2X,EAAWnS,OAAS,GAAKsS,GAAU1P,EAAKI,QAAO,SAACC,GAAD,OAAUA,EAAKxH,KAAKyH,cAAcC,SAASgP,EAAWjP,cAAtD,IAC7C9G,KAAI,SAAC6G,GAAD,OACH,uBAAK3G,IAAK2G,EAAKtF,GAAInD,UAAU,OAC3B,0BAAQY,QAAS,kBApBZwC,EAoB4BqF,EAAKxH,KAnBpD2W,GAAc,SAACM,GAEb,OADAnP,EAAO3F,GACAA,CACR,IACD2U,GAAU,QACVlP,EAAYzF,GANM,IAACA,CAoBY,EAA4BA,MAAOqF,EAAKxH,KAAMkC,GAAG,WAC/DsF,EAAKxH,MAHP,MAalB,ECMD,GA7DiB,SAAC1B,GAEhB,IAAQwJ,EAAWxJ,EAAXwJ,OACR,EAAgC5C,EAAAA,SAAe,IAA/C,eAAOjF,EAAP,KAAiB6F,EAAjB,KACA,EAAgCZ,EAAAA,SAAe,IAA/C,eAAOgS,EAAP,KAAiBC,EAAjB,KACA,EAAwCjS,EAAAA,SAAe,IAAvD,eAAqBkS,GAArB,WACA,EAA4BlS,EAAAA,UAAe,GAA3C,eAAO2R,EAAP,KAAeC,EAAf,KASA5R,EAAAA,WAAgB,WACVjF,GACFoX,MAAM,+BACHC,MAAK,SAACrU,GAAD,OAAcA,EAASsU,MAAvB,IACLD,MAAK,SAACnQ,GAAD,OAAUgQ,EAAYhQ,EAAtB,GAEX,GAAE,CAAClH,IAgBJ,OACE,gCACE,wBAAM6J,SAhCW,SAACmE,GACpBA,EAAMjE,iBAEN,IAAM+M,EAAeG,EAAS3P,QAAO,SAACyP,GAAD,OACnCA,EAAMhX,KAAKyH,cAAcC,SAASzH,EAASwH,cADR,IAGrC2P,EAAgBL,EACjB,GA0BK,uBAAKhY,UAAU,YACb,yBAAOsB,KAAK,SAAS8B,MAAOlC,EAAU0K,SAnBzB,SAACsD,GACpBnI,GAAY,SAAC0R,GAEX,OADA1P,EAAOmG,EAAM7D,OAAOjI,OACb8L,EAAM7D,OAAOjI,KACrB,IACD2U,GAAU,EACX,EAaqElM,YAAY,oBAE3E3K,EAASsE,OAAS,GAAKsS,GACtB,uBAAK9X,UAAU,qBACZkB,EAASsE,OAAS,GAAKsS,GACdK,EAAS3P,QAAO,SAACC,GAAD,OAAUA,EAAKxH,KAAKyH,cAAcC,SAASzH,EAASwH,cAApD,IACb9G,KAAI,SAAC6G,GAAD,OACH,uBAAK3G,IAAK2G,EAAKtF,IACb,0BAAQvC,QAAS,kBApBtBwC,EAoBsCqF,EAAKxH,KAnB9D8F,GAAY,SAAC0R,GAEX,OADA1P,EAAO3F,GACAA,CACR,SACD2U,GAAU,GALQ,IAAC3U,CAoBsB,EAA4BA,MAAOqF,EAAKxH,KAAMkC,GAAG,WAC/DsF,EAAKxH,KAAK,IAAEwH,EAAKjJ,OAHnB,MAY5B,ECnBD,GAzCgB,SAAED,GAEhB,IAAQ2M,EAAY3M,EAAZ2M,QAER,OACE,gBAAC,EAAD,KACE,uBAAKlM,UAAU,OACb,uBAAKA,UAAU,WAAWkM,EAAQ5K,MAClC,sBAAItB,UAAU,SACZ,6BAAO,KACW,IAAjBkM,EAAQwM,OAAW,OAAOxM,EAAQwM,OACnC,6BAAO,IAAExM,EAAQyM,YAAY,UAG7BzM,EAAQ0M,OAAOhX,KAAI,SAACiX,GAAD,OACjB,qBAAG/W,IAAK+W,EAAMzO,OAAQyO,EAAMzO,MAC1B,4BAEIyO,EAAMzV,MACJ,wBAAMpD,UAAU,OACd,gBAAC,IAAD,CAAiByB,KAAMqX,EAAAA,OAEzB,wBAAM9Y,UAAU,MACd,gBAAC,IAAD,CAAiByB,KAAMsX,EAAAA,QAThB,IAerB,uBAAK/Y,UAAU,OACb,gBAAC,KAAD,CAAMA,UAAU,SAAS4C,GAAI,CAC3BoG,SAAS,YACTxJ,MAAO,CAAC0M,QAAAA,KACP,YAOZ,EC1CY8M,GAAe,SAACzZ,GAE3B,IAAS6D,EAAyB7D,EAAzB6D,MAAMyV,EAAmBtZ,EAAnBsZ,MAAOjN,EAAYrM,EAAZqM,SAEtB,GAAiC9F,EAAAA,EAAAA,UAAS1C,GAA1C,eAAQ+L,EAAR,KAAiB8J,EAAjB,KAKA,OACE,uBAAKjZ,UAAWmP,EAAQ,gBAAgB,kBAAoBvO,QALhD,WACZgL,EAASiN,GAAO1J,GAChB8J,GAAY9J,EACb,GAGG,yBAAOnP,UAAWmP,EAAQ,cAAc,WAI7C,E,ykBCXD,IAuFA,GAvFwB,SAAC5P,GAEvB,IAAQ2M,EAAoC3M,EAApC2M,QAASyG,EAA2BpT,EAA3BoT,QAASE,EAAkBtT,EAAlBsT,cAC1B,GAAwC/M,EAAAA,EAAAA,UAASoG,GAAjD,eAAOgN,EAAP,KAAqBC,EAArB,KACA,GAAuCrT,EAAAA,EAAAA,WAAS,GAAhD,eAAQsT,EAAR,KAAoBC,EAApB,KACA,GAA6BvT,EAAAA,EAAAA,UAAS,IAAtC,eAAQrG,EAAR,KAAgBiS,EAAhB,KACA,GAA+B5L,EAAAA,EAAAA,UAAS,QAAxC,eAAQpB,EAAR,KAAiB4U,EAAjB,KAEMC,EAAM,mCAAK,wFACZ5G,EADY,wDAEf0G,GAAc,GACdxG,GAAc,GAHC,SAIG5G,GAAciN,GAJjB,OAIT/Q,EAJS,OAMf+C,YAAW,WACTmO,GAAc,GACC,KAAZlR,EAAIzD,OACLgN,EAAS,UAGT4H,EAAU,WAEZzG,GAAc,EACf,GAAE,KACH3H,YAAW,WACToO,EAAU,QACV5H,EAAS,GACV,GAAE,KAnBY,2CAAL,iDAAE,CAAF,GAqBN8H,EAAoB,SAACpP,EAAahH,GACtC+V,GAAe,SAACvI,GACd,gBACKA,GADL,cAEGxG,EAAOhH,GAEX,GAEF,EACKqW,EAAc,SAACrP,EAAahH,GAChC,IAAMsW,EAAYR,EAAYN,OAAOpQ,QAAO,SAACqQ,GAC3C,OAAGA,EAAMzO,OAAOA,IAEhByO,EAAMzV,MAAMA,GAFkByV,CAI/B,IACDM,GAAe,SAACvI,GACd,gBACKA,GADL,cAEG,SAAU8I,GAEd,GACF,EAED,OACE,gBAAC,EAAD,KACE,uBAAK1Z,UAAYoZ,EAAY,iBAAiBzG,EAAQ,iBAAiB,OACrE,uBAAK3S,UAAU,WAAWkZ,EAAY5X,MACtC,uBAAKtB,UAAU,WACb,uBAAKA,UAAU,cACb,4BAAM,yBAAG,WACT,yBAAOA,UAAU,WAAWsB,KAAK,OAAO8B,MAAO8V,EAAYR,OAAS9M,SAAU,SAACZ,GAAD,OAAKwO,EAAkB,SAASxO,EAAEK,OAAOjI,MAAzC,KAEhF,uBAAKpD,UAAU,cACb,4BAAM,iBACN,yBAAOA,UAAU,WAAWsB,KAAK,OAAO8B,MAAO8V,EAAYP,YAAa/M,SAAU,SAACZ,GAAD,OAAKwO,EAAkB,cAAcxO,EAAEK,OAAOjI,MAA9C,MAIpF8V,EAAYN,OAAOhX,KAAI,SAACiX,GAAD,OACrB,uBAAK7Y,UAAU,OAAO8B,IAAK+W,EAAMzO,OAC/B,qBAAGtI,IAAK+W,EAAMzO,OAAQyO,EAAMzO,OAC5B,uBAAKpK,UAAU,YACb,gBAACgZ,GAAD,CAAclX,IAAKoX,EAAY5X,KAAKuX,EAAMzO,MAAOyO,MAAOA,EAAMzO,MAAOhH,MAAOyV,EAAMzV,MAAOwI,SAAU6N,KAJlF,IASzB,uBAAKzZ,UAAU,OACb,0BAAQA,UAAWP,EAAM,SAASiF,EAAQ9D,QAAS2Y,GAChD9Z,GAAYiF,KAMxB,ECjED,GAzBuB,WACrB,IAAMrE,GAAUC,EAAAA,EAAAA,MACVY,GAAWuO,EAAAA,EAAAA,MAEXsB,EADS,IAAI4I,gBAAgBzY,EAAS6D,QACrBX,IAAI,WAQ3B,OAHA8G,YAAW,WAHT7K,EAAQ0B,KAAK,WAKd,GAAC,KAEA,uBAAK/B,UAAU,iBACX+Q,GACA,wBAAM/Q,UAAU,gBACd,gBAAC,IAAD,CAAIyB,KAAMqX,EAAAA,OAGd,0BAAM/H,GACN,yBAAG,kDAGR,ECED,GAzBsB,WACpB,IAAM1Q,GAAUC,EAAAA,EAAAA,MACVY,GAAWuO,EAAAA,EAAAA,MAEXsB,EADS,IAAI4I,gBAAgBzY,EAAS6D,QACrBX,IAAI,WAQ3B,OAHA8G,YAAW,WAHT7K,EAAQ0B,KAAK,WAKd,GAAC,KAEA,uBAAK/B,UAAU,iBACX+Q,GACA,wBAAM/Q,UAAU,eACd,gBAAC,IAAD,CAAIyB,KAAMsX,EAAAA,OAGd,0BAAMhI,GACN,yBAAG,kDAGR,ECAD,GA3BmB,WACjB,OACE,uBAAK/Q,UAAU,cACb,uBAAKA,UAAU,QACb,wBAAMA,UAAU,QAAO,kBACvB,wBAAMA,UAAU,SAAQ,MAE1B,uBAAKA,UAAU,QACb,wBAAMA,UAAU,QAAO,eACvB,wBAAMA,UAAU,SAAQ,OAE1B,uBAAKA,UAAU,QACb,wBAAMA,UAAU,QAAO,mBACvB,wBAAMA,UAAU,SAAQ,QAE1B,uBAAKA,UAAU,QACb,wBAAMA,UAAU,QAAO,sBACvB,wBAAMA,UAAU,SAAQ,OAE1B,uBAAKA,UAAU,QACb,wBAAMA,UAAU,QAAO,cACvB,wBAAMA,UAAU,SAAQ,OAI/B,E,YCdY4Z,GAA4B,CACvCC,SAAU,oCAGNzF,IAAQgB,EAAAA,GAAAA,IAAY,CACxBnU,KAAM,MACNoU,aAAcuE,GACdtE,SAAU,CACRwE,gBAAiB,SAACta,EAAOkM,GACvBlM,EAAMqa,SAAWnO,EAAOwG,OACzB,KAIGuD,GAAYrB,GAAZqB,QAIR,IAFmCrB,GAAMsB,QAA1BoE,gBAEf,ICvBaC,GAAsC,CACjDrV,QAAQ,GAGJsV,IAAe5E,EAAAA,GAAAA,IAAY,CAC/BnU,KAAM,UACNoU,aAAc0E,GACdzE,SAAU,CACR2E,oBAAqB,SAACza,EAAOkM,GAC3BlM,EAAMkF,OAASgH,EAAOwG,OACvB,KAIGuD,GAAYuE,GAAZvE,QAIR,IAFuCuE,GAAatE,QAArCuE,oBAEf,ICtBA,IAAeC,EAAAA,GAAAA,IAAgB,CAC7BC,IAAAA,GAAI9K,QAAAA,GAAQtK,OAAAA,K,ykBCAd,IAyBA,GAR0B,WACxB,MAAO,CACLoV,IAlBF,MACKP,IAkBHvK,QAbF,MACK0K,IAaHhV,OARF,MACK+P,IASN,ECDD,GAf0B,WAA2C,IAA1CsF,EAA0C,uDAAP,CAAC,EACvDC,GAAQC,EAAAA,GAAAA,IAAe,CAC3B7E,QAAS8E,GACTH,eAAAA,IAGF,OAAOC,CACR,ECVYG,IAAa5D,EAAAA,EAAAA,eAA+B,MA2BzD,GAzB8D,SAAC,GAEhC,IAD7B/W,EAC6B,EAD7BA,SAEA,GAA0BiG,EAAAA,EAAAA,UAA0B,CAClD2U,UAAU,IADZ,eAAOrX,EAAP,KAIMsX,GAJN,KAIU,mCAAG,kHAAH,sDAWV,OAJAvU,EAAAA,WAAgB,WACduU,GACD,GAAE,IAGD,gBAACF,GAAWxD,SAAZ,CAAqB5T,MAAOA,GACzBA,EAAQvD,EAAW,KAGzB,GC1BD,iBAAC,oFACOua,EAAiBO,MAEVC,EAAAA,EAAAA,GAAWC,SAASC,eAAe,SAE3CC,OACH,gBAAC,aAAD,KACE,gBAAC,KAAD,CAAeV,MAAOW,GAAkBZ,IACtC,gBAAC,GAAD,KACE,gBAAC,EAAD,KACE,gBAAC,GAAD,WAVX,0CAAD,E,yCCRIa,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CACjDhY,GAAIgY,EACJK,QAAQ,EACRF,QAAS,CAAC,GAUX,OANAG,EAAoBN,GAAUrQ,KAAKyQ,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG3EK,EAAOC,QAAS,EAGTD,EAAOD,OACf,CAGAJ,EAAoBQ,EAAID,E5D5BpBpc,EAAW,GACf6b,EAAoBS,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAS1W,EAAI,EAAGA,EAAIlG,EAASmG,OAAQD,IAAK,CACrCsW,EAAWxc,EAASkG,GAAG,GACvBuW,EAAKzc,EAASkG,GAAG,GACjBwW,EAAW1c,EAASkG,GAAG,GAE3B,IAJA,IAGI2W,GAAY,EACPzW,EAAI,EAAGA,EAAIoW,EAASrW,OAAQC,MACpB,EAAXsW,GAAsBC,GAAgBD,IAAaI,OAAOC,KAAKlB,EAAoBS,GAAGU,OAAM,SAASva,GAAO,OAAOoZ,EAAoBS,EAAE7Z,GAAK+Z,EAASpW,GAAK,IAChKoW,EAASS,OAAO7W,IAAK,IAErByW,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACb7c,EAASid,OAAO/W,IAAK,GACrB,IAAIgX,EAAIT,SACET,IAANkB,IAAiBX,EAASW,EAC/B,CACD,CACA,OAAOX,CArBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIxW,EAAIlG,EAASmG,OAAQD,EAAI,GAAKlG,EAASkG,EAAI,GAAG,GAAKwW,EAAUxW,IAAKlG,EAASkG,GAAKlG,EAASkG,EAAI,GACrGlG,EAASkG,GAAK,CAACsW,EAAUC,EAAIC,EAwB/B,E6D5BAb,EAAoBsB,EAAI,SAASjB,GAChC,IAAIkB,EAASlB,GAAUA,EAAOmB,WAC7B,WAAa,OAAOnB,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAL,EAAoByB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,ECNAvB,EAAoByB,EAAI,SAASrB,EAASuB,GACzC,IAAI,IAAI/a,KAAO+a,EACX3B,EAAoB4B,EAAED,EAAY/a,KAASoZ,EAAoB4B,EAAExB,EAASxZ,IAC5Eqa,OAAOY,eAAezB,EAASxZ,EAAK,CAAEkb,YAAY,EAAM5Y,IAAKyY,EAAW/a,IAG3E,ECPAoZ,EAAoB+B,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOvd,MAAQ,IAAIwd,SAAS,cAAb,EAGhB,CAFE,MAAOnS,GACR,GAAsB,iBAAXzH,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB2X,EAAoB4B,EAAI,SAASM,EAAKC,GAAQ,OAAOlB,OAAOmB,UAAUC,eAAezS,KAAKsS,EAAKC,EAAO,ECCtGnC,EAAoBqB,EAAI,SAASjB,GACX,oBAAXkC,QAA0BA,OAAOC,aAC1CtB,OAAOY,eAAezB,EAASkC,OAAOC,YAAa,CAAEra,MAAO,WAE7D+Y,OAAOY,eAAezB,EAAS,aAAc,CAAElY,OAAO,GACvD,ECNA8X,EAAoBwC,IAAM,SAASnC,GAGlC,OAFAA,EAAOoC,MAAQ,GACVpC,EAAO1b,WAAU0b,EAAO1b,SAAW,IACjC0b,CACR,E,WCJA,IAAIqC,EACA1C,EAAoB+B,EAAEY,gBAAeD,EAAY1C,EAAoB+B,EAAE/b,SAAW,IACtF,IAAI2Z,EAAWK,EAAoB+B,EAAEpC,SACrC,IAAK+C,GAAa/C,IACbA,EAASiD,gBACZF,EAAY/C,EAASiD,cAAcnb,MAC/Bib,GAAW,CACf,IAAIG,EAAUlD,EAASmD,qBAAqB,UACzCD,EAAQvY,SAAQoY,EAAYG,EAAQA,EAAQvY,OAAS,GAAG7C,IAC5D,CAID,IAAKib,EAAW,MAAM,IAAIK,MAAM,yDAChCL,EAAYA,EAAUpa,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpF0X,EAAoBhb,EAAI0d,C,eCVxB,IAAIM,EAAkB,CACrB,IAAK,GAaNhD,EAAoBS,EAAElW,EAAI,SAAS0Y,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4BjW,GAC/D,IAKI+S,EAAUgD,EALVtC,EAAWzT,EAAK,GAChBkW,EAAclW,EAAK,GACnBmW,EAAUnW,EAAK,GAGI7C,EAAI,EAC3B,GAAGsW,EAASlH,MAAK,SAASxR,GAAM,OAA+B,IAAxB+a,EAAgB/a,EAAW,IAAI,CACrE,IAAIgY,KAAYmD,EACZpD,EAAoB4B,EAAEwB,EAAanD,KACrCD,EAAoBQ,EAAEP,GAAYmD,EAAYnD,IAGhD,GAAGoD,EAAS,IAAI3C,EAAS2C,EAAQrD,EAClC,CAEA,IADGmD,GAA4BA,EAA2BjW,GACrD7C,EAAIsW,EAASrW,OAAQD,IACzB4Y,EAAUtC,EAAStW,GAChB2V,EAAoB4B,EAAEoB,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOjD,EAAoBS,EAAEC,EAC9B,EAEI4C,EAAqBC,KAA8B,wBAAIA,KAA8B,yBAAK,GAC9FD,EAAmBE,QAAQN,EAAqBO,KAAK,KAAM,IAC3DH,EAAmBzc,KAAOqc,EAAqBO,KAAK,KAAMH,EAAmBzc,KAAK4c,KAAKH,G,IClDvFtD,EAAoB0D,QAAKvD,ECGzB,IAAIwD,EAAsB3D,EAAoBS,OAAEN,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,MAAQ,IAClH2D,EAAsB3D,EAAoBS,EAAEkD,E","sources":["webpack://ShoreBirdie/webpack/runtime/chunk loaded","webpack://ShoreBirdie/./src/components/ErrorBoundary/ErrorBoundary.tsx","webpack://ShoreBirdie/./src/components/images/logo.png","webpack://ShoreBirdie/./src/components/Flex/Flex.tsx","webpack://ShoreBirdie/./src/pages/Home/JobFeed.tsx","webpack://ShoreBirdie/./src/pages/Home/JobDetails.tsx","webpack://ShoreBirdie/./src/components/SearchBar/data.tsx","webpack://ShoreBirdie/./src/config.ts","webpack://ShoreBirdie/./src/services/Jobs/index.ts","webpack://ShoreBirdie/./src/pages/Home/Home.tsx","webpack://ShoreBirdie/./src/services/ContactUs/index.ts","webpack://ShoreBirdie/./src/pages/ContactUs/validate.ts","webpack://ShoreBirdie/./src/pages/ContactUs/ContactUs.tsx","webpack://ShoreBirdie/./src/services/Products/index.ts","webpack://ShoreBirdie/./src/pages/ProductSelectionPage/ProductSelectionPage.tsx","webpack://ShoreBirdie/./src/pages/PostJobs/PostJobs.tsx","webpack://ShoreBirdie/./src/pages/PostJobs/validate.ts","webpack://ShoreBirdie/./src/pages/PostJobs/FormSections/JobTitleSection.tsx","webpack://ShoreBirdie/./src/pages/PostJobs/FormSections/CompanyDetailsSection.tsx","webpack://ShoreBirdie/./src/pages/PostJobs/FormSections/CompanyLocationSection.tsx","webpack://ShoreBirdie/./src/pages/PostJobs/FormSections/JobDates.tsx","webpack://ShoreBirdie/./src/pages/PostJobs/FormSections/QualificationsSection.tsx","webpack://ShoreBirdie/./src/pages/PostJobs/FormSections/DutiesSection.tsx","webpack://ShoreBirdie/./src/pages/PostJobs/FormSections/SalarySection.tsx","webpack://ShoreBirdie/./src/pages/PostJobs/FormSections/SubmitSection.tsx","webpack://ShoreBirdie/./src/services/Payments/index.ts","webpack://ShoreBirdie/./src/pages/PostJobs/Form.tsx","webpack://ShoreBirdie/./src/services/Authentication/index.ts","webpack://ShoreBirdie/./src/pages/user/Signup.tsx","webpack://ShoreBirdie/./src/pages/user/Login.tsx","webpack://ShoreBirdie/./src/pages/user/Logout.tsx","webpack://ShoreBirdie/./src/pages/user/userProfile.tsx","webpack://ShoreBirdie/./src/pages/AdminPage/PendingJobs.tsx","webpack://ShoreBirdie/./src/pages/AdminPage/RejectedJobs.tsx","webpack://ShoreBirdie/./src/pages/AdminPage/Products.tsx","webpack://ShoreBirdie/./src/pages/AdminPage/Admin.tsx","webpack://ShoreBirdie/./src/pages/UserPage/User.tsx","webpack://ShoreBirdie/./src/pages/SearchPage/SeachUtils/DropDown.tsx","webpack://ShoreBirdie/./src/store/SearchContent/selector.ts","webpack://ShoreBirdie/./src/store/SearchContent/reducer.ts","webpack://ShoreBirdie/./src/pages/SearchPage/SearchPage.tsx","webpack://ShoreBirdie/./src/pages/SearchPage/SeachUtils/FullJobView.tsx","webpack://ShoreBirdie/./src/Reducer/userReducer.tsx","webpack://ShoreBirdie/./src/pages/HomePage/HomePage.tsx","webpack://ShoreBirdie/./src/components/NavBar/NavBar.tsx","webpack://ShoreBirdie/./src/components/SearchBar/SearchBar.tsx","webpack://ShoreBirdie/./src/components/Location/Location.tsx","webpack://ShoreBirdie/./src/components/Product/Product.tsx","webpack://ShoreBirdie/./src/components/MessageBox/ToggleSwitch.tsx","webpack://ShoreBirdie/./src/components/Product/EditableProduct.tsx","webpack://ShoreBirdie/./src/components/Product/PaymentSuccess.tsx","webpack://ShoreBirdie/./src/components/Product/PaymentCancel.tsx","webpack://ShoreBirdie/./src/components/Highlights/Highlights.tsx","webpack://ShoreBirdie/./src/store/Map/reducer.ts","webpack://ShoreBirdie/./src/store/Payments/reducer.ts","webpack://ShoreBirdie/./src/store/rootReducer.ts","webpack://ShoreBirdie/./src/store/getPreloadedState.ts","webpack://ShoreBirdie/./src/store/configureStore.ts","webpack://ShoreBirdie/./src/contexts/AppContextProvider.tsx","webpack://ShoreBirdie/./src/index.tsx","webpack://ShoreBirdie/webpack/bootstrap","webpack://ShoreBirdie/webpack/runtime/compat get default export","webpack://ShoreBirdie/webpack/runtime/define property getters","webpack://ShoreBirdie/webpack/runtime/global","webpack://ShoreBirdie/webpack/runtime/hasOwnProperty shorthand","webpack://ShoreBirdie/webpack/runtime/make namespace object","webpack://ShoreBirdie/webpack/runtime/node module decorator","webpack://ShoreBirdie/webpack/runtime/publicPath","webpack://ShoreBirdie/webpack/runtime/jsonp chunk loading","webpack://ShoreBirdie/webpack/runtime/nonce","webpack://ShoreBirdie/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import React, { PureComponent, ReactNode } from 'react';\n\ninterface Props {\n    children?: ReactNode;\n}\n\ninterface State {\n    error: Error | null;\n    errorInfo: { componentStack: string } | null;\n}\n\nexport default class ErrorBoundary extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      errorInfo: null,\n    };\n  }\n\n  componentDidCatch(\n    error: Error,\n    errorInfo: { componentStack: string }\n  ): void {\n    // Catch errors in any components below and re-render with error message\n    this.setState({ error, errorInfo });\n\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error, errorInfo } = this.state;\n\n    if (!error) {\n      return children;\n    }\n\n    return (\n      <div>\n        <h1>Something went wrong</h1>\n        {error ? <p>{error.toString()}</p> : null}\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"logo.ca3873355db3b8bcf12f773d8f946a6b.png\";","import React from 'react';\n\nconst Flex=(props:any)=>{\n  return (\n    <div className=\"flex\">\n      {props.children}\n    </div>\n  );\n};\nexport default Flex;\n","import React from 'react';\nimport './JobFeed.scss';\nimport { ErrorBoundary } from '../../components';\nimport { Job } from '../../components/DataModels/Job';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome';\nimport { faBusinessTime, faMapMarker, faClock } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router-dom';\ninterface Props {\n    key:string;\n    jobd:Job;\n    jobClick:(currentJob:Job,currentView:string)=>void;\n    viewBtn?:boolean;\n}\nconst JobFeed = (det: Props) => {\n  let p=det.jobd;\n  const { viewBtn } = det;\n  const history = useHistory();\n  const setJob=()=>{\n    det.jobClick(p,'show');\n  };\n  const viewJob = () => {\n    history.push(`/job/${p._id}`);\n    return ;\n  };\n  dayjs.extend(relativeTime);\n  const postingDate = dayjs(p.dates.postingDate).format('DD/MM/YYYY');\n  return (\n    <ErrorBoundary>\n      <div className=\"jobFeed\" onClick={setJob} >\n        <div className=\"title\">\n          <h4 >{p.job.title}</h4>\n          <span className=\"company\"> {p.company.name}</span>\n          <span> {p.location.city},{p.location.state}</span>\n        </div>\n        <div className=\"shift\">\n          <span>&#8377; {p.salary.sal}-{p.job.type}</span>\n          <span>{p.job.experience}</span>\n          <span> {p.company.companyType}</span>\n        </div>\n        <ul className='color-green'>\n          <li> \n            <FA icon={faClock} />\n          </li>\n          <li>\n            Posted On : { postingDate }\n          </li>\n        </ul>\n        <h2>Discipline:</h2>\n        <ul>\n          {p.discipline.map((discipline: string, index: number) => (\n            <li key={index}>{discipline}</li>\n          ))}\n        </ul>\n        <div className=\"foot\">\n          <div>\n            <p>Hiring ongoing: From\n              <b>\n                {p.job.title} in {p.location.city},{p.location.state}\n              </b>\n            </p>\n          </div>\n          <div>\n            { viewBtn && <button className='viewBtn' onClick={viewJob} >View Details</button> }\n          </div>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\nexport default JobFeed;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './JobDetails.scss';\nimport { ErrorBoundary } from '../../components';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { Job } from '../../components/DataModels/Job';\nimport { useEffect, useState } from 'react';\ninterface Props {\n    key:string,\n    jobd:Job | null;\n    jobClick:(currentJob:Job,currentView:string)=>void;\n    disablePreview:()=>void;\n    isHome:boolean;\n    children?:any;\n    isAdmin?:boolean;\n}\nconst JobDetails= (details:Props) => {\n  let p=details.jobd;\n  const imagePath = p.company.logo;\n  const { isAdmin }= details;\n  const clicked=()=>{\n    if(details.isHome){\n      details.jobClick(null,'hide');\n    }else{\n      details.disablePreview();\n    }\n  };\n  const {email, employeeWebsite} = p.contact;\n  const redirectToApplication= () => {\n    if(employeeWebsite){\n      window.location.replace(employeeWebsite);\n      return;\n    }\n    if(email){\n      window.open(`mailto:${email}?subject=application&body=description`);\n      return;\n    }\n  };\n  dayjs.extend(relativeTime);\n  const closing = dayjs(p.dates.closingDate).format('DD/MM/YYYY');\n  const posting = dayjs(p.dates.postingDate).format('DD/MM/YYYY');\n  return (\n    <ErrorBoundary>\n      <div className=\"jobdetails\" >\n        <div className=\"sticky\">\n          <div className=\"mainHead\">\n            <div className=\"sideContent\">\n              <div className=\"logoBox\">\n                <img className=\"companyLogoImage\" src={imagePath} />\n              </div>\n              <div className=\"jobTitle\">\n                <div className=\"title\">\n                  <div>{p.job.title}</div>\n                </div>\n                <Link to='/' >{p.company.name}</Link>\n                <span className='companyLocation'>{p.location.city},{p.location.state}-{p.location.country}</span>\n                <span>&#8377;{p.salary.sal} - {p.salary.companyType}</span>\n                <div className=\"closingDate\">\n                  <div className=\"dateBold\">Closing Date :</div >\n                  <div>{closing}</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"wrong\" onClick={clicked}>X</div>\n          </div>\n        </div>\n        <div className=\"scrollableContent\">\n          <div className=\"headDetails\">\n            <b className='title'>Job Details</b>\n            <div className=\"flexside\">\n              <div className=\"boxside\">\n                <div className=\"jobType\">\n                  <b>Job Type</b>\n                  <span>{p.company.companyType}</span>\n                </div>\n              </div>\n              <div className=\"boxside\">\n                <div className=\"jobType\">\n                  <b>Duration</b>\n                  <span>{p.salary.hours}hrs/Day</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"headDetails bordertop\">\n            <b className='title'>Important Dates</b>\n            <div className=\"flexside\">\n              <div className=\"boxside\">\n                <div className=\"jobType\">\n                  <b>Posting Job on</b>\n                  <span>\n                    {posting}\n                  </span>\n                </div>\n              </div>\n              <div className=\"boxside\">\n                <div className=\"jobType\">\n                  <b>Closing Job on</b>\n                  <span>\n                    {closing}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"Box alignLeft\">\n            <b className=\"jobTitle\">\n              <h1>Qualifications</h1>\n            </b>\n            <ul>\n              {\n                p.qualifications.map((qualification:{value:string,id:string})=>(\n                  <li key={qualification.id}>{qualification.value}</li>\n                ))\n              }\n            </ul>\n          </div>\n          <div className=\"Box alignLeft\">\n            <b className=\"jobTitle\">\n              <h1>Full Job Description</h1>\n            </b>\n            <div className=\"innerbox\">\n              <ul className=\"colorlightblack\">\n                {\n                  p.duties.map((duty:{value:string ,id:string})=>(\n                    <li key={duty.id}>{duty.value}</li>\n                  ))\n                }\n              </ul>\n            </div>\n          </div>\n          { isAdmin && <div className=\"Box alignLeft\">\n            <b className=\"jobTitle\">\n              <h1>Admin Options</h1>\n            </b>\n            {details.children}\n          </div>}\n          {(email || employeeWebsite) && !isAdmin &&\n            <div className=\"alignLeft\">\n              <div className=\"jobButton\">\n                <button className=\"btnApply\" type=\"button\" onClick={redirectToApplication}>Apply</button>\n              </div>\n            </div>}\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default JobDetails;\n","import React from 'react';\nconst jobTypes = [\n  'Postdoctoral Fellow',\n  'Lecturer',\n  'Researcher',\n  'Junior Scientist',\n  'Senior Scientist',\n  'Technician',\n  'Scientist',\n  'Application Scientist',\n  'Faculty Member',\n  'PhD Studentship',\n  'PhD Fellowship',\n  'Data Scientist',\n  'Bio Statistician',\n  'Research Assistant',\n  'Research Associate',\n  'Research Scientist',\n  'Project Assistant',\n  'Project Associate',\n  'Bioinformatician',\n  'Computational Chemist',\n  'Computational Biologist',\n  'Molecular Biologist',\n  'Forensic Scientist',\n  'Director',\n  'Internship',\n  'Engineer',\n  'Principal Investigator',\n  'Head of Department',\n  'Manager',\n  'Lab Manager',\n  'Editor',\n  'Health Professional',\n  'Project Manager',\n  'Sales',\n  'Writer',\n  'Team/Group Leader',\n  'Clinical Data Manager',\n  'Synthetic Chemist',\n  'Material Chemist',\n  'Residency Notifications',\n  'MD Notifications'\n];\n\nconst data = jobTypes.map((jobType, index) => ({\n  id: index,\n  name: jobType\n}));\n\nexport default data;\n","export const REACT_BACKEND_URL=process.env.REACT_APP_BACKEND_URL || 'http://localhost:3000';\nexport const REACT_STRIPE_PUBLIC_KEY=process.env.REACT_APP_STRIPE_PUBLIC_KEY;\nexport const REACT_BUCKETNAME=process.env.REACT_APP_BUCKET_NAME || '';\nexport const REACT_DIRNAME=process.env.REACT_APP_DIRNAME || '';\nexport const REACT_ACCESSKEY=process.env.REACT_APP_ACCESS_KEY || '';\nexport const REACT_SC=process.env.REACT_APP_SECRET_KEY || '';\nexport const REACT_REGION=process.env.REACT_APP_REGION ||'';","import { Job } from '../../components/DataModels/Job';\nimport FormData from '../../components/DataModels/FormData';\n\nimport { REACT_BACKEND_URL } from '../../config';\nimport axios from 'axios';\nimport { SearchData } from '../../components/DataModels/SearchData';\nconst instance = axios.create({\n  withCredentials: true,\n});\n\ninterface PostJobProps{\n  form:FormData;\n}\n\nexport const fetchJobs = async (page: Number) => {\n  try {\n    const response = await axios.get<Job[]>(`${REACT_BACKEND_URL}/v1/job?page=${page}`);\n    return response;\n  } catch ( error ) {\n    return null;\n  }\n};\n\nexport const fetchJobsByAdmin = async (page: Number) => {\n  try {\n    const response = await instance.get<Job[]>(`${REACT_BACKEND_URL}/v1/admin?page=${page}`);\n    return response;\n  } catch ( error ){\n    return null;\n  }\n};\n\nexport const getJobByUser= async(page: Number)=>{\n  try {\n    const response=await instance.get<Job[]>(`${REACT_BACKEND_URL}/v1/job/user?page=${page}`);\n    return response;\n\n  }catch(error){\n    return error;\n  }\n};\n\nexport const getRejectedJobs = async (page:Number) => {\n  try{\n    const rejectedJobs = await instance.get<Job[]>(`${REACT_BACKEND_URL}/v1/admin/reject?page=${page}`);\n    return rejectedJobs;\n  } catch( error ){\n    return error.response;\n  }\n};\ninterface Props{\n  id:string;\n}\nexport const setStatusReject = async (props:Props) => {\n  const { id } = props;\n  try {\n    const status = await instance.put(`${REACT_BACKEND_URL}/v1/admin/reject/${id}`);\n    return status;\n  } catch( error) {\n    return error.response;\n  }\n};\nexport const setStatusApprove = async (props:Props) => {\n  const { id } = props;\n  try {\n    const status = await instance.post(`${REACT_BACKEND_URL}/v1/admin/approve/${id}`);\n    return status;\n  } catch( error) {\n    return error.response;\n  }\n};\nexport const fetchRecomendedJobs= async(page:Number)=>{\n  try{\n    const response= await axios.get<Job[]>(`${REACT_BACKEND_URL}/v1/job/recomended?page=${page}`);\n    return response;\n  }\n  catch(error){\n    return error;\n  }\n};\nexport const getSearchJobs = async (search:SearchData,page:Number) =>{\n  try {\n    const searchContent = JSON.stringify(search);\n    const response = await axios.get<Job[]>(`${REACT_BACKEND_URL}/v1/job/search?page=${page}&search=${searchContent}`);\n    return response;\n  } catch ( error ) {\n    return null;\n  }\n};\nexport const getJobById = async (jobId:string) =>{\n  try {\n    const response = await axios.get<Job>(`${REACT_BACKEND_URL}/v1/job/get/${jobId}`);\n    return response;\n  } catch ( error ) {\n    return error.response;\n  }\n};\n","import React ,{useState,useRef} from 'react';\nimport JobFeed from './JobFeed';\nimport JobDetails from './JobDetails';\nimport './Home.scss';\nimport { ErrorBoundary,Searchbar, Location, Highlights } from '../../components';\nimport  FormData  from '../../components/DataModels/FormData';\nimport data from '../../components/SearchBar/data';\nimport { fetchJobs } from '../../services/Jobs';\nimport { Job } from '../../components/DataModels/Job';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { fetchRecomendedJobs } from '../../services/Jobs';\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft,faArrowRight, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { useHistory } from 'react-router-dom';\nconst shuffle = (array:Job[]) => {\n  for( var i=array.length-1;i>0;i--){\n    var j = Math.floor(Math.random()*(i+1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n};\n\nconst Home = () => {\n  const [currentJob,setCurrentJob]= useState(null);\n  const [view,setView]= useState('hide');\n  const history = useHistory();\n  const [jobs,setJobs]=React.useState([]);\n  const [selectedJob,setSelectedJob]=React.useState('');\n  const [job,setJob] =React.useState([]);\n  const [page,setPage]=React.useState(0);\n  const [checkHasMore,setCheckHasMore]=React.useState(true);\n  const [recomendedJobs,setRecomendedJobs]=React.useState([]);\n  const [slidingPage,setSlidingPage ] = useState(0);\n  const [ location, setLocation ] = useState('');\n  const [ jobTitle, setJobTitle ] = useState('');\n\n  const updateLocation = (value:string)=>{\n    setLocation(value);\n  };\n  const updateJobTitle = (value:string)=>{\n    setJobTitle(value);\n  };\n\n  const jobSliderRef = useRef(null);\n  const nextJob = () => {\n    jobSliderRef.current.slickNext();\n  };\n  const previousJob = () => {\n    jobSliderRef.current.slickPrev();\n  };\n  const jobSlides = Math.round(window.screen.width/400);\n  const jobSlideSettings = {\n    dots: false,\n    infinite: true,\n    speed: 1000,\n    slidesToShow: jobSlides,\n    slidesToScroll: 1,\n    autoPlay: true,\n    autoPlaySpeed: 1000 \n  };\n\n  const logoSliderRef = useRef(null);\n    \n  const nextLogo = () => {\n    logoSliderRef.current.slickNext();\n  };\n\n  const previousLogo = () => {\n    logoSliderRef.current.slickPrev();\n  };\n  const logoSlides = Math.round(window.screen.width/200);\n  const logoSlideSettings = {\n    dots: false,\n    infinite: true,\n    speed: 1000,\n    slidesToShow: logoSlides,\n    slidesToScroll: 1,\n    autoPlay: true,\n    autoPlaySpeed: 1000 \n  };\n  const fetchData=async(page:number)=>{\n    const res = await fetchJobs(page);\n    if(res.data.length==0){\n      setCheckHasMore(false);\n      return ;\n    }\n    if(res){\n      const newJobs = res.data;\n      shuffle(newJobs);\n      setJobs([...jobs,...newJobs]);\n      setCurrentJob(newJobs[0]);\n      setView('show');\n    }\n  };\n  const fetchRecomendedData=async(slidingPage:number)=>{\n    const res = await fetchRecomendedJobs(slidingPage);\n    if(res){\n      const newJobs=res.data;\n      shuffle(newJobs);\n      setRecomendedJobs(newJobs);\n    }\n  };\n  React.useEffect(()=>{\n    fetchRecomendedData(slidingPage);\n    fetchData(page);\n  },[slidingPage,page]);\n  React.useEffect(()=>{\n    let filteredJobs=jobs;\n    if(filteredJobs){\n      filteredJobs=jobs.filter(item => item.job.title.toLowerCase().includes(selectedJob.toLowerCase()));\n    }\n    setJob(filteredJobs);\n  },[recomendedJobs,jobs]);\n  const handleJobSelect=(jobName:string)=>{\n    setSelectedJob(jobName);\n  };\n\n  const jobClick=(job:Job,currentView:string)=>{\n    setView(currentView);\n    setCurrentJob(job);\n  };\n  const gotoSearch = () => {\n    history.push({\n      pathname:'/search',\n      state: {jobTitle: jobTitle,locationValue: location}\n    });\n    return ;\n  };\n  \n  return (\n    <ErrorBoundary>\n      <div className=\"contentbox\">\n        <div className=\"top\">\n          <div className='inputForm'>\n            <div className=\"searchBar\">\n              <Searchbar data={data} onJobSelect={handleJobSelect} update={updateJobTitle}/>\n            </div>\n            <div className='locationBar'>\n              <Location  update={updateLocation}  />\n            </div>\n            <div className='searchIcon' onClick={gotoSearch}>\n              <span>Search </span>\n              <FA icon={faSearch}></FA>\n            </div>\n          </div>\n          <Highlights />\n        </div>\n        <div className=\"middle\">\n          {recomendedJobs.length!==0 &&\n          <div className=\"carousel-container\">\n            <Slider {...jobSlideSettings} ref={jobSliderRef}>\n              {recomendedJobs.map((element:Job)=>(\n                <JobFeed key={element.job.title} jobd={element} jobClick={jobClick} />\n              ))}\n\n            </Slider>\n            <div className='slideJobBtns'>\n              <button className=\"jobPrevButton\" onClick={previousJob}>\n                <FA icon={faArrowLeft} />\n              </button>\n              <button className=\"jobNextButton\" onClick={nextJob}>\n                <FA icon={faArrowRight} />\n              </button>\n            </div>\n          </div>\n          }\n        </div>\n        {recomendedJobs.length<=logoSlides &&\n        <div className=\"carousel-container-default\">\n          {recomendedJobs.map((element)=>(\n            <div className=\"carousel-card\" key={element._id}>\n              <div className=\"card-content\">\n                <img src={element.company.logo} alt=\"Text\" />\n                <h1>{element.company.name}</h1>\n              </div>\n            </div>\n          ))}\n        </div>\n        }\n        {recomendedJobs.length>logoSlides &&\n        <div className=\"carousel-container\">\n          <Slider {...logoSlideSettings} ref={logoSliderRef}>\n            {recomendedJobs.map((element)=>(\n              <div className=\"carousel-card\" key={element._id}>\n                <div className=\"card-content\">\n                  <img src={element.company.logo} alt=\"Text\" />\n                  <h1>{element.company.name}</h1>\n                </div>\n              </div>\n            ))}\n          </Slider>\n          <div className='slideBtns'>\n            <button className=\"prevButton\" onClick={previousLogo}>\n              <FA icon={faArrowLeft} />\n            </button>\n            <button className=\"nextButton\" onClick={nextLogo}>\n              <FA icon={faArrowRight} />\n            </button>\n          </div>\n        </div>\n        }\n        <div className=\"down\">\n          <div className={view==='hide'?'show':window.screen.width>900?'show':'hide'}>\n            <InfiniteScroll\n              dataLength={jobs.length}\n              hasMore={checkHasMore}\n              next={()=>setPage(jobs.length)}\n              loader={<h4>Loading...</h4>}\n            >\n              { job.map((element:Job)=>(\n                <JobFeed key={element._id} jobd={element} jobClick={jobClick} />\n              )) }\n            </InfiniteScroll>\n            {!checkHasMore && <h4 className='endingMessage'>We have these jobs only...</h4>}\n          </div>\n          <div className={view}>\n            {currentJob && <JobDetails key={currentJob._id} jobd={currentJob} jobClick={jobClick} disablePreview={null} isHome={true} />}\n          </div>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default Home;","import { ContactData } from '../../components/DataModels/ContactData';\nimport { REACT_BACKEND_URL } from '../../config';\nimport axios from 'axios';\ninterface Props{\n  body: ContactData;\n}\nexport const sendQuery = async ( props: Props ) => {\n  const { body } = props;\n  try {\n    const response = await axios.post(`${REACT_BACKEND_URL}/v1/contact`,body);\n    return response;\n  } catch ( error ) {\n    return null;\n  }\n};\n","import  { ContactData }  from '../../components/DataModels/ContactData';\n\nexport const validate=(body:ContactData)=>{\n  const mandatoryFields = [\n    'email','companyName','name','query'\n  ];\n  const  isValid = mandatoryFields.reduce((acc,field) => {\n    return acc && body[field];\n  },true);\n  return isValid ? body: null;\n\n};\n","import React,{useState} from 'react';\nimport { ErrorBoundary } from '../../components';\nimport { sendQuery } from '../../services/ContactUs';\nimport { validate } from './validate';\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome';\nimport { faPhone,faEnvelope,faMapMarker } from '@fortawesome/free-solid-svg-icons';\nimport './ContactUs.scss';\n\nconst ContactUs = ( ) => {\n  const [formStatus,setFormStatus]= useState({status:'',color:''});\n  const [ btnStatus, setBtnStatus ] = useState(false);\n  const [formData,setFormData]= useState({email:'',companyName:'',name:'',query:''});\n  const { call,email,map} = {call:'+44(0) 1223 326 528',email:'service@shorebirdie.org',map:'https://www.google.com/maps'};\n  const onSubmit= async (e:any)=>{\n    e.preventDefault();\n    const body = formData;\n    setBtnStatus(true);\n    if(validate(body)){\n      const response = await sendQuery({body});\n      if(response){\n        setFormStatus({status:'Email sent', color:'green'});\n      }else{\n        setFormStatus({status:'Error!', color:'red'});\n      }\n    }\n    setTimeout(() => {\n      setFormStatus({status:'',color:''});\n      setBtnStatus(false);\n    }, 2000);\n  };\n  const handleChange=(e:any)=>{\n    setFormData(prevFormData=>{\n      return{\n        ...prevFormData,\n        [e.target.name]:e.target.value\n      };\n    });\n  };\n  const redirectToCall = () => {\n    const url = 'tel:'+call;\n    window.location.replace(url);\n  };\n  const redirectToEmail = () => {\n    const url = 'mailto:'+email;\n    window.location.replace(url);\n  };\n  const redirectToMap = () => {\n    window.location.replace(map);\n  };\n  return (\n    <ErrorBoundary>\n      <div className=\"contactContainer\">\n        <div className=\"box leftContentBox\" >\n          <div className=\"heading\">\n            We are here for you\n          </div>\n          <div className=\"writeup\">\n            Our team speaks English, German, French, Spanish, Italian, Swedish, Arabic and Chineese and will respond to your query  within 24 hours.\n          </div>\n          <div className=\"body\">\n            <div className='items'>\n              International 9:00 AM - 5:30 PM\n            </div>\n            <div onClick={redirectToCall} className='items'>\n              <FA icon={faPhone}/>\n              <span> {call} </span>\n            </div>\n            <div onClick={redirectToEmail} className='items'>\n              <FA icon={faEnvelope}/>\n              <span> service@shorebirdie.org </span> \n            </div>\n            <div onClick={redirectToMap} className='items'>\n              <FA icon={faMapMarker} />\n              <span> US ,Canada & South America </span> \n            </div>\n          </div>\n        </div>\n        <div className=\"box contentBox\">\n          <div>\n            <form onSubmit={onSubmit} action='#' >\n              <input type=\"email\" name=\"email\"  value={formData.email} required onChange={handleChange} placeholder=\"Email\"/>\n              <input type=\"text\" name=\"name\" value={formData.name} required onChange={handleChange} placeholder=\"Full Name\"/>\n              <input type=\"text\" name=\"companyName\" required value={formData.companyName} onChange={handleChange}  placeholder=\"Company Name\"/>\n              <textarea name=\"query\" onChange={handleChange} required placeholder=\"Message\" id=\"\" cols={30} rows={5}></textarea>\n              <div className='flexSide'>\n                <button type=\"submit\" className={btnStatus?'sendingBtn':'sendBtn'}>{btnStatus?'Sending':'Send Message'} </button>\n                <span className={'submitStatus '+formStatus.color} >{formStatus.status}</span>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default ContactUs;\n","import { REACT_BACKEND_URL } from '../../config';\nimport  ProductData  from '../../components/DataModels/ProductData';\nimport axios from 'axios';\nconst instance = axios.create({\n  withCredentials: true,\n});\n\nexport const getProducts = async () => {\n  try{\n    const res = await axios.get<ProductData[]>(`${REACT_BACKEND_URL}/v1/products/get`);\n    return res;\n  }catch( error ) {\n    error;\n  }\n};\nexport const updateProduct = async (product:ProductData) => {\n  try{\n    const res = await instance.post(`${REACT_BACKEND_URL}/v1/products/update`,{product});\n    return res;\n  }catch(error){\n    return error.response;\n  }\n};","import React, { useState} from 'react';\nimport './ProductSelectionPage.scss';\nimport { ErrorBoundary, Product } from '../../components';\nimport ProductData from '../../components/DataModels/ProductData';\nimport { getProducts } from '../../services/Products';\n\nconst ProductSelectionPage = () => {\n  const [ products, setProducts] = useState([]);\n  const fetchProducts = async () => {\n    const res = await getProducts();\n    if(res.status===200){\n      setProducts(res.data);\n    }\n  }; \n  React.useEffect(()=>{\n    fetchProducts();\n  },[]);\n  return (\n    <ErrorBoundary>\n      <div className=\"job_page\">\n        <div className=\"content\">\n          { products &&\n            products.map(( product:ProductData ) => (\n              <Product key={product.type} product={ product }  />\n            ))\n          }\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\nexport default ProductSelectionPage;\n","import React ,{ useContext } from 'react';\nimport { ErrorBoundary, Product } from '../../components';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from '../HomePage/HomePage';\nimport  ProductData  from '../../components/DataModels/ProductData';\nimport ProductSelectionPage from '../ProductSelectionPage/ProductSelectionPage';\ninterface Props{\n  product:ProductData\n}\nconst PostJobs = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const history =  useHistory();\n  if(!state.user && !state.isAdmin){\n    history.push('/login');\n    return ;\n  }\n  return (\n    <ErrorBoundary>\n      <ProductSelectionPage />\n    </ErrorBoundary>\n  );\n};\n\nexport default PostJobs;\n","import  FormData  from '../../components/DataModels/FormData';\n\nconst validate=(form:FormData)=>{\n  const mandatoryFields = [\n    'job.title', 'job.qualification', 'job.experience', 'company.name', 'company.companyType', 'company.logo', 'location.city', 'location.state', 'location.country',\n    'location.region', 'dates.closingDate','salary.sal', 'salary.hours', 'salary.companyType',\n    ,'discipline','qualifications','duties'\n  ];\n  const  isValid = mandatoryFields.reduce((acc,field) => { \n    if (field === 'qualifications' || field === 'duties' || field === 'discipline') {\n      return acc && !(!form[field]);\n    }\n    const subFields = field.split('.');\n    return acc && !(!form[subFields[0]][subFields[1]]); \n  },true);\n  return isValid ? form: null;\n\n};\n\nexport default validate;","import React,{useState} from 'react';\nimport { ErrorBoundary } from '../../../components';\nimport { Multiselect } from 'multiselect-react-dropdown';\ninterface Props{\n  updateForm:(field:string,value:any)=>void;\n}\nconst JobTitleSection = (props:Props) => {\n  const { updateForm } = props;\n  const [option, setOption] = useState(['Life Sciences', 'Physics', 'Biomedicine','Health Sciences','Engineering','Chemistry','Computer Science','Applied Science','Nanotechnology','Earth Sciences','Environmental','Sciences','Veterinary','Fisheries','Agriculture','Forestry']);\n  const updateDiscipline=(field: string,value: any)=>{\n    if(value.length==0){\n      updateForm(field,null);\n      return;\n    }\n    updateForm(field,value);\n  };\n\n\n\n  return (\n    <ErrorBoundary>\n      <div className=\"side\">\n        <div className=\"headTitle\">Job Details</div>\n        <div className=\"row\">\n          <label htmlFor=\"title\">\n          Job Title\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <select\n            className=\"input\"\n            required\n            name=\"title\"\n            id=\"title\"\n            onChange={(e)=>updateForm('job.title',e.target.value)}\n          >\n            <option value=\"\">select</option>\n            <option value=\"Academic Dean/Dept. Head\">Academic Dean/Dept. Head</option>\n            <option value=\"Faculty\">Faculty</option>\n            <option value=\"Group Leader/Principal Invesigator\">Group Leader/Principal Invesigator</option>\n            <option value=\"Lab Manager\">Lab Manager</option>\n            <option value=\"Lecturer/Senior Lecturer\">Lecturer/Senior Lecturer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Medical Doctor\">Medical Doctor</option>\n            <option value=\"PhD Fellowship\">PhD Fellowship</option>\n            <option value=\"PhD Studentship\">PhD Studentship</option>\n            <option value=\"Postdoc Fellowship\">Postdoc Fellowship</option>\n            <option value=\"President/CEO/Director/VP\">President/CEO/Director/VP</option>\n            <option value=\"Project Manager\">Project Manager</option>\n            <option value=\"Research Scientist\">Research Scientist</option>\n            <option value=\"Senior Scientist\">Senior Scientist</option>\n            <option value=\"Staff Scientist\">Staff Scientist</option>\n            <option value=\"Student Fellowship\">Student Fellowship</option>\n            <option value=\"Technician\">Technician</option>\n          </select>\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"qualification\">\n            Qualification\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            name=\"qualification\"\n            onChange={(e)=>updateForm('job.qualification',e.target.value)}\n            required\n            id=\"qualification\"\n          />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"experience\">\n            Experience\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            name=\"experience\"\n            onChange={(e)=>updateForm('job.experience',e.target.value)}\n            required\n            id=\"experience\"\n          />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"title\">\n          Discipline\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <Multiselect className='multi'\n            onSelect={(e)=>updateDiscipline('discipline',e)}\n            onRemove={(e)=>updateDiscipline('discipline',e)}\n            isObject={false}\n            options={option}\n            selectedValues={['Sciences']}\n          />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"jobType\">\n            Job Type\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <select\n            className=\"input\"\n            required\n            name=\"jobType\"\n            id=\"jobType\"\n            onChange={(e)=>updateForm('job.type',e.target.value)}\n          >\n            <option value=\"Full-time\">Full-Time</option>\n            <option value=\"Contract\">Contract</option>\n            <option value=\"Part-time\">Part-Time</option>\n            <option value=\"Internship\">Internship</option>\n          </select>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default JobTitleSection;\n","import React from 'react';\nimport { ErrorBoundary } from '../../../components';\n\ninterface Props{\n  updateForm: (field: string, value: any) => void;\n}\n\nconst CompanyDetailsSection =  (props: Props) => {\n\n  const { updateForm } = props;\n  const setLogo = (file: File) => {\n    if(!file){\n      updateForm('Logo',null);\n      return;\n    }\n    updateForm('Logo',file);\n  };\n\n  return(\n    <ErrorBoundary>\n      <div className=\"side\">\n        <div className=\"headTitle\">Company Details</div>\n        <div className=\"row\">\n          <label htmlFor=\"companyName\">\n            Company Name\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            name=\"companyName\"\n            onChange={(e)=>updateForm('company.name',e.target.value)}\n            required\n            id=\"companyName\"\n          />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"companyType\">\n          Organization Type\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <select\n            className=\"input\"\n            required\n            name=\"companyType\"\n            id=\"companyType\"\n            onChange={(e)=>updateForm('company.companyType',e.target.value)}\n          >\n            <option value=\"\">select</option>\n            <option value=\"Academia\">Academia</option>\n            <option value=\"Industry\">Industry</option>\n            <option value=\"Government\">Government</option>\n            <option value=\"Healthcare/Hospital\">Healthcare/Hospital</option>\n            <option value=\"Non-Profit\">Non-Profit</option>\n            <option value=\"Media/Communications\">Media/Communications</option>\n          </select>\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"companyLogo\">\n            Logo\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <input\n            type=\"file\"\n            accept=\".jpg,.png,.jpeg,\"\n            className=\"input\"\n            name=\"companyLogo\"\n            onChange={(e)=>setLogo(e.target.files[0])}\n            required\n            id=\"companyLogo\" />\n        </div>\n        <div className=\"messageBox\">\n          <span className=\"logotype\"><i>(only  jpg, png, jpeg)</i></span>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default CompanyDetailsSection;\n","import React from 'react';\nimport { ErrorBoundary } from '../../../components';\n\ninterface Props{\n  updateForm: (field: string, value: any) => void;\n}\n\nconst CompanyLocationSection =  (props: Props) => {\n\n  const { updateForm } = props;\n\n  return(\n    <ErrorBoundary>\n      <div className=\"side\">\n        <div className=\"headTitle\">Company Location Details</div>\n        <div className=\"row\">\n          <label htmlFor=\"city\">\n            City\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            name=\"city\"\n            onChange={(e)=>updateForm('location.city',e.target.value)}\n            required\n            id=\"city\"\n          />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"state\">\n            State\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            name=\"state\"\n            onChange={(e)=>updateForm('location.state',e.target.value)}\n            required\n            id=\"state\"\n          />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"country\">\n            Country\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            name=\"country\"\n            onChange={(e)=>updateForm('location.country',e.target.value)}\n            required\n            id=\"country\"\n          />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"region\">\n            Region\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <select\n            className=\"input\"\n            required\n            name=\"region\"\n            id=\"region\"\n            onChange={(e)=>updateForm('location.region',e.target.value)}\n          >\n            <option value=\"\">select</option>\n            <option value=\"North America\">North America</option>\n            <option value=\"Europe\">Europe</option>\n            <option value=\"Asia\">Asia</option>\n            <option value=\"South America\">South America</option>\n            <option value=\"Asia Pacific\">Asia Pacific</option>\n            <option value=\"Australia\">Australia</option>\n            <option value=\"Working from home\">Working from home</option>\n            <option value=\"Middle East\">Middle East</option>\n            <option value=\"Oceania\">Oceania</option>\n          </select>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default CompanyLocationSection;\n","import React from 'react';\nimport { ErrorBoundary } from '../../../components';\ninterface Props{\n  updateForm: (field: string, value: any) => void;\n}\n\nconst JobDates =  (props: Props) => {\n\n  const { updateForm } = props;\n  \n  return(\n    <ErrorBoundary>\n      <div className=\"side\">\n        <div className=\"headTitle\">Dates</div>\n        <div className=\"row\">\n          <label htmlFor=\"appClosingDate\">\n            Application Deadline\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <input\n            className=\"input\"\n            min={new Date().toISOString().split('T')[0]}\n            max={new Date('9999-12-30').toISOString().split('T')[0]}\n            type=\"date\"\n            required\n            name=\"appClosingDate\"\n            onChange={(e)=>updateForm('dates.closingDate',e.target.value)}\n            id=\"appClosingDate\"\n          />\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default JobDates;\n","import React,{useState} from 'react';\nimport { ErrorBoundary } from '../../../components';\n\ninterface Props{\n  updateForm: (field: string, value: any) => void;\n}\n\nconst QualificationsSection =  (props: Props) => {\n\n  const [qualification, setQualification] = useState('');\n  const [qualifications, setQualifications] = useState([]);\n  const [emptyInpurError, setEmptyInputError] = useState(false);\n  const inputErrorMessage = '*Required';\n  const { updateForm } = props;\n\n  const updateQualification = (e: any)=>{\n    setQualification(e.target.value);\n  };\n\n  const removeQualification = (id: string)=>{\n    setQualifications((updatedQulifications)=>{\n      const newQualifications=qualifications.filter((qualification)=>qualification.id!=id);\n      if(newQualifications.length===0){\n        updateForm('qualifications',null);\n        return newQualifications;\n      }\n      updateForm('qualifications',newQualifications);\n      return newQualifications;\n    });\n\n  };\n  const addQualification = ()=>{\n    if(!qualification.trim()){\n      setEmptyInputError(true);\n      setTimeout(() => {\n        setEmptyInputError(false);\n      }, 2000);\n      return;\n    }\n    setQualifications((updatedQulifications)=>{\n      const tempQualifications=[\n        ...qualifications,{id:qualifications.length,value:qualification}\n      ];\n      updateForm('qualifications',tempQualifications);\n      return tempQualifications;\n    });setQualification('');\n    \n  };\n\n  return(\n    <ErrorBoundary>\n      <div className=\"side\">\n        <div className=\"headTitle\">\n          Extra Qualifications and Skills\n          <span className=\"mandatoryField\">*</span>\n        </div>\n        <ul>\n          {\n            qualifications.map((qualification)=>(\n              <li key={qualification.id}>{qualification.value}\n                <span  onClick={()=>removeQualification(qualification.id)} className=\"mandatoryField\" >x</span>\n              </li>\n            ))\n          }\n        </ul>\n        <div className=\"row\">\n          <input\n            type=\"text\"\n            name=\"extraqualification\"\n            onChange={updateQualification}\n            onBlur={updateQualification}\n            id=\"qlinput\"\n            placeholder=\"Bachelors/Masters/Phd\"\n            value={qualification}\n          />\n          <button type=\"button\"  onClick={addQualification} className=\"addBtn\" >Add+</button>\n        </div>\n        <div className=\"ErrorBox\">\n          <span className=\"inputErrorMesg\">{emptyInpurError && inputErrorMessage }</span>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default QualificationsSection;\n","import React,{useState} from 'react';\nimport { ErrorBoundary } from '../../../components';\n\ninterface Props{\n  updateForm: (field: string, value: any) => void;\n}\n\nconst DutiesSection =  (props: Props) => {\n\n  const [duties, setDuties]= useState([]);\n  const [duty, setDuty]=useState('');\n  const [emptyInpurError, setEmptyInputError] = useState(false);\n  const inputErrorMessage = '*Required';\n  const {updateForm} = props;\n\n  const updateDuty = (e:any)=>{\n    setDuty(e.target.value);\n  };\n\n  const removeDuty = (id:string)=>{\n    setDuties((updatedDuties)=>{\n      const newDuties=duties.filter((duty)=>duty.id!=id);\n      if(newDuties.length===0){\n        updateForm('duties',null);\n        return newDuties;\n      }\n      updateForm('duties',newDuties);\n      return newDuties;\n    });\n  };\n\n  const addDuty = ()=>{\n    if(!duty.trim()){\n      setEmptyInputError(true);\n      setTimeout(() => {\n        setEmptyInputError(false);\n      }, 2000);\n      return;\n    }\n    setDuties((updateDuties)=>{\n      const tempDuties=[\n        ...duties,{id:duties.length,value:duty}\n      ];\n      updateForm('duties',tempDuties);\n      return tempDuties;\n    });setDuty('');\n    \n    \n  };\n\n  return(\n    <ErrorBoundary>\n      <div className=\"side\">\n        <div className=\"headTitle\">\n          Job Duties\n          <span className=\"mandatoryField\">*</span>\n        </div>\n        <ul>\n          {\n            duties.map((duty)=>(\n              <li key={duty.id}>{duty.value}\n                <span onClick={()=>removeDuty(duty.id)} className=\"mandatoryField\" >x</span>\n              </li>\n            ))\n          }\n        </ul>\n        <div className=\"row flexrow\">\n          <textarea rows={5} cols={60} name=\"extraDuty\"  onChange={updateDuty} id=\"rrinput\"\n            placeholder=\"About the position job duties the application package.How to apply\" >\n          </textarea>\n          <button type=\"button\"  onClick={addDuty} className=\"addBtn\" >Add+</button>\n        </div>\n        <div className=\"row\">\n\n        </div>\n        <div className=\"ErrorBox\">\n          <span className=\"inputErrorMesg\">{emptyInpurError && inputErrorMessage }</span>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default DutiesSection;\n","import React from 'react';\nimport { ErrorBoundary } from '../../../components';\n\ninterface Props{\n  updateForm:(field:string,value:any)=>void;\n}\n\nconst SalarySection =  (props: Props) => {\n\n  const { updateForm } = props;\n\n  return(\n    <ErrorBoundary>\n      <div className=\"side\">\n        <div className=\"headTitle\">Salary Details</div>\n        <div className=\"row\">\n          <label htmlFor=\"salary\">\n            Salary\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <input\n            type=\"number\"\n            name=\"salary\"\n            onChange={(e)=>updateForm('salary.sal',e.target.value)}\n            required\n            id=\"salary\"\n          />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"hours\">\n            Job Hours\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <input\n            type=\"number\"\n            name=\"hours\"\n            onChange={(e)=>updateForm('salary.hours',e.target.value)}\n            required\n            id=\"hours\"\n          />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"salaryType\">\n            Salary type\n            <span className=\"mandatoryField\">*</span>\n          </label>\n          <select\n            className=\"input\"\n            required\n            name=\"salaryType\"\n            id=\"jobType\"\n            onChange={(e)=>updateForm('salary.companyType',e.target.value)}\n          >\n            <option value=\"\">select</option>\n            <option value=\"Annual\">Annual</option>\n            <option value=\"Regular\">Regular</option>\n            <option value=\"Monthly\">Monthly</option>\n            <option value=\"Quarterly\">Quarterly</option>\n          </select>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default SalarySection;\n","import React from 'react';\nimport { ErrorBoundary } from '../../../components';\n\ninterface Props{\n  updateForm: (field: string, value: any) => void;\n}\n\nconst SubmitSection =  (props: Props) => {\n\n  const { updateForm } = props;\n  const [selectState,setSelectState]=React.useState({\n    email:false,\n    website:false\n  });\n  const handleClick = (event: any) => {\n    const { id, checked } = event.target;\n    setSelectState((prevState) => ({\n      ...prevState,\n      [id]: checked,\n    }));\n  };\n  \n\n  return(\n    <ErrorBoundary>\n      <div className=\"side\">\n        <div className=\"headTitle\">How to Submit Apply via</div>\n        <div className=\"font-small\">\n          <label htmlFor=\"email\">By Email</label>\n          <input type=\"checkbox\" name=\"sub\" id=\"email\" checked={selectState.email} onClick={handleClick}/>\n          <label htmlFor=\"website\">Employer’s Website</label>\n          <input type=\"checkbox\" name=\"sub\" id=\"website\" checked={selectState.website} onClick={handleClick}/>\n        </div>\n        { selectState.email &&\n        <div className=\"row\">\n          <label htmlFor=\"sub\">Email ID</label>\n          <input\n            type=\"mail\"\n            name=\"submisionEmail\"\n            onChange={(e)=>updateForm('contact.email',e.target.value)}\n            id=\"sub\"\n            placeholder=\"example@gmail.com\"\n          />\n        </div>}\n        {selectState.website &&\n        <div className=\"row\">\n          <label htmlFor=\"sub\">Employer Website</label>\n          <input\n            type=\"mail\"\n            name=\"employersEmail\"\n            onChange={(e)=>updateForm('contact.employeeWebsite',e.target.value)}\n            id=\"sub\"\n            placeholder=\"www.example.com\" \n          />\n        </div>}\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default SubmitSection;\n","import  ProductData  from '../../components/DataModels/ProductData';\nimport { REACT_BACKEND_URL } from '../../config';\nimport axios from 'axios';\nimport FormData from '../../components/DataModels/FormData';\nconst instance = axios.create({\n  withCredentials: true,\n});\n\ninterface PaymentProps{\n  form: FormData,\n  product: ProductData,\n}\nexport const payment = async (props:PaymentProps) => {\n  const { form, product } = props;\n  try{\n    const res = await instance.post(`${REACT_BACKEND_URL}/v1/checkout/page`,{form,product});\n    return res;\n  }catch(error){\n    return error.response;\n  }\n};","import React,{useState, useContext} from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { ErrorBoundary } from '../../components';\nimport  FormData  from '../../components/DataModels/FormData';\nimport './Form.scss';\nimport JobDetails from '../Home/JobDetails';\nimport validate from './validate';\nimport ReactS3Client from 'karma-dev-react-aws-s3-typescript';\nimport { REACT_ACCESSKEY, REACT_BUCKETNAME, REACT_DIRNAME, REACT_REGION, REACT_SC } from '../../config';\nimport { UserContext } from '../../pages/HomePage/HomePage';\nimport { useCookies } from 'react-cookie';\nimport{\n  JobTitleSection,\n  CompanyDetailsSection,\n  CompanyLocationSection,\n  JobDates,\n  QualificationsSection,\n  DutiesSection,\n  SalarySection,\n  SubmitSection } from './FormSections/';\nimport { payment } from '../../services/Payments';\n\n\nconst defaultForm:FormData = {\n  job: {\n    title: '',\n    experience: '',\n    type: 'Full-time',\n    qualification:'',\n  },\n  company: {\n    name: '',\n    companyType: '',\n    logo: '',\n  },\n  location: {\n    city: '',\n    country: '',\n    region: '',\n    state:'',\n  },\n  dates: {\n    closingDate:null,\n  },\n  salary: {\n    sal: null,\n    hours: null,\n    companyType: 'Annual',\n  },\n  qualifications:null,\n  discipline:null,\n  duties:null,\n  contact:{\n    email:'',\n    employeeWebsite:'',\n  },\n  status:'Pending',\n};\n\nconst Form = () => {\n\n  const { state, dispatch } = useContext(UserContext);\n  const history = useHistory();\n  const [ authCookie, setAuthCookie, removeAuthCookie] = useCookies([]);\n  const location= useLocation();\n  const product = location.state;\n  const s3Config = {\n    bucketName:REACT_BUCKETNAME,\n    dirName: REACT_DIRNAME,\n    region: REACT_REGION,\n    accessKeyId: REACT_ACCESSKEY,\n    secretAccessKey: REACT_SC,\n  };\n\n\n  const [preview, setPreview] = useState('form show');\n  const [currentJobView, setCurrenetJobView]=useState(null);\n  const [form,setForm] = useState(defaultForm);\n  const [errorMessage, setErrorMessage]= useState(null);\n  const [file,setFile] = useState<File>();\n  const [ formStatus, setFormStatus ] = useState('Submit');\n\n  const handleLogo=async(file: File)=>{\n    setFile(file);\n    const s3=new ReactS3Client(s3Config);\n    try{\n      let res=await s3.uploadFile(file);\n      updateForm('company.logo',res.location);\n    }\n    catch(e){\n      window.alert('error in uploading logo connect to internet');\n      updateForm('company.logo','xyz.jpg');\n    }\n  };\n  const updateForm = (field: string, value: any) => {\n    if(field === 'Logo'){\n      handleLogo(value);\n      return;\n    }\n    setForm((prevForm) => {\n      const [section, subfield] = field.split('.');\n      if (section === 'qualifications' || section === 'duties') {\n        return {\n          ...prevForm,\n          [section]: value,\n        };\n      }\n      if (section === 'discipline') {\n        return {\n          ...prevForm,\n          [section]: value.map((discipline: string) => discipline.trim()),\n        };\n      }\n      return {\n        ...prevForm,\n        [section]: {\n          ...prevForm[section],\n          [subfield]: value\n        },\n      };\n    });\n  };\n\n\n\n\n  const showPreview = (jobView:FormData) =>{\n    setCurrenetJobView(jobView);\n  };\n\n  const disablePreview = () =>{\n    setCurrenetJobView(null);\n    setPreview('form show');\n  };\n\n  const previewBtnHandler = (e:any) =>{\n    e.preventDefault();\n    let jobView;\n    if((jobView=validate(form))){\n      setPreview('form hide');\n      showPreview(jobView);\n    }else{\n      setErrorMessage('Mandatory fields are missing ...');\n      setTimeout(() => {\n        setErrorMessage('');\n      }, 2000);\n    }\n  };\n  const onSubmit=async(event:any)=>{\n    event.preventDefault();\n    setFormStatus('Submitting...');\n    if(!!validate(form)){\n      const res = await payment({form,product});\n      if(res.status==200){\n        setFormStatus('Submit');\n        window.location.replace(res.data.url);\n      }else{\n        setErrorMessage(res.data.message);\n      }\n    }else{\n      setErrorMessage('Mandatory fields are missing ...');\n    }\n    setFormStatus('Submit');\n    setTimeout(() => {\n      setErrorMessage('');\n    }, 2000);\n  };\n  if(!product){\n    history.push('/postjobs');\n    return ;\n  }\n  return (\n    <ErrorBoundary>\n      {currentJobView && <JobDetails key={currentJobView.job.title} jobd={currentJobView} jobClick={null} disablePreview={disablePreview} isHome={false} />}\n      <form className={preview} onSubmit={onSubmit}>\n        <div className=\"superSection\">\n          <div className=\"sections\">\n            <div className=\"upside\">\n              <div className=\"headTitle\">Post A Job </div>\n            </div>\n          </div>\n          <div className=\"sections\">\n            <JobTitleSection updateForm={updateForm}  />\n            <CompanyDetailsSection updateForm={updateForm}  />\n          </div>\n          <div className=\"sections\">\n            <CompanyLocationSection updateForm={updateForm} />\n            <JobDates updateForm={updateForm}  />\n          </div>\n          <div className=\"sections\">\n            <QualificationsSection updateForm={updateForm} />\n            <DutiesSection updateForm={updateForm} />\n          </div>\n          <div className=\"sections\">\n            <SalarySection updateForm={updateForm}  />\n            <SubmitSection updateForm={updateForm}  />\n          </div>\n        </div>\n        <div className=\"sections\">\n          <div className=\"downside\">\n            <p className=\"errorMessage\">{errorMessage}</p>\n          </div>\n          <div className=\"downside\">\n            <button type=\"button\" onClick={previewBtnHandler} className=\"btnstyle\" >Preview</button>\n            <button type=\"submit\" className=\"btnstyle\" >{formStatus}</button>\n          </div>\n        </div>\n      </form>\n    </ErrorBoundary>\n  );\n};\n\nexport default Form;\n","import { REACT_BACKEND_URL } from '../../config';\nimport axios from 'axios';\nconst instance = axios.create({\n  withCredentials: true,\n});\ninterface SignUpProps{\n  body: {\n    username: string;\n    email: string;\n    password: string;\n  }\n}\n\nexport const signup = async ( props: SignUpProps ) => {\n  const { body } = props;\n  try {\n    const response = await instance.post(`${REACT_BACKEND_URL}/v1/user/signup`,body);\n    return response;\n  } catch ( error ){\n    return error.response;\n  }\n};\n\ninterface LoginProps{\n  body: {\n    email: string;\n    password: string;\n  }\n}\nexport const login = async ( props: LoginProps ) => {\n  const { body } = props;\n  try {\n    const response = await instance.post(`${REACT_BACKEND_URL}/v1/user/login`,body);\n    return response;\n  } catch ( error ){\n    return error.response;\n  }\n};\nexport const logout = async ( ) => {\n  try {\n    const response = await instance.post(`${REACT_BACKEND_URL}/v1/user/logout`);\n    return response;\n  } catch ( error ){\n    return error.response;\n  }\n};\n","import React, { useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../HomePage/HomePage';\nimport { signup } from '../../services/Authentication';\nimport './auth.scss';\n\nfunction Signup() {\n\n  const { state, dispatch } = useContext(UserContext);\n  const [username, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [ logging, setLogging ] = useState(false);\n\n  const History = useHistory();\n\n  const handleLogging = (status:boolean) =>{\n    setLogging(status);\n  };\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault(event);\n    handleLogging(true);\n    const body={\n      username: username,\n      email: email,\n      password: password,\n    };\n    const res = await signup({ body });\n    if(res.status === 201){\n      window.alert('successful SignUp');\n      History.push('/profile');\n    }else{\n      setError(res.data.message);\n    }\n    handleLogging(false);\n  };\n  if(state.user){\n    History.push('/profile');\n    return ;\n  }\n  if(state.isAdmin){\n    History.push('/dashboard');\n    return ;\n  }\n  return (\n    <div className=\"container-auth\">\n      <form onSubmit={handleSubmit} method=\"POST\">\n        <h2>SIGN UP</h2>\n        <label>Username</label>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <label>Email</label>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          required\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <label>Password</label>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        {error && <div className=\"error\">{error}</div>}\n        <div className=\"btn\">\n          <button type=\"submit\" className={logging?'btnLogging':''}>{logging?'Signing in':'Signup'}</button>\n        </div>\n\n        <p>already have an account?{' '}<Link to=\"/login\" className=\"Link\">Login</Link></p>\n      </form>\n    </div>\n  );\n}\nexport default Signup;\n","import React, { useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport { login } from '../../services/Authentication';\nimport './auth.scss';\nimport { UserContext } from '../HomePage/HomePage';\n\nfunction Login() {\n  const { state, dispatch } = useContext(UserContext);\n  const [ logging, setLogging ] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [ authCookie, setAuthCookie, removeAuthCookie] = useCookies([]);\n\n  const History = useHistory();\n  const handleLogging = (status:boolean) => {\n    setLogging(status);\n  };\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    handleLogging(true);\n    const body={\n      email:email,\n      password:password\n    };\n    const res = await login({body});\n    console.log(res);\n    if(res.status===200){\n      if(res.data.isAdmin){\n        dispatch({ type: 'ADMIN', payload: true});\n      }else{\n        dispatch({ type: 'USER', payload: true});\n      }\n      if(res.data.isAdmin){\n        setAuthCookie('isAdmin',true);\n      }\n      setAuthCookie('SESSION',res.data.token);\n      History.push('/profile');\n    }else{\n      setError(res.data.message);\n    }\n    handleLogging(false);\n  };\n  if(state.user){\n    History.push('/profile');\n    return ;\n  }\n  if(state.isAdmin){\n    History.push('/dashboard');\n    return ;\n  }\n  return (\n    <div className=\"container-auth\">\n      <form onSubmit={handleSubmit} method=\"POST\">\n        <h2>LOGIN</h2>\n        <label>Email</label>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          required\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <label>Password</label>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          required\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        {error && <div className=\"error\">{error}</div>}\n        <div className=\"btn\">\n          <button type=\"submit\" className={logging?'btnLogging':''}>{logging?'Logging in':'Login'}</button>\n        </div>\n\n        <p>Dont have an account?{' '}<Link to=\"/signup\" className=\"Link\">Sign up</Link></p>\n      </form>\n    </div>\n  );\n}\nexport default Login;\n","import React, { useContext } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from '../HomePage/HomePage';\nimport { logout } from '../../services/Authentication';\nimport './auth.scss';\n\nfunction Logout() {\n  const { dispatch } = useContext(UserContext);\n  const [ authCookie, setAuthCookie, removeAuthCookie] = useCookies([]);\n  const history = useHistory();\n\n  const handleLogout = async  () => {\n    await logout();\n    dispatch({ type: 'USER', payload: false });\n    dispatch({ type: 'ADMIN', payload: false });\n    removeAuthCookie('isAdmin');\n    removeAuthCookie('SESSION');\n    history.push('/login');\n  };\n\n  return (\n    <div className=\"logoutContainer\">\n      <p>Are you sure you want to log out?</p>\n      <button onClick={handleLogout} className=\"logoutButton\">Logout</button>\n    </div>\n  );\n}\n\nexport default Logout;\n","import React , { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from '../HomePage/HomePage';\nimport  ProductSelectionPage  from '../ProductSelectionPage/ProductSelectionPage';\nimport { ErrorBoundary, Message } from '../../components';\nimport './userProfile.scss';\n\nconst Profile = ()=>{\n\n  const { state } = useContext(UserContext);\n  const history = useHistory();\n  if(!state.user){\n    history.push('/login');\n    return ;\n  }\n  return(\n    <ErrorBoundary>\n      <div className=\"userProfile\">\n        <ProductSelectionPage />\n      </div>\n    </ErrorBoundary>\n  );\n};\nexport default Profile;\n","import React, { useContext,useState } from 'react';\nimport  { Job }  from '../../components/DataModels/Job';\nimport JobFeed from '../Home/JobFeed';\nimport {fetchJobsByAdmin} from '../../services/Jobs';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\ninterface Props{\n  openJob: (job:Job)=> void;\n}\nconst PendingJobs = (props:Props)=> {\n\n  const { openJob } = props;\n\n  const [jobs, setJobs] = React.useState<Job[]>([]);\n  const [view,setView]= useState('hide');\n  const [hasMoreJobs,setHasMoreJobs]=React.useState(true);\n  const [page,setPage]=React.useState(0);\n  const fetchPendingJobs = async (page:number) => {\n    const res = await fetchJobsByAdmin(page);\n    if(res.data.length===0){\n      setHasMoreJobs(false);\n      return ;\n    }\n    if(res){\n      openJob(res.data[0]);\n      setJobs([...jobs,...res.data]);\n    }\n  };\n  React.useEffect(() => {\n    fetchPendingJobs(page);\n  }, [page]);\n  return (\n    <div className={view==='hide'?'show':window.screen.width>900?'show':'hide'}>\n      <InfiniteScroll\n        next={()=>setPage(jobs.length)}\n        hasMore={hasMoreJobs}\n        dataLength={jobs.length}\n        loader={<h4>Loading.....</h4>}\n      >\n        { jobs.map((element:Job)=>(\n          <JobFeed key={element._id} jobd={element} jobClick={()=>openJob(element)} />\n        )) }\n      </InfiniteScroll>\n      {!hasMoreJobs && <h4 className='endingMessage'>We have these jobs only...</h4>}\n    </div>\n  );\n};\n\nexport default PendingJobs;\n","import React, { useContext,useState } from 'react';\nimport './Admin.scss';\nimport  { Job }  from '../../components/DataModels/Job';\nimport JobFeed from '../Home/JobFeed';\nimport { getRejectedJobs } from '../../services/Jobs';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\ninterface Props{\n  openJob: (job:Job)=> void;\n}\nconst RejectedJobs = (props:Props) => {\n\n  const { openJob } = props;\n\n  const [jobs, setJobs] = React.useState<Job[]>([]);\n  const [view,setView]= useState('hide');\n  const [hasMoreJobs,setHasMoreJobs]=React.useState(true);\n  const [page,setPage]=React.useState(0);\n\n  const fetchRejectedJobs = async (page:number) => {\n    const res = await getRejectedJobs(page);\n    if(res.data.length===0){\n      setHasMoreJobs(false);\n      return ;\n    }\n    if(res){\n      openJob(res.data[0]);\n      setJobs([...jobs,...res.data]);\n    }\n  };\n  React.useEffect(() => {\n    fetchRejectedJobs(page);\n  }, [page]);\n  return (\n    <div className={view==='hide'?'show':window.screen.width>900?'show':'hide'}>\n      <InfiniteScroll\n        next={()=>setPage(jobs.length)}\n        hasMore={hasMoreJobs}\n        dataLength={jobs.length}\n        loader={<h4>Loading.....</h4>}\n      >\n        { jobs.map((element:Job)=>(\n          <JobFeed key={element._id} jobd={element} jobClick={()=>openJob(element)} />\n        )) }\n      </InfiniteScroll>\n      {!hasMoreJobs && <h4 className='endingMessage'>We have these jobs only...</h4>}\n    </div>\n  );\n};\n\nexport default RejectedJobs;\n","import React, { useState } from 'react';\nimport { getProducts } from '../../services/Products';\nimport { EditableProduct } from '../../components';\nimport ProductData from '../../components/DataModels/ProductData';\nimport './Products.scss';\n\nconst Products = () => {\n\n  const [ products, setProducts] = useState([]);\n  const [ loading, setLoading ] = useState(false);\n  const updateLoading = (flag:boolean) => {\n    setLoading(flag);\n  };\n  const fetchProducts = async () => {\n    const res = await getProducts();\n    if(res.status===200){\n      setProducts(res.data);\n    }\n  }; \n  React.useEffect(()=>{\n    fetchProducts();\n  },[]);\n  \n  return (\n    <div className=\"products\">\n      <div className=\"content\">\n        { products &&\n            products.map(( product:ProductData ) => (\n              <EditableProduct key={product.type} product={ product } loading={loading} updateLoading={updateLoading}  />\n            ))\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Products;","import React, { useContext,useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport './Admin.scss';\nimport  { Job }  from '../../components/DataModels/Job';\nimport JobDetails from '../Home/JobDetails';\nimport { UserContext } from '../HomePage/HomePage';\nimport { setStatusReject,setStatusApprove } from '../../services/Jobs';\nimport PendingJobs from './PendingJobs';\nimport RejectedJobs from './RejectedJobs';\nimport Products from './Products';\n\nconst Admin = () => {\n\n  const { state, dispatch } = useContext(UserContext);\n  const [ tabCookie,setTabCookie,removeTabCookie ] = useCookies();\n  const history = useHistory();\n  const [ tab, setTab] = useState('');\n  const [currentJob,setCurrentJob]= useState(null);\n  const [ jobStatus,setJobStatus] = useState('');\n  React.useEffect(() => {\n    if(tabCookie.status){\n      setTab(tabCookie.status);\n      return ;\n    }\n    setTab('Pending');\n    setTabCookie('status','Pending');\n  }, []);\n  const jobClick=(job:Job)=>{\n    setCurrentJob(job);\n  };\n  const handleApprove = async  (job: Job)=>{\n    const id = job._id;\n    const res = await setStatusApprove({id});\n    if(res){\n      window.location.reload();\n      return ;\n    }\n  };\n\n  const handleReject = async (job: Job)=>{\n    const id = job._id;\n    const res = await setStatusReject({id});\n    if(res){\n      window.location.reload();\n      return ;\n    }\n  };\n  if(!state.isAdmin){\n    history.push('/login');\n  }\n  return (\n    <div className=\"adminDashboard\">\n      <div className='listItems'>\n        <h1>Admin Options</h1>\n        <ul>\n          <li \n            className={tab==='Pending' && 'active'}\n            onClick={()=>setTab(()=>{\n              jobClick(null);\n              setTabCookie('status','Pending');\n              return 'Pending';\n            })}\n          >Pending</li>\n          <li \n            className={tab==='Rejected' && 'active'}\n            onClick={()=>setTab(()=>{\n              jobClick(null);\n              setTabCookie('status','Rejected');\n              return 'Rejected';\n            })}\n          >Rejected</li>\n          <li \n            className={tab==='Products' && 'active'}\n            onClick={()=>setTab(()=>{\n              jobClick(null);\n              setTabCookie('status','Products');\n              return 'Products';\n            })}\n          >Products</li>\n        </ul>\n      </div>\n      \n      <div className=\"down\">\n        {tab==='Pending' && <PendingJobs openJob={jobClick}/>}\n        {tab==='Rejected' && <RejectedJobs openJob={jobClick}/>}\n        {tab==='Products' && <Products />}\n        {currentJob &&\n        <div className='show'>\n          <div className=\"onejob\">\n            <JobDetails key={currentJob._id} jobd={currentJob} jobClick={jobClick} disablePreview={null} isHome={true}  isAdmin={true}>\n              <div className=\"controls\">\n                <h3 className=\"status\">Status of Job:{jobStatus?jobStatus:currentJob.status}</h3>\n                <div className=\"footer\">\n                  <div className='containerSpecial'>\n                    {currentJob.status ==='Pending' &&\n                      <button\n                        className=\"reject-btn\"\n                        onClick={()=>handleReject(currentJob)}>\n                        {'Reject'}\n                      </button>\n                    }\n                    <button \n                      className=\"accept-btn\" \n                      onClick={()=>handleApprove(currentJob)}>\n                      {'Approve'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </JobDetails>\n          </div>\n        </div>}\n      </div>\n    </div>\n\n  );\n};\n\nexport default Admin;\n","import React from 'react';\nimport JobDetails from '../Home/JobDetails';\nimport JobFeed from '../Home/JobFeed';\nimport { getJobByUser } from '../../services/Jobs';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Job } from '../../components/DataModels/Job';\n\nconst User=()=>{\n  const [jobs,setJobs]=React.useState([]);\n  const [currentJob,setCurrentJob]= React.useState(null);\n  const [view,setView]= React.useState('hide');\n  const [page,setPage]=React.useState(0);\n  const [hasMoreJobs,setHasMoreJobs]=React.useState(true);\n  const jobClick=(job: Job,currentView:string)=>{\n    setView(currentView);\n    setCurrentJob(job);\n  };\n  React.useEffect(()=>{\n    const fetchData=async(page:Number) => {\n      const res = await getJobByUser(page);\n      if(res.data.length==0){\n        setHasMoreJobs(false);\n        return;\n      }\n      if(res){\n        setJobs([...jobs,...res.data]);\n      }\n      \n    };\n    fetchData(page);\n\n  },[]);\n  \n  return(\n    <div>\n      <div className=\"contentbox\">\n        <div className=\"top\">\n          History of Jobs you posted\n        </div>\n        <div className=\"down\">\n          <div className={view==='hide'?'show':window.screen.width>900?'show':'hide'}>\n            <InfiniteScroll\n              hasMore={hasMoreJobs}\n              next={()=>setPage(jobs.length)}\n              dataLength={jobs.length}\n              loader={<h4>Loading......</h4>}\n            >\n              { jobs.map((element: Job)=>(\n                <JobFeed key={element._id} jobd={element} jobClick={jobClick} />\n              )) }\n            </InfiniteScroll>\n          </div>\n          <div className={view}>\n            {currentJob && <JobDetails key={currentJob._id} jobd={currentJob} jobClick={jobClick} disablePreview={null} isHome={true}  />}\n          </div>\n        </div>\n      </div>\n      {!hasMoreJobs && <h4>No more jobs....</h4>}\n    </div>\n  );\n};\nexport default User;","import React, { useState } from 'react';\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\nimport './DropDown.scss';\ninterface Props{\n  values:string[],\n  name: string,\n  selected: string[],\n  updateArray: (field:string,value:string[])=>void,\n  updateSearchContents: (field:string,value:string|number|string[])=> void,\n\n}\nexport const DropDown = (props:Props) => {\n\n  const { values, name, selected, updateArray, updateSearchContents } = props;\n  console.log(name,selected);\n\n  const [ rotation, setRotation ] = useState('rotateup');\n  const [ dropDownValues, setDropDownValues] = useState(selected);\n\n\n  const capitalizeFirstLetter = (str:string) =>{\n    return str.charAt(0).toUpperCase()+str.slice(1);\n  };\n  const dropDownName = capitalizeFirstLetter(name);\n\n  const openCloseFields = () => {\n    setRotation((updatedRotation)=>{\n      if(rotation==='rotatedown'){\n        return 'rotateup';\n      }\n      return 'rotatedown';\n    });\n  };\n  const updateDropDown = (e:any)=>{\n    const { id, checked } = e.target;\n    console.log('dd',dropDownValues);\n    const newDropDownValues = dropDownValues.filter((dropDownValue)=> dropDownValue!=id);\n    console.log('up',newDropDownValues);\n    if(checked) newDropDownValues.push(id);\n    setDropDownValues((updatedDropDownValues)=>{\n      updateArray(name,newDropDownValues);\n      updateSearchContents(name,newDropDownValues);\n      return newDropDownValues;\n    });\n  };\n\n  return (\n    <div className='selectFields'>\n      <div className=\"pair\">\n        <FA className={rotation} icon={faPlay} onClick={openCloseFields} />\n        <label className='box'> {dropDownName} </label>\n      </div>\n      <div className={rotation==='rotatedown'?'fields show':'fields hide'}>\n        {\n          values.map((value:string)=>(\n            <div className=\"pair\" key={value}>\n              <input type=\"checkbox\" name={value} id={value} onChange={updateDropDown} checked={selected && selected.some((element)=> element===value)}  />\n              <label htmlFor={value}>{value}</label>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { RootState } from '../configureStore';\nimport { SearchStatus } from './reducer';\n\nexport const selectSearch:(state:RootState)=>SearchStatus = createSelector(\n  (state: RootState) => state.search,\n  (state)=>state,\n);\n","import {\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport { SearchData } from '../../components/DataModels/SearchData';\n\nexport type SearchStatus = {\n  status?: SearchData,\n}\nconst initialStatus:SearchData = {\n  jobTitle: '',\n  location: '',\n  salary: 100,\n  discipline: [],\n  country: [],\n  sector: [],\n};\nconst retriviewStatus = localStorage.getItem('search')?JSON.parse(localStorage.getItem('search')):initialStatus;\nexport const initialSearch: SearchStatus = {\n  status:retriviewStatus,\n};\nconst searchSlice = createSlice({\n  name: 'search',\n  initialState: initialSearch,\n  reducers: {\n    updateSearch: (state, action: PayloadAction<SearchStatus>) => {\n      state.status = action.payload.status; \n      localStorage.setItem('search',JSON.stringify(action.payload.status));\n    },\n  },\n});\n\nconst { reducer } = searchSlice;\n\nexport const { updateSearch } = searchSlice.actions;\n\nexport default reducer;\n","import React, { useState } from 'react';\nimport './SearchPage.scss';\nimport { Highlights } from '../../components';\nimport { SearchData } from '../../components/DataModels/SearchData';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Job } from '../../components/DataModels/Job';\nimport { fetchJobs, getSearchJobs } from '../../services/Jobs';\nimport JobFeed from '../Home/JobFeed';\nimport { DropDown } from './SeachUtils/DropDown';\nimport { selectSearch } from '../../store/SearchContent/selector';\nimport { updateSearch } from '../../store/SearchContent/reducer';\nimport { RootState } from '../../store/configureStore';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nconst  defaultSearch:SearchData= {\n  jobTitle:'',\n  location:'',\n  salary:100,\n  discipline:[],\n  country:[],\n  sector:[],\n};\n\nconst SearchPage = () => {\n  \n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const searchStatus= useSelector((state:RootState)=>{\n    return selectSearch(state);\n  });\n  const [ search , setSearch ] = useState(()=>{\n    console.log('ss',searchStatus.status);\n    if(location.state){\n      const { jobTitle, locationValue } = location.state;\n      if(jobTitle || locationValue){\n        defaultSearch.jobTitle= jobTitle,\n        defaultSearch.location = locationValue;\n        return defaultSearch;\n      }\n    }\n    return searchStatus.status;\n  });\n  const [discipline, setDicipline] = useState(()=>searchStatus.status.discipline);\n  const [sector, setSector] = useState(()=>searchStatus.status.sector);\n  const [country, setCountry] = useState(()=>searchStatus.status.country);\n\n  const [jobs,setJobs]=React.useState([]);\n  const [checkHasMore,setCheckHasMore] = useState(true);\n  const [ page, setPage ] = useState(0);\n  const disciplines = ['Life Sciences', 'Physics', 'Biomedicine','Health Sciences','Engineering','Chemistry','Computer Science','Applied Science','Nanotechnology','Earth Sciences','Environmental','Sciences','Veterinary','Fisheries','Agriculture','Forestry'];\n  const sectors = ['Academia','Industry','Government','Healthcare/Hospital','Non-Profit','Media/Communications'];\n  const countries = ['North America','Europe','Asia','South America','Asia Pacific','Australia','Middle East','Oceania','Working from home'];\n  const fetchData=async(page:number)=>{\n    const res = await fetchJobs(page);\n    if(res.data.length==0){\n      setCheckHasMore(false);\n      return ;\n    }\n    if(res){\n      const newJobs = res.data;\n      setJobs([...jobs,...newJobs]);\n    }\n  };\n  const calculateSalary = (sal:any)=>{\n    const salary = 100-sal;\n    return (salary*400);\n  };\n  React.useEffect(()=>{\n    fetchData(page);\n  },[page]);\n  const updateArray = (field:string,value:string[])=>{\n    if(field==='discipline'){\n      setDicipline(value);\n      return ;\n    }\n    if(field==='sector'){\n      setSector(value);\n      return ;\n    }\n    setCountry(value);\n  };\n  const updateSearchContents = ( field:string,value:string|number|string[]) => {\n    if(typeof(value)==='string'){\n      value= value.trim();\n    }\n    console.log(search.discipline);\n    setSearch((prevSearch)=>{\n      const updatedSearch = {\n        ...search,\n        [field]:value,\n      };\n      dispatch(updateSearch({status:updatedSearch}));\n      return {\n        ...prevSearch,\n        [field]: value,\n      };\n    });\n  };\n  const onSubmit = async (e:any )=>{\n    e.preventDefault();\n    const searchJobs = await getSearchJobs(search,page);\n    console.log(searchJobs);\n    if(!searchJobs || searchJobs.data.length===0){\n      setCheckHasMore(false);\n      setJobs([]);\n      return ;\n    }\n    setJobs(searchJobs.data);\n    return ;\n  };\n  const resetForm = ()=>{\n    localStorage.removeItem('search');\n    setSearch(defaultSearch);\n  };\n  return (\n    <div className=\"viewBox\">\n      <Highlights />\n      <div className=\"jobsCount\">\n        <h1>Found 59 Jobs that matches your search</h1>\n      </div>\n      <div className=\"search\">\n        <div className=\"searchFields\">\n          <form onSubmit={onSubmit} >\n            <div className='inputContent'>\n              <label> Job Title </label>\n              <input \n                type=\"text\"  \n                placeholder='eg:Research Scientist' \n                onChange={(e)=>updateSearchContents('jobTitle',e.target.value)}\n                value={search.jobTitle}\n              />\n            </div>\n            <div className='inputContent'>\n              <label> Location </label>\n              <input \n                type=\"text\" \n                placeholder='eg:Bangloor'\n                onChange={(e)=>updateSearchContents('location',e.target.value)}\n                value={search.location}\n              />\n            </div>\n            <div className='inputContent'>\n              <label> Atleast Salary </label>\n              <input type=\"range\" onChange={(e)=>{\n                const sal = calculateSalary(e.target.value);\n                updateSearchContents('salary',sal);\n                \n              }} value={100-search.salary/400} />\n              <label className='flex space-around text-small'>\n                <span>2K</span>\n                <span>5K</span>\n                <span>10K</span>\n                <span>20K</span>\n                <span>40K</span>\n              </label>\n            </div>\n            <DropDown values={disciplines} name={'discipline'} updateSearchContents={updateSearchContents} selected={discipline} updateArray={updateArray} />\n            <DropDown values={sectors} name={'sector'} updateSearchContents={updateSearchContents} selected={sector} updateArray={updateArray} />\n            <DropDown values={countries} name={'country'} updateSearchContents={updateSearchContents}selected={country} updateArray={updateArray} />\n            <div className='btnFlex'>\n              <input type=\"submit\"  value='Clear' onClick={resetForm} />\n              <input type=\"submit\"  value='Search' />\n            </div>\n          </form>\n        </div>\n        <div className=\"searchContent\">\n          <InfiniteScroll\n            dataLength={jobs.length}\n            hasMore={checkHasMore}\n            next={()=>setPage(jobs.length)}\n            loader={<h4>Loading...</h4>}\n          >\n            { \n              jobs.map((element:Job)=>(\n                <JobFeed key={element._id} jobd={element} jobClick={null}  viewBtn={true} />\n              )) \n            }\n          </InfiniteScroll>\n          {!checkHasMore && <h4 className='endingMessage'>No Jobs Found</h4>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPage;","import React, { useState } from 'react';\nimport JobDetails from '../../Home/JobDetails';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getJobById } from '../../../services/Jobs';\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome';\nimport { faArrowLeftLong } from '@fortawesome/free-solid-svg-icons';\nimport './FullJobView.scss';\n\nexport const FullJobView = () => {\n\n  const { jobId } = useParams();\n  const history = useHistory();\n  const [ error, setError ] = useState('');\n  const [ job, setJob ] = useState(null);\n  const [ loading, setLoading] = useState(true);\n \n  const getJob = async (jobId:string)=>{\n    const res = await getJobById(jobId);\n    if(!res){\n      setError('Something went wrong');\n      return ;\n    }\n    if(res.status!=200){\n      setError(res.data.message);\n      return ;\n    }\n    setLoading(false);\n    setJob(res.data);\n  };\n  const goBack = ()=>{\n    history.push('/search');\n    return ;\n  };\n  React.useEffect(()=>{\n    getJob(jobId);\n  },[jobId]);\n  return (\n    <div className='searchedJob'>\n      <div className=\"topElements\">\n        <div className='backArrow' onClick={goBack}><FA icon={faArrowLeftLong} />Back </div>\n        <div className='errorBox'></div>\n      </div>\n      <div className='job'>\n        { job && <JobDetails key={job._id} jobd={job} jobClick={null} disablePreview={null} isHome={false} />}\n        <div className='errorBox'>{error}</div>\n        {loading && <div>Loading...</div>}\n      </div>\n    </div>\n  );\n};","export const initialState = {\n  isAdmin: false,\n  user: false\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n  case 'USER':\n    return {\n      ...state,\n      user: action.payload\n    };\n  case 'ADMIN':\n    return {\n      ...state,\n      isAdmin: action.payload\n    };\n  default:\n    return state;\n  }\n};\n","import React,{useState, createContext , useReducer} from 'react';\nimport { useCookies } from 'react-cookie';\nimport { ErrorBoundary,NavBar, PaymentSuccess, PaymentCancel } from '../../components';\nimport {HashRouter as Router,Switch,Route,Link} from 'react-router-dom';\nimport {User,Home,PostJobs,Form,ContactUs,ProductSelectionPage,BillingPage,Login,Logout,Signup,Profile,Admin,SearchPage} from '../../pages';\nimport { FullJobView } from '../SearchPage/SeachUtils/FullJobView';\nimport { initialState, reducer } from '../../Reducer/userReducer';\nexport const UserContext = createContext(null);\nconst HomePage = () => {\n  const [ authCookie, setAuthCookie, removeAuthCookie] = useCookies([]);\n  if(authCookie.SESSION){\n    if(authCookie.isAdmin){\n      initialState.isAdmin=true;\n    }else{\n      initialState.user=true;\n    }\n  }\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <Router>\n      <div>\n        <UserContext.Provider value={{ state, dispatch }}>\n          <ErrorBoundary>\n            <NavBar/>\n            <Switch>\n              <Route exact path='/' ><Home/></Route>\n              <Route  path='/home' ><Home/></Route>\n              <Route  path='/postjobs'><PostJobs /></Route>\n              <Route  path='/contactus'><ContactUs/></Route>\n              <Route path='/postajob' ><Form /></Route>\n              <Route path='/login' ><Login /></Route>\n              <Route path='/signup' ><Signup /></Route>\n              <Route path='/logout' ><Logout /></Route>\n              <Route path='/profile' ><Profile/></Route>\n              <Route path='/dashboard'><Admin /></Route>\n              <Route path='/userdashboard'><User/></Route>\n              <Route path='/success' ><PaymentSuccess /></Route>\n              <Route path='/cancel' ><PaymentCancel /></Route>\n              <Route path='/search' ><SearchPage /></Route>\n              <Route path='/job/:jobId' ><FullJobView /></Route>\n            </Switch>\n          </ErrorBoundary>\n        </UserContext.Provider>\n      </div>\n    </Router>\n  );\n};\n\nexport default HomePage;\n","import React, { useState ,useContext } from 'react';\nimport './NavBar.scss';\nimport Logo from './../images/logo.png';\nimport {NavLink} from 'react-router-dom';\nimport Flex from './../Flex/Flex';\nimport { UserContext } from '../../pages/HomePage/HomePage';\nconst NavBar = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const [profilePopUp,setProfilePopUp] = useState('hide');\n  const handleProfilePopUp=()=>{\n    setProfilePopUp((updatedProfilePopUp)=>{\n      return profilePopUp==='show'?'hide':'show';\n    });\n  };\n  const RenderMenu = () =>{\n    if(state.user){\n      return(\n        <>\n          <li ><NavLink to=\"/postjobs\">Post a Job</NavLink></li>\n          <li ><NavLink to=\"/contactus\">Contact Us</NavLink></li>\n          <ul className='profileList'>\n            <li onClick={handleProfilePopUp}>Profile</li>\n            <li>\n              <div className={'profilePop '+profilePopUp}>\n                <NavLink to=\"/profile\">Account</NavLink>\n                <NavLink to=\"/userdashboard\">Dashboard</NavLink>\n                <NavLink to=\"/logout\">Logout</NavLink>\n              </div>\n            </li>\n          </ul>\n        </>\n      );\n    }\n    if(state.isAdmin){\n      return(\n        <>\n          <li ><NavLink to=\"/postjobs\">Post a Job</NavLink></li>\n          <ul >\n            <li><NavLink to=\"/dashboard\">Dashboard</NavLink></li>\n            <li><NavLink to=\"/logout\">Logout</NavLink></li>\n          </ul>\n        </>\n      );\n    }\n    else{\n      return(\n        <>\n          <li ><NavLink to=\"/contactus\">Contact Us</NavLink></li>\n          <ul>\n            <li><NavLink to=\"/signup\">Signup</NavLink></li>\n            <li><NavLink to=\"/login\">Login</NavLink></li>\n          </ul>\n        </>\n      );\n    }\n  };\n\n  const [mobview,setMobview]= useState('invisible');\n  const onClick=()=>{\n    if(mobview==='visible'){\n      setMobview('invisible');\n    }else{\n      setMobview('visible');\n    }\n  };\n  return (\n    <nav className=\"navbar\">\n      <div className=\"main\">\n        <div className=\"header\">\n          <Flex>\n            <img className=\"img\" src={Logo} />\n            <h4>\n              <NavLink exact to=\"/\">\n                <span className=\"color-blue\">Shore</span>\n                <span className=\"color-yellow\">Birdie</span>\n              </NavLink>\n            </h4>\n          </Flex>\n        </div>\n        <div className=\"container\">\n          <div>\n            <ul>\n              <li ><NavLink exact to=\"/\" >Jobs</NavLink></li>\n              <RenderMenu />\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"mobview\">\n        <div className=\"container\">\n          <div className=\"header\">\n            <img className=\"img\" src={Logo} />\n            <h4 className=\"margin\">\n              <span className=\"color-blue\">Shore</span>\n              <span className=\"color-yellow\">Birdie</span>\n            </h4>\n            <button className=\"menubar\" onClick={onClick}>\n              <span ></span>\n              <span ></span>\n              <span ></span>\n            </button>\n          </div>\n          <div className={'options '+mobview}>\n            <ul onClick={()=> setMobview('invisible')}>\n              <ul>\n                <li ><NavLink exact to=\"/\" >Jobs</NavLink></li>\n                <RenderMenu />\n              </ul>\n            </ul>\n          </div >\n        </div>\n      </div>\n    </nav>\n  );\n};\nexport default NavBar;\n","import React from 'react';\nimport './SearchBar.scss';\nimport { FontAwesomeIcon as Font } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\ninterface Job {\n    id: number;\n    name: string;\n}\ninterface Props{\n  data: Job[];\n  update: (value:string)=>void,\n  onJobSelect :(jobName: String)=> void;\n}\nconst Searchbar: React.FC<Props> = (props:Props) => {\n\n  const { data,onJobSelect, update } = props;\n  const [searchData, setSearchData] = React.useState('');\n  const [searchResult, setSearchResults] = React.useState([]);\n  const [selectData, setSelectData] = React.useState('');\n  const [isOpen, setIsOpen] = React.useState(true);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchData((updatedSearchData)=>{\n      update(event.target.value);\n      return event.target.value;\n    });\n    setIsOpen(true);\n  };\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const filteredData = data.filter((items) =>\n      items.name.toLowerCase().includes(searchData.toLowerCase())\n    );\n    setSearchResults(filteredData);\n  };\n  const handleClick = (value:string) => {\n    setSearchData((updatedSearchData)=>{\n      update(value);\n      return value;\n    });\n    setIsOpen(false);\n    onJobSelect(value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"searchInput\">\n          <input id=\"search\" type=\"search\" placeholder=\"Enter Job Title\" onChange={handleChange} value={searchData} />\n        </div>\n        {searchData.length > 0 && isOpen && (\n          <div className=\"searchResultLeft\">\n            {searchData.length > 0 && isOpen && data.filter((item) => item.name.toLowerCase().includes(searchData.toLowerCase()))\n              .map((item) => (\n                <div key={item.id} className=\"opt\">\n                  <option onClick={()=>handleClick(item.name)} value={item.name} id=\"options\" >\n                    {item.name}\n                  </option>\n                </div>\n              ))}\n          </div>\n        )}\n      </form>\n\n    </>\n  );\n};\nexport default Searchbar;\n","import React from 'react';\nimport './Location.scss';\ninterface city {\n    id: number;\n    name: string;\n    state: string;\n}\ninterface Props{\n  update: (value:string)=>void,\n}\n\nconst Location = (props:Props) => {\n\n  const { update } = props;\n  const [location, setLocation] = React.useState('');\n  const [cityData, setCityData] = React.useState([]);\n  const [searchResult, setSearchResult] = React.useState([]);\n  const [isOpen, setIsOpen] = React.useState(true);\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const filteredData = cityData.filter((items) =>\n      items.name.toLowerCase().includes(location.toLowerCase())\n    );\n    setSearchResult(filteredData);\n  };\n  React.useEffect(() => {\n    if (location) {\n      fetch('../../../public/cities.json')\n        .then((response) => response.json())\n        .then((data) => setCityData(data));\n    }\n  }, [location]);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLocation((updatedLocation)=>{\n      update(event.target.value);\n      return event.target.value;\n    });\n    setIsOpen(true);\n  };\n  const handleClick = (value:string) => {\n    setLocation((updatedLocation)=>{\n      update(value);\n      return value;\n    });\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"location\">\n          <input type=\"search\" value={location} onChange={handleChange} placeholder=\"Enter Location\" />\n        </div>\n        {location.length > 0 && isOpen && (\n          <div className=\"searchResultRight\">\n            {location.length > 0 && isOpen &&\n                      cityData.filter((item) => item.name.toLowerCase().includes(location.toLowerCase()))\n                        .map((item) => (\n                          <div key={item.id}>\n                            <option onClick={()=>handleClick(item.name)} value={item.name} id=\"options\">\n                              {item.name},{item.state}\n                            </option>\n                          </div>\n                        ))}\n          </div>\n        )}\n      </form>\n    </>\n  );\n};\n\nexport default Location;\n","import React from 'react';\nimport { ErrorBoundary } from '../../components';\nimport  ProductData  from '../DataModels/ProductData';\nimport {Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark , faCheck } from '@fortawesome/free-solid-svg-icons';\nimport './Product.scss';\ninterface Props{\n  product: ProductData,\n}\nconst Product = ( props: Props ) => {\n\n  const { product } = props;\n\n  return (\n    <ErrorBoundary>\n      <div className=\"col\">\n        <div className=\"heading\">{product.type}</div>\n        <h3 className=\"price\">\n          <small>$</small>\n          {product.amount===0?'FREE':product.amount}\n          <small>/{product.hostingTime} Days</small>\n        </h3>\n        {\n          product.offers.map((offer)=>(\n            <p key={offer.field}>{offer.field}\n              <span>\n                {\n                  offer.value?\n                    <span className=\"yes\">\n                      <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>\n                    </span>:\n                    <span className=\"no\">\n                      <FontAwesomeIcon icon={faXmark}></FontAwesomeIcon>\n                    </span>\n                }</span>\n            </p>\n          ))\n        }\n        <div className=\"btn\">\n          <Link className=\"submit\" to={{\n            pathname:'/postajob',\n            state: {product}\n          }}>\n              select\n          </Link>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\nexport default Product;","import React, { useState } from 'react';\nimport './ToggleSwitch.scss';\n\ninterface Props{\n  value: boolean,\n  offer: string,\n  onChange: (field:string,value:any)=>void,\n}\nexport const ToggleSwitch = (props:Props)=> {\n\n  const {  value,offer, onChange} = props;\n\n  const [ checked, setChecked ] =  useState(value);\n  const check = () => {\n    onChange(offer,!checked);\n    setChecked(!checked);\n  };\n  return (\n    <div className={checked?'toggle active':'toggle inactive' } onClick={check}>\n      <label className={checked?'circle Move':'circle'}>\n      </label>\n    </div>\n  );\n};","import React,{ useState } from 'react';\nimport { ErrorBoundary } from '../../components';\nimport  ProductData  from '../DataModels/ProductData';\nimport './Product.scss';\nimport { ToggleSwitch } from '../MessageBox/ToggleSwitch';\nimport { updateProduct } from '../../services/Products';\ninterface Props{\n  product: ProductData,\n  loading: boolean,\n  updateLoading: (flag:boolean)=> void,\n}\n\nconst EditableProduct = (props:Props) => {\n\n  const { product, loading, updateLoading } = props;\n  const [productForm , setProductForm ] = useState(product);\n  const [ rotateCard, setRotateCard ] =  useState(false);\n  const [ error , setError ] = useState('');\n  const [ status , setStatus ] = useState('save');\n\n  const submit   = async () =>{\n    if(loading) return ;\n    setRotateCard(true);\n    updateLoading(true);\n    const res = await updateProduct(productForm);\n    \n    setTimeout(() => {\n      setRotateCard(false);\n      if(res.status!=200) {\n        setError('Failed');\n      }else{\n        \n        setStatus('success');\n      }\n      updateLoading(false);\n    }, 2000);\n    setTimeout(() => {\n      setStatus('save');\n      setError('');\n    }, 4000);\n  };\n  const updateProductForm = (field:string,value:any)=>{\n    setProductForm((prevForm)=>{\n      return {\n        ...prevForm,\n        [field]:value\n      };\n    });\n    console.log(productForm);\n  };\n  const updateOffer = (field:string,value:boolean) => {\n    const newoffers = productForm.offers.filter((offer)=> {\n      if(offer.field!=field) return offer;\n      console.log(offer);\n      offer.value=value;\n      return offer;\n    });\n    setProductForm((prevForm)=>{\n      return{\n        ...prevForm,\n        ['offers']:newoffers,\n      };\n    });\n  };\n  \n  return (\n    <ErrorBoundary>\n      <div className={ rotateCard? 'col rotateCard':loading?'col setOpacity':'col'}>\n        <div className=\"heading\">{productForm.type}</div>\n        <div className=\"flexRow\">\n          <div className='flexColumn'>\n            <span><i>Amount</i></span>\n            <input className='inputBox' type=\"text\" value={productForm.amount}  onChange={(e)=>updateProductForm('amount',e.target.value)}/>\n          </div>\n          <div className='flexColumn'>\n            <span>Hosting Time </span>\n            <input className='inputBox' type=\"text\" value={productForm.hostingTime} onChange={(e)=>updateProductForm('hostingTime',e.target.value)}/>\n          </div>\n        </div>\n        {\n          productForm.offers.map((offer)=>(\n            <div className=\"flex\" key={offer.field}>\n              <p key={offer.field}>{offer.field}</p>\n              <div className='outerTab' >\n                <ToggleSwitch key={productForm.type+offer.field} offer={offer.field} value={offer.value} onChange={updateOffer} />\n              </div>\n            </div>\n          ))\n        }\n        <div className=\"btn\">\n          <button className={error?'failed':status} onClick={submit}>\n            {error?error:status}\n          </button>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default EditableProduct;","import React from 'react';\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport './PaymentStatus.scss';\n\nconst PaymentSuccess = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const search = new URLSearchParams(location.search);\n  const message = search.get('message');\n  const redirect = () =>{\n    history.push('/profile');\n    return;\n  };\n  setTimeout(()=>{\n    redirect();\n  },5000);\n  return (\n    <div className='paymentStatus'>\n      { message &&\n        <span className='icon success'>\n          <FA icon={faCheck} />\n        </span>\n      }\n      <h1>{ message }</h1>\n      <p>You will be redirected to home page shortly...</p>\n    </div>\n  );\n};\n\nexport default PaymentSuccess;","import React from 'react';\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome';\nimport { faXmark  } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport './PaymentStatus.scss';\n\nconst PaymentCancel = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const search = new URLSearchParams(location.search);\n  const message = search.get('message');\n  const redirect = () =>{\n    history.push('/profile');\n    return;\n  };\n  setTimeout(()=>{\n    redirect();\n  },5000);\n  return (\n    <div className='paymentStatus'>\n      { message && \n        <span className='icon cancel'>\n          <FA icon={faXmark} />\n        </span>\n      }\n      <h1>{ message }</h1>\n      <p>You will be redirected to home page shortly...</p>\n    </div>\n  );\n};\n\nexport default PaymentCancel;","import React from 'react';\nimport './Highlights.scss';\n\nconst Highlights = () => {\n  return (\n    <div className='highlights'>\n      <div className='item'>\n        <span className='text'>Medical Doctor</span>\n        <span className='count'>9</span>\n      </div>\n      <div className='item'>\n        <span className='text'>Lab Manager</span>\n        <span className='count'>19</span>\n      </div>\n      <div className='item'>\n        <span className='text'>Staff Scientist</span>\n        <span className='count'>102</span>\n      </div>\n      <div className='item'>\n        <span className='text'>Research Scientist</span>\n        <span className='count'>37</span>\n      </div>\n      <div className='item'>\n        <span className='text'>Technician</span>\n        <span className='count'>63</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Highlights;","import {\n  createSlice,\n  // createSelector,\n  PayloadAction,\n  // createAsyncThunk\n} from '@reduxjs/toolkit';\n\n// import { RootState, StoreDispatch, StoreGetState } from '../configureStore';\n\nexport type MapState = {\n    // ArcGIS Online Webmap Item Id\n    webmapId?: string;\n};\n\nexport const initialMapState: MapState = {\n  webmapId: '67372ff42cd145319639a99152b15bc3', // Topographic\n};\n\nconst slice = createSlice({\n  name: 'Map',\n  initialState: initialMapState,\n  reducers: {\n    webmapIdChanged: (state, action: PayloadAction<string>) => {\n      state.webmapId = action.payload;\n    },\n  },\n});\n\nconst { reducer } = slice;\n\nexport const { webmapIdChanged } = slice.actions;\n\nexport default reducer;\n","import {\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n\nexport type PaymentStatus = {\n    status?: boolean;\n};\n\nexport const initialPaymentStatus: PaymentStatus = {\n  status: false,\n};\n\nconst paymentSlice = createSlice({\n  name: 'payment',\n  initialState: initialPaymentStatus,\n  reducers: {\n    updatePaymentStatus: (state, action: PayloadAction<boolean>) => {\n      state.status = action.payload;\n    },\n  },\n});\n\nconst { reducer } = paymentSlice;\n\nexport const { updatePaymentStatus } = paymentSlice.actions;\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport Map from './Map/reducer';\nimport payment from './Payments/reducer';\nimport search from './SearchContent/reducer';\n\nexport default combineReducers({\n  Map,payment,search,\n});\n","import { PartialRootState } from './configureStore';\n\nimport { initialMapState, MapState } from '../store/Map/reducer';\nimport { initialPaymentStatus, PaymentStatus } from '../store/Payments/reducer';\nimport { initialSearch, SearchStatus } from '../store/SearchContent/reducer';\n\nconst getPreloadedMapState = (): MapState => {\n  return {\n    ...initialMapState,\n  };\n};\n\nconst getPreloadedPaymentStatus = (): PaymentStatus => {\n  return {\n    ...initialPaymentStatus,\n  };\n};\n\nconst getPreloadedSearchStatus = (): SearchStatus => {\n  return {\n    ...initialSearch,\n  };\n};\nconst getPreloadedState = (): PartialRootState => {\n  return {\n    Map: getPreloadedMapState(),\n    payment: getPreloadedPaymentStatus(),\n    search: getPreloadedSearchStatus(),\n  };\n};\n\nexport default getPreloadedState;\n","import {\n  configureStore,\n  DeepPartial,\n} from '@reduxjs/toolkit';\n\nimport rootReducer from './rootReducer';\n\nimport getPreloadedState from './getPreloadedState';\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport type PartialRootState = DeepPartial<RootState>;\n\nconst configureAppStore = (preloadedState: PartialRootState = {}) => {\n  const store = configureStore({\n    reducer: rootReducer,\n    preloadedState,\n  });\n\n  return store;\n};\n\nexport type StoreDispatch = ReturnType<typeof configureAppStore>['dispatch'];\n\nexport type StoreGetState = ReturnType<typeof configureAppStore>['getState'];\n\nexport { getPreloadedState };\n\nexport default configureAppStore;\n","import React, { useState, createContext } from 'react';\n\ntype AppContextValue = {\n    darkMode: boolean;\n};\n\ntype AppContextProviderProps = {\n    children?: React.ReactNode;\n};\n\nexport const AppContext = createContext<AppContextValue>(null);\n\nconst AppContextProvider: React.FC<AppContextProviderProps> = ({\n  children,\n}: AppContextProviderProps) => {\n  const [value, setValue] = useState<AppContextValue>({\n    darkMode: false,\n  });\n\n  const init = async () => {\n    // const contextValue: AppContextValue = {\n    //     darkMode: false\n    // };\n    // setValue(contextValue);\n  };\n\n  React.useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <AppContext.Provider value={value}>\n      {value ? children : null}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContextProvider;\n","import './styles/index.css';\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { ErrorBoundary } from './components';\nimport configureAppStore, { getPreloadedState } from './store/configureStore';\nimport AppContextProvider from './contexts/AppContextProvider';\nimport { HomePage } from './pages';\n\n(async () => {\n  const preloadedState = getPreloadedState();\n\n  const root = createRoot(document.getElementById('root'));\n\n  root.render(\n    <React.StrictMode>\n      <ReduxProvider store={configureAppStore(preloadedState)}>\n        <AppContextProvider>\n          <ErrorBoundary>\n            <HomePage />\n          </ErrorBoundary>\n        </AppContextProvider>\n      </ReduxProvider>\n    </React.StrictMode>\n  );\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkShoreBirdie\"] = self[\"webpackChunkShoreBirdie\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], function() { return __webpack_require__(21806); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","ErrorBoundary","props","state","error","errorInfo","this","setState","children","toString","PureComponent","className","det","p","jobd","viewBtn","history","useHistory","dayjs","relativeTime","postingDate","dates","format","onClick","jobClick","job","title","company","name","location","city","salary","sal","type","experience","companyType","icon","faClock","discipline","map","index","key","push","_id","details","imagePath","logo","isAdmin","contact","email","employeeWebsite","closing","closingDate","posting","src","to","country","isHome","disablePreview","hours","qualifications","qualification","id","value","duties","duty","window","replace","open","jobType","REACT_BACKEND_URL","process","instance","axios","withCredentials","fetchJobs","page","response","fetchJobsByAdmin","get","getJobByUser","getRejectedJobs","rejectedJobs","setStatusReject","put","status","setStatusApprove","post","fetchRecomendedJobs","getSearchJobs","search","searchContent","JSON","stringify","getJobById","jobId","shuffle","array","i","length","j","Math","floor","random","temp","useState","currentJob","setCurrentJob","view","setView","React","jobs","setJobs","selectedJob","setSelectedJob","setJob","setPage","checkHasMore","setCheckHasMore","recomendedJobs","setRecomendedJobs","slidingPage","setLocation","jobTitle","setJobTitle","jobSliderRef","useRef","jobSlideSettings","dots","infinite","speed","slidesToShow","round","screen","width","slidesToScroll","autoPlay","autoPlaySpeed","logoSliderRef","logoSlides","logoSlideSettings","fetchData","res","data","newJobs","fetchRecomendedData","filteredJobs","filter","item","toLowerCase","includes","currentView","onJobSelect","jobName","update","pathname","locationValue","faSearch","ref","element","current","slickPrev","faArrowLeft","slickNext","faArrowRight","alt","dataLength","hasMore","next","loader","sendQuery","body","validate","reduce","acc","field","color","formStatus","setFormStatus","btnStatus","setBtnStatus","companyName","query","formData","setFormData","call","onSubmit","e","preventDefault","setTimeout","handleChange","prevFormData","target","url","faPhone","faEnvelope","faMapMarker","action","required","onChange","placeholder","cols","rows","getProducts","updateProduct","product","products","setProducts","fetchProducts","useContext","UserContext","dispatch","user","form","subFields","split","updateForm","option","updateDiscipline","htmlFor","Multiselect","onSelect","onRemove","isObject","options","selectedValues","accept","file","files","min","Date","toISOString","max","setQualification","setQualifications","emptyInpurError","setEmptyInputError","updateQualification","updatedQulifications","newQualifications","onBlur","trim","tempQualifications","setDuties","setDuty","updatedDuties","newDuties","updateDuties","tempDuties","website","selectState","setSelectState","handleClick","event","checked","prevState","payment","defaultForm","region","useCookies","useLocation","s3Config","bucketName","dirName","accessKeyId","secretAccessKey","preview","setPreview","currentJobView","setCurrenetJobView","setForm","errorMessage","setErrorMessage","setFile","handleLogo","s3","ReactS3Client","uploadFile","alert","prevForm","section","subfield","message","jobView","showPreview","signup","login","logout","username","setName","setEmail","password","setPassword","setError","logging","setLogging","History","handleLogging","handleSubmit","method","setAuthCookie","payload","token","removeAuthCookie","handleLogout","openJob","hasMoreJobs","setHasMoreJobs","fetchPendingJobs","fetchRejectedJobs","loading","setLoading","updateLoading","flag","tabCookie","setTabCookie","tab","setTab","jobStatus","handleApprove","reload","handleReject","DropDown","str","values","selected","updateArray","updateSearchContents","rotation","setRotation","dropDownValues","setDropDownValues","dropDownName","charAt","toUpperCase","slice","updateDropDown","newDropDownValues","dropDownValue","updatedDropDownValues","faPlay","updatedRotation","some","selectSearch","createSelector","initialSearch","localStorage","getItem","parse","sector","searchSlice","createSlice","initialState","reducers","updateSearch","setItem","reducer","actions","defaultSearch","useDispatch","searchStatus","useSelector","setSearch","setDicipline","setSector","setCountry","prevSearch","updatedSearch","searchJobs","calculateSalary","removeItem","FullJobView","useParams","getJob","faArrowLeftLong","createContext","authCookie","SESSION","useReducer","Provider","exact","path","profilePopUp","setProfilePopUp","handleProfilePopUp","updatedProfilePopUp","RenderMenu","mobview","setMobview","Logo","searchData","setSearchData","setSearchResults","isOpen","setIsOpen","filteredData","items","updatedSearchData","cityData","setCityData","setSearchResult","fetch","then","json","updatedLocation","amount","hostingTime","offers","offer","faCheck","faXmark","ToggleSwitch","setChecked","productForm","setProductForm","rotateCard","setRotateCard","setStatus","submit","updateProductForm","updateOffer","newoffers","URLSearchParams","initialMapState","webmapId","webmapIdChanged","initialPaymentStatus","paymentSlice","updatePaymentStatus","combineReducers","Map","preloadedState","store","configureStore","rootReducer","AppContext","darkMode","init","getPreloadedState","createRoot","document","getElementById","render","configureAppStore","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","scripts","getElementsByTagName","Error","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","nc","__webpack_exports__"],"sourceRoot":""}